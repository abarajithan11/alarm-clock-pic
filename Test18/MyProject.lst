;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19-Dec-16 7:28:09 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF00EEFED  	GOTO        7642
_interrupt:
;MyProject.c,878 :: 		void interrupt(void)
0x0008	0xF015C000  	MOVFF       R0, 21
;MyProject.c,880 :: 		if (TMR0IF_bit)          //Timer Interrupt (every  1 seconds)
0x000C	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x000E	0xD075      	BRA         L_interrupt240
;MyProject.c,883 :: 		TMR0IF_bit = 0;
0x0010	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;MyProject.c,884 :: 		TMR0H	 = 0x0B;
0x0012	0x0E0B      	MOVLW       11
0x0014	0x6ED7      	MOVWF       TMR0H 
;MyProject.c,885 :: 		TMR0L	 = 0xDC;
0x0016	0x0EDC      	MOVLW       220
0x0018	0x6ED6      	MOVWF       TMR0L 
;MyProject.c,890 :: 		if(stopCounter)                                                                  //If stop counter is activated
0x001A	0x0100      	MOVLB       0
0x001C	0x5190      	MOVF        _stopCounter, 0, 1
0x001E	0x1191      	IORWF       _stopCounter+1, 0, 1
0x0020	0xE00F      	BZ          L_interrupt241
;MyProject.c,892 :: 		if(stopCounter > 90) stopCounter = 0;                                         //Expire the stop counter after 1.5 minutes
0x0022	0x0E80      	MOVLW       128
0x0024	0x6E00      	MOVWF       R0 
0x0026	0x0E80      	MOVLW       128
0x0028	0x1991      	XORWF       _stopCounter+1, 0, 1
0x002A	0x5C00      	SUBWF       R0, 0 
0x002C	0xE102      	BNZ         L__interrupt308
0x002E	0x5190      	MOVF        _stopCounter, 0, 1
0x0030	0x085A      	SUBLW       90
L__interrupt308:
0x0032	0xE203      	BC          L_interrupt242
0x0034	0x6B90      	CLRF        _stopCounter, 1
0x0036	0x6B91      	CLRF        _stopCounter+1, 1
0x0038	0xD002      	BRA         L_interrupt243
L_interrupt242:
;MyProject.c,893 :: 		else stopCounter += 1;                                                         //Increment the counter by 1 second.
0x003A	0x4B90      	INFSNZ      _stopCounter, 1, 1
0x003C	0x2B91      	INCF        _stopCounter+1, 1, 1
L_interrupt243:
;MyProject.c,894 :: 		}
0x003E	0xD044      	BRA         L_interrupt244
L_interrupt241:
;MyProject.c,899 :: 		else if(!gobackAlarm)
0x0040	0x5243      	MOVF        _goBackAlarm, 1 
0x0042	0xE142      	BNZ         L_interrupt245
;MyProject.c,902 :: 		if      (alarmStatus[0] && (nowAP == alarmAP[0]) && (nowHrBin == alarmHr[0]) && (nowMinBin == alarmMinute[0]))
0x0044	0x0101      	MOVLB       1
0x0046	0x533D      	MOVF        _alarmStatus, 1, 1
0x0048	0xE014      	BZ          L_interrupt248
0x004A	0x0E00      	MOVLW       0
0x004C	0xBE31      	BTFSC       _alarmAP, 7 
0x004E	0x0EFF      	MOVLW       255
0x0050	0x19A0      	XORWF       _nowAP+1, 0, 1
0x0052	0xE102      	BNZ         L__interrupt309
0x0054	0x5031      	MOVF        _alarmAP, 0 
0x0056	0x199F      	XORWF       _nowAP, 0, 1
L__interrupt309:
0x0058	0xE10C      	BNZ         L_interrupt248
0x005A	0x51A2      	MOVF        _nowHrBin+1, 0, 1
0x005C	0x181A      	XORWF       _alarmHr+1, 0 
0x005E	0xE102      	BNZ         L__interrupt310
0x0060	0x5019      	MOVF        _alarmHr, 0 
0x0062	0x19A1      	XORWF       _nowHrBin, 0, 1
L__interrupt310:
0x0064	0xE106      	BNZ         L_interrupt248
0x0066	0x51A3      	MOVF        _nowMinBin, 0, 1
0x0068	0x1816      	XORWF       _alarmMinute, 0 
0x006A	0xE103      	BNZ         L_interrupt248
L__interrupt276:
;MyProject.c,903 :: 		{goBackAlarm = 1;}
0x006C	0x0E01      	MOVLW       1
0x006E	0x6E43      	MOVWF       _goBackAlarm 
0x0070	0xD02B      	BRA         L_interrupt249
L_interrupt248:
;MyProject.c,904 :: 		else if (alarmStatus[1] && (nowAP == alarmAP[1]) && (nowHrBin == alarmHr[1]) && (nowMinBin == alarmMinute[1]))
0x0072	0x533E      	MOVF        _alarmStatus+1, 1, 1
0x0074	0xE014      	BZ          L_interrupt252
0x0076	0x0E00      	MOVLW       0
0x0078	0xBE32      	BTFSC       _alarmAP+1, 7 
0x007A	0x0EFF      	MOVLW       255
0x007C	0x19A0      	XORWF       _nowAP+1, 0, 1
0x007E	0xE102      	BNZ         L__interrupt311
0x0080	0x5032      	MOVF        _alarmAP+1, 0 
0x0082	0x199F      	XORWF       _nowAP, 0, 1
L__interrupt311:
0x0084	0xE10C      	BNZ         L_interrupt252
0x0086	0x51A2      	MOVF        _nowHrBin+1, 0, 1
0x0088	0x181C      	XORWF       _alarmHr+3, 0 
0x008A	0xE102      	BNZ         L__interrupt312
0x008C	0x501B      	MOVF        _alarmHr+2, 0 
0x008E	0x19A1      	XORWF       _nowHrBin, 0, 1
L__interrupt312:
0x0090	0xE106      	BNZ         L_interrupt252
0x0092	0x51A3      	MOVF        _nowMinBin, 0, 1
0x0094	0x1817      	XORWF       _alarmMinute+1, 0 
0x0096	0xE103      	BNZ         L_interrupt252
L__interrupt275:
;MyProject.c,905 :: 		{goBackAlarm = 2;}
0x0098	0x0E02      	MOVLW       2
0x009A	0x6E43      	MOVWF       _goBackAlarm 
0x009C	0xD015      	BRA         L_interrupt253
L_interrupt252:
;MyProject.c,906 :: 		else if (alarmStatus[2] && (nowAP == alarmAP[2]) && (nowHrBin == alarmHr[2]) && (nowMinBin == alarmMinute[2]))
0x009E	0x533F      	MOVF        _alarmStatus+2, 1, 1
0x00A0	0xE013      	BZ          L_interrupt256
0x00A2	0x0E00      	MOVLW       0
0x00A4	0xBE33      	BTFSC       _alarmAP+2, 7 
0x00A6	0x0EFF      	MOVLW       255
0x00A8	0x19A0      	XORWF       _nowAP+1, 0, 1
0x00AA	0xE102      	BNZ         L__interrupt313
0x00AC	0x5033      	MOVF        _alarmAP+2, 0 
0x00AE	0x199F      	XORWF       _nowAP, 0, 1
L__interrupt313:
0x00B0	0xE10B      	BNZ         L_interrupt256
0x00B2	0x51A2      	MOVF        _nowHrBin+1, 0, 1
0x00B4	0x181E      	XORWF       _alarmHr+5, 0 
0x00B6	0xE102      	BNZ         L__interrupt314
0x00B8	0x501D      	MOVF        _alarmHr+4, 0 
0x00BA	0x19A1      	XORWF       _nowHrBin, 0, 1
L__interrupt314:
0x00BC	0xE105      	BNZ         L_interrupt256
0x00BE	0x51A3      	MOVF        _nowMinBin, 0, 1
0x00C0	0x1818      	XORWF       _alarmMinute+2, 0 
0x00C2	0xE102      	BNZ         L_interrupt256
L__interrupt274:
;MyProject.c,907 :: 		goBackAlarm = 3;
0x00C4	0x0E03      	MOVLW       3
0x00C6	0x6E43      	MOVWF       _goBackAlarm 
L_interrupt256:
L_interrupt253:
L_interrupt249:
;MyProject.c,909 :: 		}
L_interrupt245:
L_interrupt244:
0x00C8	0x0101      	MOVLB       1
;MyProject.c,912 :: 		nowSecBin ++;
0x00CA	0x4BA4      	INFSNZ      _nowSecBin, 1, 1
0x00CC	0x2BA5      	INCF        _nowSecBin+1, 1, 1
;MyProject.c,913 :: 		if(nowSecBin > 59)
0x00CE	0x0E80      	MOVLW       128
0x00D0	0x6E00      	MOVWF       R0 
0x00D2	0x0E80      	MOVLW       128
0x00D4	0x19A5      	XORWF       _nowSecBin+1, 0, 1
0x00D6	0x5C00      	SUBWF       R0, 0 
0x00D8	0xE102      	BNZ         L__interrupt315
0x00DA	0x51A4      	MOVF        _nowSecBin, 0, 1
0x00DC	0x083B      	SUBLW       59
L__interrupt315:
0x00DE	0xE20D      	BC          L_interrupt257
;MyProject.c,915 :: 		nowSecBin = 0;
0x00E0	0x6BA4      	CLRF        _nowSecBin, 1
0x00E2	0x6BA5      	CLRF        _nowSecBin+1, 1
;MyProject.c,916 :: 		nowMinBin++;
0x00E4	0x2BA3      	INCF        _nowMinBin, 1, 1
;MyProject.c,918 :: 		if(nowMinBin >59)
0x00E6	0x0E80      	MOVLW       128
0x00E8	0x0A3B      	XORLW       59
0x00EA	0x6E00      	MOVWF       R0 
0x00EC	0x0E80      	MOVLW       128
0x00EE	0x19A3      	XORWF       _nowMinBin, 0, 1
0x00F0	0x5C00      	SUBWF       R0, 0 
0x00F2	0xE203      	BC          L_interrupt258
;MyProject.c,920 :: 		nowHrBin ++;                //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< COULD GIVE ERROR
0x00F4	0x4BA1      	INFSNZ      _nowHrBin, 1, 1
0x00F6	0x2BA2      	INCF        _nowHrBin+1, 1, 1
;MyProject.c,921 :: 		nowMinBin = 0;
0x00F8	0x6BA3      	CLRF        _nowMinBin, 1
;MyProject.c,922 :: 		}
L_interrupt258:
;MyProject.c,923 :: 		}
L_interrupt257:
;MyProject.c,925 :: 		}
L_interrupt240:
;MyProject.c,926 :: 		}
L_end_interrupt:
L__interrupt307:
0x00FA	0xF000C015  	MOVFF       21, R0
0x00FE	0x0011      	RETFIE      1
; end of _interrupt
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0100	0x0E0F      	MOVLW       15
0x0102	0x6E0C      	MOVWF       R12, 0
0x0104	0x0E47      	MOVLW       71
0x0106	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x0108	0x2E0D      	DECFSZ      R13, 1, 0
0x010A	0xD7FE      	BRA         L_Delay_5500us5
0x010C	0x2E0C      	DECFSZ      R12, 1, 0
0x010E	0xD7FC      	BRA         L_Delay_5500us5
0x0110	0x0000      	NOP
0x0112	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0114	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0116	0x0E21      	MOVLW       33
0x0118	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x011A	0x2E0D      	DECFSZ      R13, 1, 0
0x011C	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x011E	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0120	0x0000      	NOP
0x0122	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0124	0x0012      	RETURN      0
; end of _Delay_1us
_Div_16x16_S_L:
;__Lib_Math.c,139 :: 		
;__Lib_Math.c,146 :: 		
0x0126	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,147 :: 		
0x0128	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,148 :: 		
0x012A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,149 :: 		
0x012C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,150 :: 		
0x012E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,151 :: 		
0x0130	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,152 :: 		
0x0132	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,153 :: 		
0x0134	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,154 :: 		
0x0136	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,155 :: 		
0x0138	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,156 :: 		
0x013A	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,158 :: 		
0x013C	0x0E0F      	MOVLW       15
;__Lib_Math.c,159 :: 		
0x013E	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,161 :: 		
0x0140	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,162 :: 		
0x0142	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,163 :: 		
0x0144	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,164 :: 		
0x0146	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,166 :: 		
0x0148	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,167 :: 		
0x014A	0xD006      	BRA         $+14
;__Lib_Math.c,168 :: 		
0x014C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,169 :: 		
0x014E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,170 :: 		
0x0150	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,171 :: 		
0x0152	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,172 :: 		
0x0154	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,173 :: 		
0x0156	0xD005      	BRA         $+12
;__Lib_Math.c,175 :: 		
0x0158	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,176 :: 		
0x015A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,177 :: 		
0x015C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,178 :: 		
0x015E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,179 :: 		
0x0160	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,181 :: 		
0x0162	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,182 :: 		
0x0164	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,184 :: 		
0x0166	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,185 :: 		
0x0168	0xD7EB      	BRA         $-40
;__Lib_Math.c,187 :: 		
0x016A	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,188 :: 		
0x016C	0xD006      	BRA         $+14
;__Lib_Math.c,189 :: 		
0x016E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,190 :: 		
0x0170	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,191 :: 		
0x0172	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,192 :: 		
0x0174	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,193 :: 		
0x0176	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,194 :: 		
0x0178	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,195 :: 		
0x017A	0x0000      	NOP
;__Lib_Math.c,197 :: 		
L_end_Div_16x16_S_L:
0x017C	0x0012      	RETURN      0
; end of _Div_16x16_S_L
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x017E	0x0101      	MOVLB       1
0x0180	0xBFC0      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0182	0xD002      	BRA         L__Lcd_Cmd21
0x0184	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0186	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0188	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x018A	0xBDC0      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x018C	0xD002      	BRA         L__Lcd_Cmd23
0x018E	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0190	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0192	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0194	0xBBC0      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0196	0xD002      	BRA         L__Lcd_Cmd25
0x0198	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x019A	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x019C	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x019E	0xB9C0      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x01A0	0xD002      	BRA         L__Lcd_Cmd27
0x01A2	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x01A4	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x01A6	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x01A8	0xB1A6      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x01AA	0xD002      	BRA         L__Lcd_Cmd29
0x01AC	0x8481      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x01AE	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x01B0	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x01B2	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x01B4	0xDFB5      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x01B6	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x01B8	0xB7C0      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x01BA	0xD002      	BRA         L__Lcd_Cmd31
0x01BC	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x01BE	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x01C0	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x01C2	0xB5C0      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x01C4	0xD002      	BRA         L__Lcd_Cmd33
0x01C6	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x01C8	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x01CA	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x01CC	0xB3C0      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x01CE	0xD002      	BRA         L__Lcd_Cmd35
0x01D0	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x01D2	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x01D4	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x01D6	0xB1C0      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x01D8	0xD002      	BRA         L__Lcd_Cmd37
0x01DA	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x01DC	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x01DE	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x01E0	0xB1A6      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x01E2	0xD002      	BRA         L__Lcd_Cmd39
0x01E4	0x8481      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x01E6	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x01E8	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x01EA	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x01EC	0xDF99      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x01EE	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x01F0	0xA1A6      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x01F2	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x01F4	0xDF85      	RCALL       _Delay_5500us
0x01F6	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x01F8	0xDF8E      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x01FA	0x0012      	RETURN      0
; end of _Lcd_Cmd
_I2C1_Is_Idle:
;__Lib_I2C_c34.c,29 :: 		
;__Lib_I2C_c34.c,30 :: 		
0x01FC	0xB4C7      	BTFSC       SSPSTAT, 2 
0x01FE	0xD009      	BRA         L_I2C1_Is_Idle0
;__Lib_I2C_c34.c,31 :: 		
0x0200	0x0E1F      	MOVLW       31
0x0202	0x14C5      	ANDWF       SSPCON2, 0 
0x0204	0x6E01      	MOVWF       R1 
0x0206	0x5001      	MOVF        R1, 0 
0x0208	0x0A00      	XORLW       0
0x020A	0xE103      	BNZ         L_I2C1_Is_Idle1
;__Lib_I2C_c34.c,32 :: 		
0x020C	0x0E01      	MOVLW       1
0x020E	0x6E00      	MOVWF       R0 
0x0210	0xD001      	BRA         L_end_I2C1_Is_Idle
L_I2C1_Is_Idle1:
L_I2C1_Is_Idle0:
;__Lib_I2C_c34.c,33 :: 		
0x0212	0x6A00      	CLRF        R0 
;__Lib_I2C_c34.c,34 :: 		
L_end_I2C1_Is_Idle:
0x0214	0x0012      	RETURN      0
; end of _I2C1_Is_Idle
_I2C1_Wr:
;__Lib_I2C_c34.c,84 :: 		
;__Lib_I2C_c34.c,86 :: 		
0x0216	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_c34.c,87 :: 		
0x0218	0xFFC9C1BE  	MOVFF       FARG_I2C1_Wr_data_, SSPBUF
;__Lib_I2C_c34.c,89 :: 		
L_I2C1_Wr18:
0x021C	0xA4C7      	BTFSS       SSPSTAT, 2 
0x021E	0xD001      	BRA         L_I2C1_Wr19
;__Lib_I2C_c34.c,90 :: 		
0x0220	0xD7FD      	BRA         L_I2C1_Wr18
L_I2C1_Wr19:
;__Lib_I2C_c34.c,92 :: 		
L_I2C1_Wr20:
0x0222	0xB69E      	BTFSC       PIR1, 3 
0x0224	0xD001      	BRA         L_I2C1_Wr21
;__Lib_I2C_c34.c,93 :: 		
0x0226	0xD7FD      	BRA         L_I2C1_Wr20
L_I2C1_Wr21:
;__Lib_I2C_c34.c,95 :: 		
0x0228	0xBCC5      	BTFSC       SSPCON2, 6 
0x022A	0xD002      	BRA         L_I2C1_Wr22
;__Lib_I2C_c34.c,96 :: 		
0x022C	0x6A00      	CLRF        R0 
0x022E	0xD003      	BRA         L_end_I2C1_Wr
;__Lib_I2C_c34.c,97 :: 		
L_I2C1_Wr22:
;__Lib_I2C_c34.c,99 :: 		
0x0230	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_c34.c,100 :: 		
0x0232	0x0E02      	MOVLW       2
0x0234	0x6E00      	MOVWF       R0 
;__Lib_I2C_c34.c,102 :: 		
L_end_I2C1_Wr:
0x0236	0x0012      	RETURN      0
; end of _I2C1_Wr
_I2C1_Start:
;__Lib_I2C_c34.c,36 :: 		
;__Lib_I2C_c34.c,39 :: 		
0x0238	0x0101      	MOVLB       1
0x023A	0x6BBE      	CLRF        I2C1_Start_j_L0, 1
0x023C	0x6BBF      	CLRF        I2C1_Start_j_L0+1, 1
L_I2C1_Start2:
0x023E	0x51BF      	MOVF        I2C1_Start_j_L0+1, 0, 1
0x0240	0x0812      	SUBLW       18
0x0242	0xE102      	BNZ         L__I2C1_Start27
0x0244	0x51BE      	MOVF        I2C1_Start_j_L0, 0, 1
0x0246	0x088E      	SUBLW       142
L__I2C1_Start27:
0x0248	0xE308      	BNC         L_I2C1_Start3
;__Lib_I2C_c34.c,40 :: 		
0x024A	0xDFD8      	RCALL       _I2C1_Is_Idle
0x024C	0x5200      	MOVF        R0, 1 
0x024E	0xE001      	BZ          L_I2C1_Start5
;__Lib_I2C_c34.c,41 :: 		
0x0250	0xD004      	BRA         L_I2C1_Start3
L_I2C1_Start5:
;__Lib_I2C_c34.c,39 :: 		
0x0252	0x0101      	MOVLB       1
0x0254	0x4BBE      	INFSNZ      I2C1_Start_j_L0, 1, 1
0x0256	0x2BBF      	INCF        I2C1_Start_j_L0+1, 1, 1
;__Lib_I2C_c34.c,42 :: 		
0x0258	0xD7F2      	BRA         L_I2C1_Start2
L_I2C1_Start3:
0x025A	0x0101      	MOVLB       1
;__Lib_I2C_c34.c,44 :: 		
0x025C	0x0E12      	MOVLW       18
0x025E	0x5DBF      	SUBWF       I2C1_Start_j_L0+1, 0, 1
0x0260	0xE102      	BNZ         L__I2C1_Start28
0x0262	0x0E8F      	MOVLW       143
0x0264	0x5DBE      	SUBWF       I2C1_Start_j_L0, 0, 1
L__I2C1_Start28:
0x0266	0xE303      	BNC         L_I2C1_Start6
;__Lib_I2C_c34.c,45 :: 		
0x0268	0x0E7B      	MOVLW       123
0x026A	0x6E00      	MOVWF       R0 
0x026C	0xD005      	BRA         L_end_I2C1_Start
L_I2C1_Start6:
;__Lib_I2C_c34.c,47 :: 		
0x026E	0x80C5      	BSF         SSPCON2, 0 
;__Lib_I2C_c34.c,48 :: 		
L_I2C1_Start8:
0x0270	0xA0C5      	BTFSS       SSPCON2, 0 
0x0272	0xD001      	BRA         L_I2C1_Start9
;__Lib_I2C_c34.c,49 :: 		
0x0274	0xD7FD      	BRA         L_I2C1_Start8
L_I2C1_Start9:
;__Lib_I2C_c34.c,50 :: 		
0x0276	0x6A00      	CLRF        R0 
;__Lib_I2C_c34.c,52 :: 		
L_end_I2C1_Start:
0x0278	0x0012      	RETURN      0
; end of _I2C1_Start
_I2C1_Stop:
;__Lib_I2C_c34.c,105 :: 		
;__Lib_I2C_c34.c,106 :: 		
0x027A	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_c34.c,107 :: 		
L_end_I2C1_Stop:
0x027C	0x0012      	RETURN      0
; end of _I2C1_Stop
_Div_16x16_S:
;__Lib_Math.c,200 :: 		
;__Lib_Math.c,208 :: 		
0x027E	0x5004      	MOVF        R4, 0 
0x0280	0x0A00      	XORLW       0
0x0282	0xE108      	BNZ         L_Div_16x16_S0
;__Lib_Math.c,209 :: 		
0x0284	0x5005      	MOVF        R5, 0 
0x0286	0x0A00      	XORLW       0
0x0288	0xE105      	BNZ         L_Div_16x16_S1
;__Lib_Math.c,210 :: 		
0x028A	0x0EFF      	MOVLW       255
0x028C	0x6E00      	MOVWF       R0 
;__Lib_Math.c,211 :: 		
0x028E	0x0E7F      	MOVLW       127
0x0290	0x6E01      	MOVWF       R1 
;__Lib_Math.c,212 :: 		
0x0292	0xD057      	BRA         L_end_Div_16x16_S
;__Lib_Math.c,213 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,216 :: 		
0x0294	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,217 :: 		
0x0296	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,218 :: 		
0x0298	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,219 :: 		
0x029A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,220 :: 		
0x029C	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,221 :: 		
0x029E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,222 :: 		
0x02A0	0x0C00      	RETLW       0
;__Lib_Math.c,224 :: 		
0x02A2	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,225 :: 		
0x02A4	0x1805      	XORWF       R5, 0, 0
;__Lib_Math.c,226 :: 		
0x02A6	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,227 :: 		
0x02A8	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,228 :: 		
0x02AA	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,230 :: 		
0x02AC	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,232 :: 		
0x02AE	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,233 :: 		
0x02B0	0xD005      	BRA         $+12
;__Lib_Math.c,235 :: 		
0x02B2	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,236 :: 		
0x02B4	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,237 :: 		
0x02B6	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,238 :: 		
0x02B8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,239 :: 		
0x02BA	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,241 :: 		
0x02BC	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,242 :: 		
0x02BE	0xD005      	BRA         $+12
;__Lib_Math.c,244 :: 		
0x02C0	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,245 :: 		
0x02C2	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,246 :: 		
0x02C4	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,247 :: 		
0x02C6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,248 :: 		
0x02C8	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,250 :: 		
0x02CA	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,251 :: 		
0x02CC	0x1005      	IORWF       R5, 0, 0
;__Lib_Math.c,252 :: 		
0x02CE	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,253 :: 		
0x02D0	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,254 :: 		
0x02D2	0xD010      	BRA         $+34
;__Lib_Math.c,256 :: 		
0x02D4	0xDF28      	RCALL       _Div_16x16_S_L
;__Lib_Math.c,258 :: 		
0x02D6	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,259 :: 		
0x02D8	0xD020      	BRA         $+66
;__Lib_Math.c,261 :: 		
0x02DA	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,262 :: 		
0x02DC	0x0C00      	RETLW       0
;__Lib_Math.c,264 :: 		
0x02DE	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,265 :: 		
0x02E0	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,266 :: 		
0x02E2	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,267 :: 		
0x02E4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,268 :: 		
0x02E6	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,270 :: 		
0x02E8	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,271 :: 		
0x02EA	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,272 :: 		
0x02EC	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,273 :: 		
0x02EE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,274 :: 		
0x02F0	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,276 :: 		
0x02F2	0x0C00      	RETLW       0
;__Lib_Math.c,278 :: 		
0x02F4	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,279 :: 		
0x02F6	0xD00D      	BRA         $+28
;__Lib_Math.c,280 :: 		
0x02F8	0xBE01      	BTFSC       R1, 7, 0
;__Lib_Math.c,281 :: 		
0x02FA	0xD007      	BRA         $+16
;__Lib_Math.c,282 :: 		
0x02FC	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,283 :: 		
0x02FE	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,284 :: 		
0x0300	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,285 :: 		
0x0302	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,286 :: 		
0x0304	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,287 :: 		
0x0306	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,288 :: 		
0x0308	0xD7E8      	BRA         $-46
;__Lib_Math.c,289 :: 		
0x030A	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,290 :: 		
0x030C	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,291 :: 		
0x030E	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,292 :: 		
0x0310	0x0C00      	RETLW       0
;__Lib_Math.c,294 :: 		
0x0312	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,295 :: 		
0x0314	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,296 :: 		
0x0316	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,297 :: 		
0x0318	0xD7DD      	BRA         $-68
;__Lib_Math.c,299 :: 		
0x031A	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,300 :: 		
0x031C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,301 :: 		
0x031E	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,302 :: 		
0x0320	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,303 :: 		
0x0322	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,304 :: 		
0x0324	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,305 :: 		
0x0326	0xD7D9      	BRA         $-76
;__Lib_Math.c,306 :: 		
0x0328	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,307 :: 		
0x032A	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,308 :: 		
0x032C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,309 :: 		
0x032E	0xD7D5      	BRA         $-84
;__Lib_Math.c,310 :: 		
0x0330	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,311 :: 		
0x0332	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,312 :: 		
0x0334	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,313 :: 		
0x0336	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,314 :: 		
0x0338	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,315 :: 		
0x033A	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,316 :: 		
0x033C	0xD7CE      	BRA         $-98
;__Lib_Math.c,317 :: 		
0x033E	0x0000      	NOP
;__Lib_Math.c,318 :: 		
0x0340	0x0CFF      	RETLW       255
;__Lib_Math.c,320 :: 		
L_end_Div_16x16_S:
0x0342	0x0012      	RETURN      0
; end of _Div_16x16_S
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0344	0x0101      	MOVLB       1
0x0346	0x91A6      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x0348	0xF1C0C1BE  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x034C	0xDF18      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x034E	0x81A6      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0350	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_BCD2UpperCh:
;MyProject.c,106 :: 		unsigned char BCD2UpperCh(unsigned char bcd)
;MyProject.c,108 :: 		return ((bcd >> 4) + '0');
0x0352	0xF000C1BE  	MOVFF       FARG_BCD2UpperCh_bcd, R0
0x0356	0x3200      	RRCF        R0, 1 
0x0358	0x9E00      	BCF         R0, 7 
0x035A	0x3200      	RRCF        R0, 1 
0x035C	0x9E00      	BCF         R0, 7 
0x035E	0x3200      	RRCF        R0, 1 
0x0360	0x9E00      	BCF         R0, 7 
0x0362	0x3200      	RRCF        R0, 1 
0x0364	0x9E00      	BCF         R0, 7 
0x0366	0x0E30      	MOVLW       48
0x0368	0x2600      	ADDWF       R0, 1 
;MyProject.c,109 :: 		}
L_end_BCD2UpperCh:
0x036A	0x0012      	RETURN      0
; end of _BCD2UpperCh
_BCD2LowerCh:
;MyProject.c,111 :: 		unsigned char BCD2LowerCh(unsigned char bcd)
;MyProject.c,113 :: 		return ((bcd & 0x0F) + '0');
0x036C	0x0E0F      	MOVLW       15
0x036E	0x0101      	MOVLB       1
0x0370	0x15BE      	ANDWF       FARG_BCD2LowerCh_bcd, 0, 1
0x0372	0x6E00      	MOVWF       R0 
0x0374	0x0E30      	MOVLW       48
0x0376	0x2600      	ADDWF       R0, 1 
;MyProject.c,114 :: 		}
L_end_BCD2LowerCh:
0x0378	0x0012      	RETURN      0
; end of _BCD2LowerCh
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x037A	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x037C	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x037E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0380	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0382	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0384	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0388	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x038C	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x038E	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0390	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0394	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0398	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x039A	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x039C	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x039E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x03A0	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x03A2	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x03A4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x03A6	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x03A8	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x03AA	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x03AC	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x03AE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x03B0	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x03B2	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x03B4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x03B6	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x03B8	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x03BC	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x03C0	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x03C4	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x03C8	0x0012      	RETURN      0
; end of _Mul_16X16_U
_time2Str:
;MyProject.c,158 :: 		void time2Str(int temp)            //Mode {0-for permanent memory. If not temp memory
;MyProject.c,160 :: 		if (temp)
0x03CA	0x0101      	MOVLB       1
0x03CC	0x51B9      	MOVF        FARG_time2Str_temp, 0, 1
0x03CE	0x11BA      	IORWF       FARG_time2Str_temp+1, 0, 1
0x03D0	0xE02A      	BZ          L_time2Str0
;MyProject.c,162 :: 		time[0] = BCD2UpperCh(hr2);
0x03D2	0xF1BEC196  	MOVFF       _hr2, FARG_BCD2UpperCh_bcd
0x03D6	0xDFBD      	RCALL       _BCD2UpperCh
0x03D8	0xF034C000  	MOVFF       R0, _time
;MyProject.c,163 :: 		time[1] = BCD2LowerCh(hr2);
0x03DC	0xF1BEC196  	MOVFF       _hr2, FARG_BCD2LowerCh_bcd
0x03E0	0xDFC5      	RCALL       _BCD2LowerCh
0x03E2	0xF035C000  	MOVFF       R0, _time+1
;MyProject.c,164 :: 		time[3] = BCD2UpperCh(minute2);
0x03E6	0xF1BEC19E  	MOVFF       _minute2, FARG_BCD2UpperCh_bcd
0x03EA	0xDFB3      	RCALL       _BCD2UpperCh
0x03EC	0xF037C000  	MOVFF       R0, _time+3
;MyProject.c,165 :: 		time[4] = BCD2LowerCh(minute2);
0x03F0	0xF1BEC19E  	MOVFF       _minute2, FARG_BCD2LowerCh_bcd
0x03F4	0xDFBB      	RCALL       _BCD2LowerCh
0x03F6	0xF038C000  	MOVFF       R0, _time+4
;MyProject.c,166 :: 		time[6] = BCD2UpperCh(second2);
0x03FA	0xF1BEC19C  	MOVFF       _second2, FARG_BCD2UpperCh_bcd
0x03FE	0xDFA9      	RCALL       _BCD2UpperCh
0x0400	0xF03AC000  	MOVFF       R0, _time+6
;MyProject.c,167 :: 		time[7] = BCD2LowerCh(second2);
0x0404	0xF1BEC19C  	MOVFF       _second2, FARG_BCD2LowerCh_bcd
0x0408	0xDFB1      	RCALL       _BCD2LowerCh
0x040A	0xF03BC000  	MOVFF       R0, _time+7
;MyProject.c,169 :: 		if(ap2)
0x040E	0x5393      	MOVF        _ap2, 1, 1
0x0410	0xE005      	BZ          L_time2Str1
;MyProject.c,171 :: 		time[9] = 'P';
0x0412	0x0E50      	MOVLW       80
0x0414	0x6E3D      	MOVWF       _time+9 
;MyProject.c,172 :: 		time[10] = 'M';
0x0416	0x0E4D      	MOVLW       77
0x0418	0x6E3E      	MOVWF       _time+10 
;MyProject.c,173 :: 		}
0x041A	0xD004      	BRA         L_time2Str2
L_time2Str1:
;MyProject.c,176 :: 		time[9] = 'A';
0x041C	0x0E41      	MOVLW       65
0x041E	0x6E3D      	MOVWF       _time+9 
;MyProject.c,177 :: 		time[10] = 'M';
0x0420	0x0E4D      	MOVLW       77
0x0422	0x6E3E      	MOVWF       _time+10 
;MyProject.c,178 :: 		}
L_time2Str2:
;MyProject.c,179 :: 		}
0x0424	0xD029      	BRA         L_time2Str3
L_time2Str0:
;MyProject.c,182 :: 		time[0] = BCD2UpperCh(hr);
0x0426	0xF1BEC198  	MOVFF       _hr, FARG_BCD2UpperCh_bcd
0x042A	0xDF93      	RCALL       _BCD2UpperCh
0x042C	0xF034C000  	MOVFF       R0, _time
;MyProject.c,183 :: 		time[1] = BCD2LowerCh(hr);
0x0430	0xF1BEC198  	MOVFF       _hr, FARG_BCD2LowerCh_bcd
0x0434	0xDF9B      	RCALL       _BCD2LowerCh
0x0436	0xF035C000  	MOVFF       R0, _time+1
;MyProject.c,184 :: 		time[3] = BCD2UpperCh(minute);
0x043A	0xF1BEC1AB  	MOVFF       _minute, FARG_BCD2UpperCh_bcd
0x043E	0xDF89      	RCALL       _BCD2UpperCh
0x0440	0xF037C000  	MOVFF       R0, _time+3
;MyProject.c,185 :: 		time[4] = BCD2LowerCh(minute);
0x0444	0xF1BEC1AB  	MOVFF       _minute, FARG_BCD2LowerCh_bcd
0x0448	0xDF91      	RCALL       _BCD2LowerCh
0x044A	0xF038C000  	MOVFF       R0, _time+4
;MyProject.c,186 :: 		time[6] = BCD2UpperCh(second);
0x044E	0xF1BEC19D  	MOVFF       _second, FARG_BCD2UpperCh_bcd
0x0452	0xDF7F      	RCALL       _BCD2UpperCh
0x0454	0xF03AC000  	MOVFF       R0, _time+6
;MyProject.c,187 :: 		time[7] = BCD2LowerCh(second);
0x0458	0xF1BEC19D  	MOVFF       _second, FARG_BCD2LowerCh_bcd
0x045C	0xDF87      	RCALL       _BCD2LowerCh
0x045E	0xF03BC000  	MOVFF       R0, _time+7
;MyProject.c,189 :: 		if(ap)
0x0462	0x5392      	MOVF        _ap, 1, 1
0x0464	0xE005      	BZ          L_time2Str4
;MyProject.c,191 :: 		time[9] = 'P';
0x0466	0x0E50      	MOVLW       80
0x0468	0x6E3D      	MOVWF       _time+9 
;MyProject.c,192 :: 		time[10] = 'M';
0x046A	0x0E4D      	MOVLW       77
0x046C	0x6E3E      	MOVWF       _time+10 
;MyProject.c,193 :: 		}
0x046E	0xD004      	BRA         L_time2Str5
L_time2Str4:
;MyProject.c,196 :: 		time[9] = 'A';
0x0470	0x0E41      	MOVLW       65
0x0472	0x6E3D      	MOVWF       _time+9 
;MyProject.c,197 :: 		time[10] = 'M';
0x0474	0x0E4D      	MOVLW       77
0x0476	0x6E3E      	MOVWF       _time+10 
;MyProject.c,198 :: 		}
L_time2Str5:
;MyProject.c,199 :: 		}
L_time2Str3:
;MyProject.c,200 :: 		}
L_end_time2Str:
0x0478	0x0012      	RETURN      0
; end of _time2Str
_BCD2Binary:
;MyProject.c,130 :: 		int BCD2Binary(int a)
;MyProject.c,133 :: 		t = a & 0x0F;
0x047A	0x0E0F      	MOVLW       15
0x047C	0x0101      	MOVLB       1
0x047E	0x15B9      	ANDWF       FARG_BCD2Binary_a, 0, 1
0x0480	0x6FBB      	MOVWF       FLOC__BCD2Binary, 1
0x0482	0xF1BCC1BA  	MOVFF       FARG_BCD2Binary_a+1, FLOC__BCD2Binary+1
0x0486	0x0E00      	MOVLW       0
0x0488	0x17BC      	ANDWF       FLOC__BCD2Binary+1, 1, 1
;MyProject.c,135 :: 		a = 0xF0 & a;
0x048A	0x0EF0      	MOVLW       240
0x048C	0x15B9      	ANDWF       FARG_BCD2Binary_a, 0, 1
0x048E	0x6E03      	MOVWF       R3 
0x0490	0xF004C1BA  	MOVFF       FARG_BCD2Binary_a+1, R4
0x0494	0x0E00      	MOVLW       0
0x0496	0x1604      	ANDWF       R4, 1 
0x0498	0xF1B9C003  	MOVFF       R3, FARG_BCD2Binary_a
0x049C	0xF1BAC004  	MOVFF       R4, FARG_BCD2Binary_a+1
;MyProject.c,136 :: 		t = a >> 4;
0x04A0	0x0E04      	MOVLW       4
0x04A2	0x6E02      	MOVWF       R2 
0x04A4	0xF000C003  	MOVFF       R3, R0
0x04A8	0xF001C004  	MOVFF       R4, R1
0x04AC	0x5002      	MOVF        R2, 0 
L__BCD2Binary285:
0x04AE	0xE007      	BZ          L__BCD2Binary286
0x04B0	0x3201      	RRCF        R1, 1 
0x04B2	0x3200      	RRCF        R0, 1 
0x04B4	0x9E01      	BCF         R1, 7 
0x04B6	0xBC01      	BTFSC       R1, 6 
0x04B8	0x8E01      	BSF         R1, 7 
0x04BA	0x0FFF      	ADDLW       255
0x04BC	0xD7F8      	BRA         L__BCD2Binary285
L__BCD2Binary286:
;MyProject.c,137 :: 		t = 0x0F & t;
0x04BE	0x0E0F      	MOVLW       15
0x04C0	0x1600      	ANDWF       R0, 1 
0x04C2	0x0E00      	MOVLW       0
0x04C4	0x1601      	ANDWF       R1, 1 
;MyProject.c,138 :: 		r = t*10 + r;
0x04C6	0x0E0A      	MOVLW       10
0x04C8	0x6E04      	MOVWF       R4 
0x04CA	0x0E00      	MOVLW       0
0x04CC	0x6E05      	MOVWF       R5 
0x04CE	0xDF55      	RCALL       _Mul_16X16_U
0x04D0	0x51BB      	MOVF        FLOC__BCD2Binary, 0, 1
0x04D2	0x2600      	ADDWF       R0, 1 
0x04D4	0x51BC      	MOVF        FLOC__BCD2Binary+1, 0, 1
0x04D6	0x2201      	ADDWFC      R1, 1 
;MyProject.c,139 :: 		return r;
;MyProject.c,140 :: 		}
L_end_BCD2Binary:
0x04D8	0x0012      	RETURN      0
; end of _BCD2Binary
_Binary2BCD:
;MyProject.c,116 :: 		int Binary2BCD(int a)
;MyProject.c,119 :: 		t1 = a%10;
0x04DA	0x0E0A      	MOVLW       10
0x04DC	0x6E04      	MOVWF       R4 
0x04DE	0x0E00      	MOVLW       0
0x04E0	0x6E05      	MOVWF       R5 
0x04E2	0xF000C1B9  	MOVFF       FARG_Binary2BCD_a, R0
0x04E6	0xF001C1BA  	MOVFF       FARG_Binary2BCD_a+1, R1
0x04EA	0xDEC9      	RCALL       _Div_16x16_S
0x04EC	0xF000C008  	MOVFF       R8, R0
0x04F0	0xF001C009  	MOVFF       R9, R1
;MyProject.c,120 :: 		t1 = t1 & 0x0F;
0x04F4	0x0E0F      	MOVLW       15
0x04F6	0x1400      	ANDWF       R0, 0 
0x04F8	0x0101      	MOVLB       1
0x04FA	0x6FBB      	MOVWF       FLOC__Binary2BCD, 1
0x04FC	0xF1BCC001  	MOVFF       R1, FLOC__Binary2BCD+1
0x0500	0x0E00      	MOVLW       0
0x0502	0x17BC      	ANDWF       FLOC__Binary2BCD+1, 1, 1
;MyProject.c,121 :: 		a = a/10;
0x0504	0x0E0A      	MOVLW       10
0x0506	0x6E04      	MOVWF       R4 
0x0508	0x0E00      	MOVLW       0
0x050A	0x6E05      	MOVWF       R5 
0x050C	0xF000C1B9  	MOVFF       FARG_Binary2BCD_a, R0
0x0510	0xF001C1BA  	MOVFF       FARG_Binary2BCD_a+1, R1
0x0514	0xDEB4      	RCALL       _Div_16x16_S
0x0516	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x051A	0xF1BAC001  	MOVFF       R1, FARG_Binary2BCD_a+1
;MyProject.c,122 :: 		t2 = a%10;
0x051E	0x0E0A      	MOVLW       10
0x0520	0x6E04      	MOVWF       R4 
0x0522	0x0E00      	MOVLW       0
0x0524	0x6E05      	MOVWF       R5 
0x0526	0xDEAB      	RCALL       _Div_16x16_S
0x0528	0xF000C008  	MOVFF       R8, R0
0x052C	0xF001C009  	MOVFF       R9, R1
;MyProject.c,123 :: 		t2 = 0x0F & t2;
0x0530	0x0E0F      	MOVLW       15
0x0532	0x1400      	ANDWF       R0, 0 
0x0534	0x6E03      	MOVWF       R3 
0x0536	0xF004C001  	MOVFF       R1, R4
0x053A	0x0E00      	MOVLW       0
0x053C	0x1604      	ANDWF       R4, 1 
;MyProject.c,124 :: 		t2 = t2 << 4;
0x053E	0x0E04      	MOVLW       4
0x0540	0x6E02      	MOVWF       R2 
0x0542	0xF000C003  	MOVFF       R3, R0
0x0546	0xF001C004  	MOVFF       R4, R1
0x054A	0x5002      	MOVF        R2, 0 
L__Binary2BCD282:
0x054C	0xE005      	BZ          L__Binary2BCD283
0x054E	0x3600      	RLCF        R0, 1 
0x0550	0x9000      	BCF         R0, 0 
0x0552	0x3601      	RLCF        R1, 1 
0x0554	0x0FFF      	ADDLW       255
0x0556	0xD7FA      	BRA         L__Binary2BCD282
L__Binary2BCD283:
;MyProject.c,125 :: 		t2 = 0xF0 & t2;
0x0558	0x0EF0      	MOVLW       240
0x055A	0x1600      	ANDWF       R0, 1 
0x055C	0x0E00      	MOVLW       0
0x055E	0x1601      	ANDWF       R1, 1 
;MyProject.c,126 :: 		t1 = t1 | t2;
0x0560	0x0101      	MOVLB       1
0x0562	0x51BB      	MOVF        FLOC__Binary2BCD, 0, 1
0x0564	0x1200      	IORWF       R0, 1 
0x0566	0x51BC      	MOVF        FLOC__Binary2BCD+1, 0, 1
0x0568	0x1201      	IORWF       R1, 1 
;MyProject.c,127 :: 		return t1;
;MyProject.c,128 :: 		}
L_end_Binary2BCD:
0x056A	0x0012      	RETURN      0
; end of _Binary2BCD
_write_ds1307:
;MyProject.c,96 :: 		void write_ds1307(unsigned short address,unsigned short w_data)
;MyProject.c,98 :: 		I2C1_Start(); // issue I2C start signal
0x056C	0xDE65      	RCALL       _I2C1_Start
;MyProject.c,100 :: 		I2C1_Wr(0xD0); // send byte via I2C (device address + W)
0x056E	0x0ED0      	MOVLW       208
0x0570	0x0101      	MOVLB       1
0x0572	0x6FBE      	MOVWF       FARG_I2C1_Wr_data_, 1
0x0574	0xDE50      	RCALL       _I2C1_Wr
;MyProject.c,101 :: 		I2C1_Wr(address); // send byte (address of DS1307 location)
0x0576	0xF1BEC1B9  	MOVFF       FARG_write_ds1307_address, FARG_I2C1_Wr_data_
0x057A	0xDE4D      	RCALL       _I2C1_Wr
;MyProject.c,102 :: 		I2C1_Wr(w_data); // send data (data to be written)
0x057C	0xF1BEC1BA  	MOVFF       FARG_write_ds1307_w_data, FARG_I2C1_Wr_data_
0x0580	0xDE4A      	RCALL       _I2C1_Wr
;MyProject.c,103 :: 		I2C1_Stop(); // issue I2C stop signal
0x0582	0xDE7B      	RCALL       _I2C1_Stop
;MyProject.c,104 :: 		}
L_end_write_ds1307:
0x0584	0x0012      	RETURN      0
; end of _write_ds1307
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0586	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0588	0x0E80      	MOVLW       128
0x058A	0x0101      	MOVLB       1
0x058C	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x058E	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0590	0x0EC0      	MOVLW       192
0x0592	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0594	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0596	0x0E94      	MOVLW       148
0x0598	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x059A	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x059C	0x0ED4      	MOVLW       212
0x059E	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x05A0	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x05A2	0x0E80      	MOVLW       128
0x05A4	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x05A6	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x05A8	0x0101      	MOVLB       1
0x05AA	0x51B9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x05AC	0x0A01      	XORLW       1
0x05AE	0xE0EC      	BZ          L_Lcd_Out13
0x05B0	0x51B9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x05B2	0x0A02      	XORLW       2
0x05B4	0xE0ED      	BZ          L_Lcd_Out14
0x05B6	0x51B9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x05B8	0x0A03      	XORLW       3
0x05BA	0xE0ED      	BZ          L_Lcd_Out15
0x05BC	0x51B9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x05BE	0x0A04      	XORLW       4
0x05C0	0xE0ED      	BZ          L_Lcd_Out16
0x05C2	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x05C4	0x05BA      	DECF        FARG_Lcd_Out_column, 0, 1
0x05C6	0x6E00      	MOVWF       R0 
0x05C8	0x51B9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x05CA	0x2600      	ADDWF       R0, 1 
0x05CC	0xF1B9C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x05D0	0xF1C0C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x05D4	0xDDD4      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x05D6	0x91A6      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x05D8	0x6BBD      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x05DA	0x51BD      	MOVF        Lcd_Out_i_L0, 0, 1
0x05DC	0x25BB      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x05DE	0x6EE9      	MOVWF       FSR0L 
0x05E0	0x0E00      	MOVLW       0
0x05E2	0x21BC      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x05E4	0x6EEA      	MOVWF       FSR0H 
0x05E6	0x52EE      	MOVF        POSTINC0, 1 
0x05E8	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x05EA	0x51BD      	MOVF        Lcd_Out_i_L0, 0, 1
0x05EC	0x25BB      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x05EE	0x6EE9      	MOVWF       FSR0L 
0x05F0	0x0E00      	MOVLW       0
0x05F2	0x21BC      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x05F4	0x6EEA      	MOVWF       FSR0H 
0x05F6	0xF1BECFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x05FA	0xDEA4      	RCALL       _Lcd_Chr_CP
0x05FC	0x2BBD      	INCF        Lcd_Out_i_L0, 1, 1
0x05FE	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0600	0x81A6      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0602	0x0012      	RETURN      0
; end of _Lcd_Out
_abs:
;__Lib_CStdlib.c,37 :: 		
;__Lib_CStdlib.c,38 :: 		
0x0604	0x0E80      	MOVLW       128
0x0606	0x0101      	MOVLB       1
0x0608	0x19BA      	XORWF       FARG_abs_a+1, 0, 1
0x060A	0x6E00      	MOVWF       R0 
0x060C	0x0E80      	MOVLW       128
0x060E	0x5C00      	SUBWF       R0, 0 
0x0610	0xE102      	BNZ         L__abs93
0x0612	0x0E00      	MOVLW       0
0x0614	0x5DB9      	SUBWF       FARG_abs_a, 0, 1
L__abs93:
0x0616	0xE208      	BC          L_abs0
;__Lib_CStdlib.c,39 :: 		
0x0618	0x51B9      	MOVF        FARG_abs_a, 0, 1
0x061A	0x0800      	SUBLW       0
0x061C	0x6E00      	MOVWF       R0 
0x061E	0xF001C1BA  	MOVFF       FARG_abs_a+1, R1
0x0622	0x0E00      	MOVLW       0
0x0624	0x5601      	SUBFWB      R1, 1 
0x0626	0xD004      	BRA         L_end_abs
L_abs0:
;__Lib_CStdlib.c,40 :: 		
0x0628	0xF000C1B9  	MOVFF       FARG_abs_a, R0
0x062C	0xF001C1BA  	MOVFF       FARG_abs_a+1, R1
;__Lib_CStdlib.c,41 :: 		
L_end_abs:
0x0630	0x0012      	RETURN      0
; end of _abs
_populateAlarm:
;MyProject.c,539 :: 		void populateAlarm(int alarmNo)
;MyProject.c,541 :: 		switch(alarmNo)  //Add the alarm's number in LCD
0x0632	0xD01C      	BRA         L_populateAlarm130
;MyProject.c,543 :: 		case 1:
L_populateAlarm132:
;MyProject.c,544 :: 		menuAlarmText[0][6] = '1';
0x0634	0x0E06      	MOVLW       6
0x0636	0x0101      	MOVLB       1
0x0638	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x063A	0x6EE1      	MOVWF       FSR1L 
0x063C	0x0E00      	MOVLW       0
0x063E	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x0640	0x6EE2      	MOVWF       FSR1H 
0x0642	0x0E31      	MOVLW       49
0x0644	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,545 :: 		break;
0x0646	0xD025      	BRA         L_populateAlarm131
;MyProject.c,546 :: 		case 2:
L_populateAlarm133:
;MyProject.c,547 :: 		menuAlarmText[0][6] = '2';
0x0648	0x0E06      	MOVLW       6
0x064A	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x064C	0x6EE1      	MOVWF       FSR1L 
0x064E	0x0E00      	MOVLW       0
0x0650	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x0652	0x6EE2      	MOVWF       FSR1H 
0x0654	0x0E32      	MOVLW       50
0x0656	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,548 :: 		break;
0x0658	0xD01C      	BRA         L_populateAlarm131
;MyProject.c,549 :: 		case 3:
L_populateAlarm134:
;MyProject.c,550 :: 		menuAlarmText[0][6] = '3';
0x065A	0x0E06      	MOVLW       6
0x065C	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x065E	0x6EE1      	MOVWF       FSR1L 
0x0660	0x0E00      	MOVLW       0
0x0662	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x0664	0x6EE2      	MOVWF       FSR1H 
0x0666	0x0E33      	MOVLW       51
0x0668	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,551 :: 		break;
0x066A	0xD013      	BRA         L_populateAlarm131
;MyProject.c,552 :: 		}
L_populateAlarm130:
0x066C	0x0101      	MOVLB       1
0x066E	0x0E00      	MOVLW       0
0x0670	0x19B4      	XORWF       FARG_populateAlarm_alarmNo+1, 0, 1
0x0672	0xE102      	BNZ         L__populateAlarm299
0x0674	0x0E01      	MOVLW       1
0x0676	0x19B3      	XORWF       FARG_populateAlarm_alarmNo, 0, 1
L__populateAlarm299:
0x0678	0xE0DD      	BZ          L_populateAlarm132
0x067A	0x0E00      	MOVLW       0
0x067C	0x19B4      	XORWF       FARG_populateAlarm_alarmNo+1, 0, 1
0x067E	0xE102      	BNZ         L__populateAlarm300
0x0680	0x0E02      	MOVLW       2
0x0682	0x19B3      	XORWF       FARG_populateAlarm_alarmNo, 0, 1
L__populateAlarm300:
0x0684	0xE0E1      	BZ          L_populateAlarm133
0x0686	0x0E00      	MOVLW       0
0x0688	0x19B4      	XORWF       FARG_populateAlarm_alarmNo+1, 0, 1
0x068A	0xE102      	BNZ         L__populateAlarm301
0x068C	0x0E03      	MOVLW       3
0x068E	0x19B3      	XORWF       FARG_populateAlarm_alarmNo, 0, 1
L__populateAlarm301:
0x0690	0xE0E4      	BZ          L_populateAlarm134
L_populateAlarm131:
;MyProject.c,554 :: 		if(alarmStatus[alarmNo-1]) //ON
0x0692	0x0E01      	MOVLW       1
0x0694	0x5DB3      	SUBWF       FARG_populateAlarm_alarmNo, 0, 1
0x0696	0x6E00      	MOVWF       R0 
0x0698	0x0E00      	MOVLW       0
0x069A	0x59B4      	SUBWFB      FARG_populateAlarm_alarmNo+1, 0, 1
0x069C	0x6E01      	MOVWF       R1 
0x069E	0x0E3D      	MOVLW       _alarmStatus
0x06A0	0x2400      	ADDWF       R0, 0 
0x06A2	0x6EE9      	MOVWF       FSR0L 
0x06A4	0x0E01      	MOVLW       hi_addr(_alarmStatus)
0x06A6	0x2001      	ADDWFC      R1, 0 
0x06A8	0x6EEA      	MOVWF       FSR0H 
0x06AA	0xF000CFEE  	MOVFF       POSTINC0, R0
0x06AE	0x5200      	MOVF        R0, 1 
0x06B0	0xE011      	BZ          L_populateAlarm135
;MyProject.c,556 :: 		menuAlarmText[0][9] = 'N';
0x06B2	0x0E09      	MOVLW       9
0x06B4	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x06B6	0x6EE1      	MOVWF       FSR1L 
0x06B8	0x0E00      	MOVLW       0
0x06BA	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x06BC	0x6EE2      	MOVWF       FSR1H 
0x06BE	0x0E4E      	MOVLW       78
0x06C0	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,557 :: 		menuAlarmText[0][10] = ' ';
0x06C2	0x0E0A      	MOVLW       10
0x06C4	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x06C6	0x6EE1      	MOVWF       FSR1L 
0x06C8	0x0E00      	MOVLW       0
0x06CA	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x06CC	0x6EE2      	MOVWF       FSR1H 
0x06CE	0x0E20      	MOVLW       32
0x06D0	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,558 :: 		}
0x06D2	0xD010      	BRA         L_populateAlarm136
L_populateAlarm135:
;MyProject.c,561 :: 		menuAlarmText[0][9] = 'F';
0x06D4	0x0E09      	MOVLW       9
0x06D6	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x06D8	0x6EE1      	MOVWF       FSR1L 
0x06DA	0x0E00      	MOVLW       0
0x06DC	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x06DE	0x6EE2      	MOVWF       FSR1H 
0x06E0	0x0E46      	MOVLW       70
0x06E2	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,562 :: 		menuAlarmText[0][10] = 'F';
0x06E4	0x0E0A      	MOVLW       10
0x06E6	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x06E8	0x6EE1      	MOVWF       FSR1L 
0x06EA	0x0E00      	MOVLW       0
0x06EC	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x06EE	0x6EE2      	MOVWF       FSR1H 
0x06F0	0x0E46      	MOVLW       70
0x06F2	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,563 :: 		}
L_populateAlarm136:
;MyProject.c,565 :: 		menuAlarmText[1][15] = BCD2LowerCh(Binary2BCD(alarmTunes[alarmNo-1]));
0x06F4	0x0E0F      	MOVLW       15
0x06F6	0x2542      	ADDWF       _menuAlarmText+2, 0, 1
0x06F8	0x6FB5      	MOVWF       FLOC__populateAlarm, 1
0x06FA	0x0E00      	MOVLW       0
0x06FC	0x2143      	ADDWFC      _menuAlarmText+3, 0, 1
0x06FE	0x6FB6      	MOVWF       FLOC__populateAlarm+1, 1
0x0700	0x0E01      	MOVLW       1
0x0702	0x5DB3      	SUBWF       FARG_populateAlarm_alarmNo, 0, 1
0x0704	0x6E00      	MOVWF       R0 
0x0706	0x0E00      	MOVLW       0
0x0708	0x59B4      	SUBWFB      FARG_populateAlarm_alarmNo+1, 0, 1
0x070A	0x6E01      	MOVWF       R1 
0x070C	0x0E44      	MOVLW       _alarmTunes
0x070E	0x2400      	ADDWF       R0, 0 
0x0710	0x6EE9      	MOVWF       FSR0L 
0x0712	0x0E01      	MOVLW       hi_addr(_alarmTunes)
0x0714	0x2001      	ADDWFC      R1, 0 
0x0716	0x6EEA      	MOVWF       FSR0H 
0x0718	0xF1B9CFEE  	MOVFF       POSTINC0, FARG_Binary2BCD_a
0x071C	0x0E00      	MOVLW       0
0x071E	0xBFBA      	BTFSC       FARG_Binary2BCD_a+1, 7, 1
0x0720	0x0EFF      	MOVLW       255
0x0722	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x0724	0x0E00      	MOVLW       0
0x0726	0xBFB9      	BTFSC       FARG_Binary2BCD_a, 7, 1
0x0728	0x0EFF      	MOVLW       255
0x072A	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x072C	0xDED6      	RCALL       _Binary2BCD
0x072E	0xF1BEC000  	MOVFF       R0, FARG_BCD2LowerCh_bcd
0x0732	0xDE1C      	RCALL       _BCD2LowerCh
0x0734	0xFFE1C1B5  	MOVFF       FLOC__populateAlarm, FSR1L
0x0738	0xFFE2C1B6  	MOVFF       FLOC__populateAlarm+1, FSR1H
0x073C	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,568 :: 		menuAlarmText[1][7] = BCD2UpperCh(Binary2BCD(snoozeTimes[alarmNo-1]));
0x0740	0x0E07      	MOVLW       7
0x0742	0x2542      	ADDWF       _menuAlarmText+2, 0, 1
0x0744	0x6FB5      	MOVWF       FLOC__populateAlarm, 1
0x0746	0x0E00      	MOVLW       0
0x0748	0x2143      	ADDWFC      _menuAlarmText+3, 0, 1
0x074A	0x6FB6      	MOVWF       FLOC__populateAlarm+1, 1
0x074C	0x0E01      	MOVLW       1
0x074E	0x5DB3      	SUBWF       FARG_populateAlarm_alarmNo, 0, 1
0x0750	0x6E00      	MOVWF       R0 
0x0752	0x0E00      	MOVLW       0
0x0754	0x59B4      	SUBWFB      FARG_populateAlarm_alarmNo+1, 0, 1
0x0756	0x6E01      	MOVWF       R1 
0x0758	0x0E4D      	MOVLW       _snoozeTimes
0x075A	0x2400      	ADDWF       R0, 0 
0x075C	0x6EE9      	MOVWF       FSR0L 
0x075E	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x0760	0x2001      	ADDWFC      R1, 0 
0x0762	0x6EEA      	MOVWF       FSR0H 
0x0764	0xF1B9CFEE  	MOVFF       POSTINC0, FARG_Binary2BCD_a
0x0768	0x0E00      	MOVLW       0
0x076A	0xBFBA      	BTFSC       FARG_Binary2BCD_a+1, 7, 1
0x076C	0x0EFF      	MOVLW       255
0x076E	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x0770	0x0E00      	MOVLW       0
0x0772	0xBFB9      	BTFSC       FARG_Binary2BCD_a, 7, 1
0x0774	0x0EFF      	MOVLW       255
0x0776	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x0778	0xDEB0      	RCALL       _Binary2BCD
0x077A	0xF1BEC000  	MOVFF       R0, FARG_BCD2UpperCh_bcd
0x077E	0xDDE9      	RCALL       _BCD2UpperCh
0x0780	0xFFE1C1B5  	MOVFF       FLOC__populateAlarm, FSR1L
0x0784	0xFFE2C1B6  	MOVFF       FLOC__populateAlarm+1, FSR1H
0x0788	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,569 :: 		menuAlarmText[1][8] = BCD2LowerCh(Binary2BCD(snoozeTimes[alarmNo-1]));
0x078C	0x0E08      	MOVLW       8
0x078E	0x2542      	ADDWF       _menuAlarmText+2, 0, 1
0x0790	0x6FB5      	MOVWF       FLOC__populateAlarm, 1
0x0792	0x0E00      	MOVLW       0
0x0794	0x2143      	ADDWFC      _menuAlarmText+3, 0, 1
0x0796	0x6FB6      	MOVWF       FLOC__populateAlarm+1, 1
0x0798	0x0E01      	MOVLW       1
0x079A	0x5DB3      	SUBWF       FARG_populateAlarm_alarmNo, 0, 1
0x079C	0x6E00      	MOVWF       R0 
0x079E	0x0E00      	MOVLW       0
0x07A0	0x59B4      	SUBWFB      FARG_populateAlarm_alarmNo+1, 0, 1
0x07A2	0x6E01      	MOVWF       R1 
0x07A4	0x0E4D      	MOVLW       _snoozeTimes
0x07A6	0x2400      	ADDWF       R0, 0 
0x07A8	0x6EE9      	MOVWF       FSR0L 
0x07AA	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x07AC	0x2001      	ADDWFC      R1, 0 
0x07AE	0x6EEA      	MOVWF       FSR0H 
0x07B0	0xF1B9CFEE  	MOVFF       POSTINC0, FARG_Binary2BCD_a
0x07B4	0x0E00      	MOVLW       0
0x07B6	0xBFBA      	BTFSC       FARG_Binary2BCD_a+1, 7, 1
0x07B8	0x0EFF      	MOVLW       255
0x07BA	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x07BC	0x0E00      	MOVLW       0
0x07BE	0xBFB9      	BTFSC       FARG_Binary2BCD_a, 7, 1
0x07C0	0x0EFF      	MOVLW       255
0x07C2	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x07C4	0xDE8A      	RCALL       _Binary2BCD
0x07C6	0xF1BEC000  	MOVFF       R0, FARG_BCD2LowerCh_bcd
0x07CA	0xDDD0      	RCALL       _BCD2LowerCh
0x07CC	0xFFE1C1B5  	MOVFF       FLOC__populateAlarm, FSR1L
0x07D0	0xFFE2C1B6  	MOVFF       FLOC__populateAlarm+1, FSR1H
0x07D4	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,572 :: 		Lcd_out(1,1, menuAlarmText[0]);
0x07D8	0x0E01      	MOVLW       1
0x07DA	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x07DC	0x0E01      	MOVLW       1
0x07DE	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x07E0	0xF1BBC140  	MOVFF       _menuAlarmText, FARG_Lcd_Out_text
0x07E4	0xF1BCC141  	MOVFF       _menuAlarmText+1, FARG_Lcd_Out_text+1
0x07E8	0xDECE      	RCALL       _Lcd_Out
;MyProject.c,573 :: 		Lcd_out(2,1, menuAlarmText[1]);
0x07EA	0x0E02      	MOVLW       2
0x07EC	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x07EE	0x0E01      	MOVLW       1
0x07F0	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x07F2	0xF1BBC142  	MOVFF       _menuAlarmText+2, FARG_Lcd_Out_text
0x07F6	0xF1BCC143  	MOVFF       _menuAlarmText+3, FARG_Lcd_Out_text+1
0x07FA	0xDEC5      	RCALL       _Lcd_Out
;MyProject.c,574 :: 		}
L_end_populateAlarm:
0x07FC	0x0012      	RETURN      0
; end of _populateAlarm
_I2C1_Repeated_Start:
;__Lib_I2C_c34.c,54 :: 		
;__Lib_I2C_c34.c,55 :: 		
0x07FE	0x82C5      	BSF         SSPCON2, 1 
;__Lib_I2C_c34.c,56 :: 		
L_I2C1_Repeated_Start10:
0x0800	0xA2C5      	BTFSS       SSPCON2, 1 
0x0802	0xD001      	BRA         L_I2C1_Repeated_Start11
;__Lib_I2C_c34.c,57 :: 		
0x0804	0xD7FD      	BRA         L_I2C1_Repeated_Start10
L_I2C1_Repeated_Start11:
;__Lib_I2C_c34.c,58 :: 		
L_end_I2C1_Repeated_Start:
0x0806	0x0012      	RETURN      0
; end of _I2C1_Repeated_Start
_I2C1_Rd:
;__Lib_I2C_c34.c,60 :: 		
;__Lib_I2C_c34.c,63 :: 		
0x0808	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_c34.c,64 :: 		
0x080A	0x86C5      	BSF         SSPCON2, 3 
;__Lib_I2C_c34.c,66 :: 		
L_I2C1_Rd12:
0x080C	0xB69E      	BTFSC       PIR1, 3 
0x080E	0xD001      	BRA         L_I2C1_Rd13
;__Lib_I2C_c34.c,67 :: 		
0x0810	0xD7FD      	BRA         L_I2C1_Rd12
L_I2C1_Rd13:
;__Lib_I2C_c34.c,69 :: 		
0x0812	0xF001CFC9  	MOVFF       SSPBUF, R1
;__Lib_I2C_c34.c,70 :: 		
0x0816	0x0101      	MOVLB       1
0x0818	0x51B3      	MOVF        FARG_I2C1_Rd_ack, 0, 1
0x081A	0x0A00      	XORLW       0
0x081C	0xE102      	BNZ         L_I2C1_Rd14
;__Lib_I2C_c34.c,71 :: 		
0x081E	0x8AC5      	BSF         SSPCON2, 5 
0x0820	0xD001      	BRA         L_I2C1_Rd15
L_I2C1_Rd14:
;__Lib_I2C_c34.c,73 :: 		
0x0822	0x9AC5      	BCF         SSPCON2, 5 
L_I2C1_Rd15:
;__Lib_I2C_c34.c,75 :: 		
0x0824	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_c34.c,76 :: 		
0x0826	0x88C5      	BSF         SSPCON2, 4 
;__Lib_I2C_c34.c,78 :: 		
L_I2C1_Rd16:
0x0828	0xB69E      	BTFSC       PIR1, 3 
0x082A	0xD001      	BRA         L_I2C1_Rd17
;__Lib_I2C_c34.c,79 :: 		
0x082C	0xD7FD      	BRA         L_I2C1_Rd16
L_I2C1_Rd17:
;__Lib_I2C_c34.c,81 :: 		
0x082E	0xF000C001  	MOVFF       R1, R0
;__Lib_I2C_c34.c,82 :: 		
L_end_I2C1_Rd:
0x0832	0x0012      	RETURN      0
; end of _I2C1_Rd
_inputTime:
;MyProject.c,212 :: 		void inputTime(int mode, char setStr[])             // Interface for inputting time
;MyProject.c,214 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0834	0x0E01      	MOVLW       1
0x0836	0x0101      	MOVLB       1
0x0838	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x083A	0xDCA1      	RCALL       _Lcd_Cmd
;MyProject.c,215 :: 		Lcd_out(1,1,setStr);
0x083C	0x0E01      	MOVLW       1
0x083E	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0840	0x0E01      	MOVLW       1
0x0842	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0844	0xF1BBC1B5  	MOVFF       FARG_inputTime_setStr, FARG_Lcd_Out_text
0x0848	0xF1BCC1B6  	MOVFF       FARG_inputTime_setStr+1, FARG_Lcd_Out_text+1
0x084C	0xDE9C      	RCALL       _Lcd_Out
;MyProject.c,216 :: 		Lcd_out(2,1," [Save] [Cancel]");
0x084E	0x0E02      	MOVLW       2
0x0850	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0852	0x0E01      	MOVLW       1
0x0854	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0856	0x0E60      	MOVLW       ?lstr5_MyProject
0x0858	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x085A	0x0E00      	MOVLW       hi_addr(?lstr5_MyProject)
0x085C	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x085E	0xDE93      	RCALL       _Lcd_Out
;MyProject.c,218 :: 		if(mode == 0) //Setting time
0x0860	0x0E00      	MOVLW       0
0x0862	0x19B4      	XORWF       FARG_inputTime_mode+1, 0, 1
0x0864	0xE102      	BNZ         L__inputTime291
0x0866	0x0E00      	MOVLW       0
0x0868	0x19B3      	XORWF       FARG_inputTime_mode, 0, 1
L__inputTime291:
0x086A	0xE10F      	BNZ         L_inputTime6
;MyProject.c,219 :: 		{second2 = second; minute2 = minute; hour2 = hour; hr2 = hr; ap2 = ap;}
0x086C	0xF19CC19D  	MOVFF       _second, _second2
0x0870	0xF19EC1AB  	MOVFF       _minute, _minute2
0x0874	0xF19AC194  	MOVFF       _hour, _hour2
0x0878	0xF19BC195  	MOVFF       _hour+1, _hour2+1
0x087C	0xF196C198  	MOVFF       _hr, _hr2
0x0880	0xF197C199  	MOVFF       _hr+1, _hr2+1
0x0884	0xF193C192  	MOVFF       _ap, _ap2
0x0888	0xD04D      	BRA         L_inputTime7
L_inputTime6:
;MyProject.c,222 :: 		second2 =Binary2BCD(0); minute2 = Binary2BCD(alarmMinute[mode-1]); hr2 = Binary2BCD(alarmHr[mode-1]);
0x088A	0x6BB9      	CLRF        FARG_Binary2BCD_a, 1
0x088C	0x6BBA      	CLRF        FARG_Binary2BCD_a+1, 1
0x088E	0xDE25      	RCALL       _Binary2BCD
0x0890	0xF19CC000  	MOVFF       R0, _second2
0x0894	0x0E01      	MOVLW       1
0x0896	0x5DB3      	SUBWF       FARG_inputTime_mode, 0, 1
0x0898	0x6E00      	MOVWF       R0 
0x089A	0x0E00      	MOVLW       0
0x089C	0x59B4      	SUBWFB      FARG_inputTime_mode+1, 0, 1
0x089E	0x6E01      	MOVWF       R1 
0x08A0	0x0E16      	MOVLW       _alarmMinute
0x08A2	0x2400      	ADDWF       R0, 0 
0x08A4	0x6EE9      	MOVWF       FSR0L 
0x08A6	0x0E00      	MOVLW       hi_addr(_alarmMinute)
0x08A8	0x2001      	ADDWFC      R1, 0 
0x08AA	0x6EEA      	MOVWF       FSR0H 
0x08AC	0xF1B9CFEE  	MOVFF       POSTINC0, FARG_Binary2BCD_a
0x08B0	0x0E00      	MOVLW       0
0x08B2	0xBFBA      	BTFSC       FARG_Binary2BCD_a+1, 7, 1
0x08B4	0x0EFF      	MOVLW       255
0x08B6	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x08B8	0x0E00      	MOVLW       0
0x08BA	0xBFB9      	BTFSC       FARG_Binary2BCD_a, 7, 1
0x08BC	0x0EFF      	MOVLW       255
0x08BE	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x08C0	0xDE0C      	RCALL       _Binary2BCD
0x08C2	0xF19EC000  	MOVFF       R0, _minute2
0x08C6	0x0E01      	MOVLW       1
0x08C8	0x5DB3      	SUBWF       FARG_inputTime_mode, 0, 1
0x08CA	0x6E03      	MOVWF       R3 
0x08CC	0x0E00      	MOVLW       0
0x08CE	0x59B4      	SUBWFB      FARG_inputTime_mode+1, 0, 1
0x08D0	0x6E04      	MOVWF       R4 
0x08D2	0xF000C003  	MOVFF       R3, R0
0x08D6	0xF001C004  	MOVFF       R4, R1
0x08DA	0x3600      	RLCF        R0, 1 
0x08DC	0x9000      	BCF         R0, 0 
0x08DE	0x3601      	RLCF        R1, 1 
0x08E0	0x0E19      	MOVLW       _alarmHr
0x08E2	0x2400      	ADDWF       R0, 0 
0x08E4	0x6EE9      	MOVWF       FSR0L 
0x08E6	0x0E00      	MOVLW       hi_addr(_alarmHr)
0x08E8	0x2001      	ADDWFC      R1, 0 
0x08EA	0x6EEA      	MOVWF       FSR0H 
0x08EC	0xF1B9CFEE  	MOVFF       POSTINC0, FARG_Binary2BCD_a
0x08F0	0xF1BACFEE  	MOVFF       POSTINC0, FARG_Binary2BCD_a+1
0x08F4	0xDDF2      	RCALL       _Binary2BCD
0x08F6	0xF196C000  	MOVFF       R0, _hr2
0x08FA	0xF197C001  	MOVFF       R1, _hr2+1
;MyProject.c,223 :: 		ap2 = alarmAP[mode-1];
0x08FE	0x0E01      	MOVLW       1
0x0900	0x5DB3      	SUBWF       FARG_inputTime_mode, 0, 1
0x0902	0x6E00      	MOVWF       R0 
0x0904	0x0E00      	MOVLW       0
0x0906	0x59B4      	SUBWFB      FARG_inputTime_mode+1, 0, 1
0x0908	0x6E01      	MOVWF       R1 
0x090A	0x0E31      	MOVLW       _alarmAP
0x090C	0x2400      	ADDWF       R0, 0 
0x090E	0x6EE9      	MOVWF       FSR0L 
0x0910	0x0E00      	MOVLW       hi_addr(_alarmAP)
0x0912	0x2001      	ADDWFC      R1, 0 
0x0914	0x6EEA      	MOVWF       FSR0H 
0x0916	0xF193CFEE  	MOVFF       POSTINC0, _ap2
;MyProject.c,225 :: 		time2Str(mode);
0x091A	0xF1B9C1B3  	MOVFF       FARG_inputTime_mode, FARG_time2Str_temp
0x091E	0xF1BAC1B4  	MOVFF       FARG_inputTime_mode+1, FARG_time2Str_temp+1
0x0922	0xDD53      	RCALL       _time2Str
;MyProject.c,226 :: 		}
L_inputTime7:
;MyProject.c,227 :: 		Lcd_out(1,6, time);
0x0924	0x0E01      	MOVLW       1
0x0926	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0928	0x0E06      	MOVLW       6
0x092A	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x092C	0x0E34      	MOVLW       _time
0x092E	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0930	0x0E00      	MOVLW       hi_addr(_time)
0x0932	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0934	0xDE28      	RCALL       _Lcd_Out
;MyProject.c,229 :: 		loopcount = 0;
0x0936	0x6BA8      	CLRF        _loopcount, 1
;MyProject.c,230 :: 		set_count = 0;
0x0938	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,232 :: 		while(1)
L_inputTime8:
;MyProject.c,234 :: 		set = 0;
0x093A	0x6B3B      	CLRF        _set, 1
;MyProject.c,235 :: 		if(PORTA.F0 == 0)              //Mode Pressed
0x093C	0xB080      	BTFSC       PORTA, 0 
0x093E	0xD01C      	BRA         L_inputTime10
;MyProject.c,237 :: 		Delay_ms(100);
0x0940	0x0E02      	MOVLW       2
0x0942	0x6E0B      	MOVWF       R11, 0
0x0944	0x0E04      	MOVLW       4
0x0946	0x6E0C      	MOVWF       R12, 0
0x0948	0x0EBA      	MOVLW       186
0x094A	0x6E0D      	MOVWF       R13, 0
L_inputTime11:
0x094C	0x2E0D      	DECFSZ      R13, 1, 0
0x094E	0xD7FE      	BRA         L_inputTime11
0x0950	0x2E0C      	DECFSZ      R12, 1, 0
0x0952	0xD7FC      	BRA         L_inputTime11
0x0954	0x2E0B      	DECFSZ      R11, 1, 0
0x0956	0xD7FA      	BRA         L_inputTime11
0x0958	0x0000      	NOP
;MyProject.c,238 :: 		if(PORTA.F0 == 0)
0x095A	0xB080      	BTFSC       PORTA, 0 
0x095C	0xD00D      	BRA         L_inputTime12
;MyProject.c,240 :: 		set_count++;
0x095E	0x2B3C      	INCF        _set_count, 1, 1
;MyProject.c,241 :: 		if(mode && (set_count == 3)) set_count++;   //Skip the seconds if mode
0x0960	0x51B3      	MOVF        FARG_inputTime_mode, 0, 1
0x0962	0x11B4      	IORWF       FARG_inputTime_mode+1, 0, 1
0x0964	0xE004      	BZ          L_inputTime15
0x0966	0x513C      	MOVF        _set_count, 0, 1
0x0968	0x0A03      	XORLW       3
0x096A	0xB4D8      	BTFSC       STATUS, 2 
L__inputTime268:
0x096C	0x2B3C      	INCF        _set_count, 1, 1
L_inputTime15:
;MyProject.c,243 :: 		if(set_count > 5)
0x096E	0x513C      	MOVF        _set_count, 0, 1
0x0970	0x0805      	SUBLW       5
0x0972	0xE202      	BC          L_inputTime16
;MyProject.c,245 :: 		set_count = 1;
0x0974	0x0E01      	MOVLW       1
0x0976	0x6F3C      	MOVWF       _set_count, 1
;MyProject.c,246 :: 		}
L_inputTime16:
;MyProject.c,247 :: 		}
L_inputTime12:
;MyProject.c,248 :: 		}
L_inputTime10:
;MyProject.c,250 :: 		if(set_count)
0x0978	0x533C      	MOVF        _set_count, 1, 1
0x097A	0xB4D8      	BTFSC       STATUS, 2 
0x097C	0xD0CE      	BRA         L_inputTime17
;MyProject.c,252 :: 		if(PORTA.F1 == 0)
0x097E	0xB280      	BTFSC       PORTA, 1 
0x0980	0xD011      	BRA         L_inputTime18
;MyProject.c,254 :: 		Delay_ms(100);
0x0982	0x0E02      	MOVLW       2
0x0984	0x6E0B      	MOVWF       R11, 0
0x0986	0x0E04      	MOVLW       4
0x0988	0x6E0C      	MOVWF       R12, 0
0x098A	0x0EBA      	MOVLW       186
0x098C	0x6E0D      	MOVWF       R13, 0
L_inputTime19:
0x098E	0x2E0D      	DECFSZ      R13, 1, 0
0x0990	0xD7FE      	BRA         L_inputTime19
0x0992	0x2E0C      	DECFSZ      R12, 1, 0
0x0994	0xD7FC      	BRA         L_inputTime19
0x0996	0x2E0B      	DECFSZ      R11, 1, 0
0x0998	0xD7FA      	BRA         L_inputTime19
0x099A	0x0000      	NOP
;MyProject.c,255 :: 		if(PORTA.F1 == 0)
0x099C	0xB280      	BTFSC       PORTA, 1 
0x099E	0xD002      	BRA         L_inputTime20
;MyProject.c,256 :: 		set = 1;
0x09A0	0x0E01      	MOVLW       1
0x09A2	0x6F3B      	MOVWF       _set, 1
L_inputTime20:
;MyProject.c,257 :: 		}
L_inputTime18:
;MyProject.c,259 :: 		if(PORTA.F2 == 0)
0x09A4	0xB480      	BTFSC       PORTA, 2 
0x09A6	0xD011      	BRA         L_inputTime21
;MyProject.c,261 :: 		Delay_ms(100);
0x09A8	0x0E02      	MOVLW       2
0x09AA	0x6E0B      	MOVWF       R11, 0
0x09AC	0x0E04      	MOVLW       4
0x09AE	0x6E0C      	MOVWF       R12, 0
0x09B0	0x0EBA      	MOVLW       186
0x09B2	0x6E0D      	MOVWF       R13, 0
L_inputTime22:
0x09B4	0x2E0D      	DECFSZ      R13, 1, 0
0x09B6	0xD7FE      	BRA         L_inputTime22
0x09B8	0x2E0C      	DECFSZ      R12, 1, 0
0x09BA	0xD7FC      	BRA         L_inputTime22
0x09BC	0x2E0B      	DECFSZ      R11, 1, 0
0x09BE	0xD7FA      	BRA         L_inputTime22
0x09C0	0x0000      	NOP
;MyProject.c,262 :: 		if(PORTA.F2 == 0)
0x09C2	0xB480      	BTFSC       PORTA, 2 
0x09C4	0xD002      	BRA         L_inputTime23
;MyProject.c,263 :: 		set = -1;
0x09C6	0x0EFF      	MOVLW       255
0x09C8	0x6F3B      	MOVWF       _set, 1
L_inputTime23:
;MyProject.c,264 :: 		}
L_inputTime21:
;MyProject.c,265 :: 		if(set_count && set)
0x09CA	0x533C      	MOVF        _set_count, 1, 1
0x09CC	0xB4D8      	BTFSC       STATUS, 2 
0x09CE	0xD0A5      	BRA         L_inputTime26
0x09D0	0x533B      	MOVF        _set, 1, 1
0x09D2	0xB4D8      	BTFSC       STATUS, 2 
0x09D4	0xD0A2      	BRA         L_inputTime26
L__inputTime267:
;MyProject.c,269 :: 		switch(set_count)
0x09D6	0xD097      	BRA         L_inputTime27
;MyProject.c,271 :: 		case 1:
L_inputTime29:
;MyProject.c,272 :: 		hour2 = BCD2Binary(hour2);
0x09D8	0xF1B9C19A  	MOVFF       _hour2, FARG_BCD2Binary_a
0x09DC	0xF1BAC19B  	MOVFF       _hour2+1, FARG_BCD2Binary_a+1
0x09E0	0xDD4C      	RCALL       _BCD2Binary
0x09E2	0xF19AC000  	MOVFF       R0, _hour2
0x09E6	0xF19BC001  	MOVFF       R1, _hour2+1
;MyProject.c,273 :: 		hour2 = hour2 + set;
0x09EA	0x513B      	MOVF        _set, 0, 1
0x09EC	0x2600      	ADDWF       R0, 1 
0x09EE	0x0E00      	MOVLW       0
0x09F0	0xBF3B      	BTFSC       _set, 7, 1
0x09F2	0x0EFF      	MOVLW       255
0x09F4	0x2201      	ADDWFC      R1, 1 
0x09F6	0xF19AC000  	MOVFF       R0, _hour2
0x09FA	0xF19BC001  	MOVFF       R1, _hour2+1
;MyProject.c,274 :: 		hour2 = Binary2BCD(hour2);
0x09FE	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x0A02	0xF1BAC001  	MOVFF       R1, FARG_Binary2BCD_a+1
0x0A06	0xDD69      	RCALL       _Binary2BCD
0x0A08	0xF19AC000  	MOVFF       R0, _hour2
0x0A0C	0xF19BC001  	MOVFF       R1, _hour2+1
;MyProject.c,275 :: 		if((hour2 & 0x1F) >= 0x13)
0x0A10	0x0E1F      	MOVLW       31
0x0A12	0x1400      	ANDWF       R0, 0 
0x0A14	0x6E02      	MOVWF       R2 
0x0A16	0xF003C001  	MOVFF       R1, R3
0x0A1A	0x0E00      	MOVLW       0
0x0A1C	0x1603      	ANDWF       R3, 1 
0x0A1E	0x0E80      	MOVLW       128
0x0A20	0x1803      	XORWF       R3, 0 
0x0A22	0x6E00      	MOVWF       R0 
0x0A24	0x0E80      	MOVLW       128
0x0A26	0x5C00      	SUBWF       R0, 0 
0x0A28	0xE102      	BNZ         L__inputTime292
0x0A2A	0x0E13      	MOVLW       19
0x0A2C	0x5C02      	SUBWF       R2, 0 
L__inputTime292:
0x0A2E	0xE306      	BNC         L_inputTime30
;MyProject.c,277 :: 		hour2 = hour2 & 0b11100001;
0x0A30	0x0EE1      	MOVLW       225
0x0A32	0x179A      	ANDWF       _hour2, 1, 1
0x0A34	0x0E00      	MOVLW       0
0x0A36	0x179B      	ANDWF       _hour2+1, 1, 1
;MyProject.c,278 :: 		hour2 = hour2 ^ 0x20;
0x0A38	0x7B9A      	BTG         _hour2, 5, 1
;MyProject.c,279 :: 		}
0x0A3A	0xD015      	BRA         L_inputTime31
L_inputTime30:
;MyProject.c,280 :: 		else if((hour2 & 0x1F) <= 0x00)
0x0A3C	0x0E1F      	MOVLW       31
0x0A3E	0x159A      	ANDWF       _hour2, 0, 1
0x0A40	0x6E01      	MOVWF       R1 
0x0A42	0xF002C19B  	MOVFF       _hour2+1, R2
0x0A46	0x0E00      	MOVLW       0
0x0A48	0x1602      	ANDWF       R2, 1 
0x0A4A	0x0E80      	MOVLW       128
0x0A4C	0x6E00      	MOVWF       R0 
0x0A4E	0x0E80      	MOVLW       128
0x0A50	0x1802      	XORWF       R2, 0 
0x0A52	0x5C00      	SUBWF       R0, 0 
0x0A54	0xE102      	BNZ         L__inputTime293
0x0A56	0x5001      	MOVF        R1, 0 
0x0A58	0x0800      	SUBLW       0
L__inputTime293:
0x0A5A	0xE305      	BNC         L_inputTime32
;MyProject.c,282 :: 		hour2 = hour2 | 0b00010010;
0x0A5C	0x0E12      	MOVLW       18
0x0A5E	0x139A      	IORWF       _hour2, 1, 1
0x0A60	0x0E00      	MOVLW       0
0x0A62	0x139B      	IORWF       _hour2+1, 1, 1
;MyProject.c,283 :: 		hour2 = hour2 ^ 0x20;
0x0A64	0x7B9A      	BTG         _hour2, 5, 1
;MyProject.c,284 :: 		}
L_inputTime32:
L_inputTime31:
;MyProject.c,286 :: 		hr2 = hour2 & 0b00011111;
0x0A66	0x0E1F      	MOVLW       31
0x0A68	0x159A      	ANDWF       _hour2, 0, 1
0x0A6A	0x6F96      	MOVWF       _hr2, 1
0x0A6C	0xF197C19B  	MOVFF       _hour2+1, _hr2+1
0x0A70	0x0E00      	MOVLW       0
0x0A72	0x1797      	ANDWF       _hr2+1, 1, 1
;MyProject.c,287 :: 		ap2 = hour2 & 0b00100000;
0x0A74	0x0E20      	MOVLW       32
0x0A76	0x159A      	ANDWF       _hour2, 0, 1
0x0A78	0x6F93      	MOVWF       _ap2, 1
;MyProject.c,289 :: 		break;
0x0A7A	0xD04F      	BRA         L_inputTime28
;MyProject.c,290 :: 		case 2:
L_inputTime33:
;MyProject.c,291 :: 		minute2 = BCD2Binary(minute2);
0x0A7C	0xF1B9C19E  	MOVFF       _minute2, FARG_BCD2Binary_a
0x0A80	0x0E00      	MOVLW       0
0x0A82	0xBF9E      	BTFSC       _minute2, 7, 1
0x0A84	0x0EFF      	MOVLW       255
0x0A86	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x0A88	0xDCF8      	RCALL       _BCD2Binary
0x0A8A	0xF19EC000  	MOVFF       R0, _minute2
;MyProject.c,292 :: 		minute2 = minute2 + set;
0x0A8E	0x513B      	MOVF        _set, 0, 1
0x0A90	0x2400      	ADDWF       R0, 0 
0x0A92	0x6E01      	MOVWF       R1 
0x0A94	0xF19EC001  	MOVFF       R1, _minute2
;MyProject.c,293 :: 		if(minute2 >= 60)
0x0A98	0x0E80      	MOVLW       128
0x0A9A	0x1801      	XORWF       R1, 0 
0x0A9C	0x6E00      	MOVWF       R0 
0x0A9E	0x0E80      	MOVLW       128
0x0AA0	0x0A3C      	XORLW       60
0x0AA2	0x5C00      	SUBWF       R0, 0 
0x0AA4	0xB0D8      	BTFSC       STATUS, 0 
;MyProject.c,294 :: 		minute2 = 0;
0x0AA6	0x6B9E      	CLRF        _minute2, 1
L_inputTime34:
;MyProject.c,295 :: 		if(minute2 < 0)
0x0AA8	0x0E80      	MOVLW       128
0x0AAA	0x199E      	XORWF       _minute2, 0, 1
0x0AAC	0x6E00      	MOVWF       R0 
0x0AAE	0x0E80      	MOVLW       128
0x0AB0	0x0A00      	XORLW       0
0x0AB2	0x5C00      	SUBWF       R0, 0 
0x0AB4	0xE202      	BC          L_inputTime35
;MyProject.c,296 :: 		minute2 = 59;
0x0AB6	0x0E3B      	MOVLW       59
0x0AB8	0x6F9E      	MOVWF       _minute2, 1
L_inputTime35:
;MyProject.c,297 :: 		minute2 = Binary2BCD(minute2);
0x0ABA	0xF1B9C19E  	MOVFF       _minute2, FARG_Binary2BCD_a
0x0ABE	0x0E00      	MOVLW       0
0x0AC0	0xBF9E      	BTFSC       _minute2, 7, 1
0x0AC2	0x0EFF      	MOVLW       255
0x0AC4	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x0AC6	0xDD09      	RCALL       _Binary2BCD
0x0AC8	0xF19EC000  	MOVFF       R0, _minute2
;MyProject.c,299 :: 		break;
0x0ACC	0xD026      	BRA         L_inputTime28
;MyProject.c,300 :: 		case 3:
L_inputTime36:
;MyProject.c,301 :: 		if((!mode)&& abs(set))
0x0ACE	0x51B3      	MOVF        FARG_inputTime_mode, 0, 1
0x0AD0	0x11B4      	IORWF       FARG_inputTime_mode+1, 0, 1
0x0AD2	0xE118      	BNZ         L_inputTime39
0x0AD4	0xF1B9C13B  	MOVFF       _set, FARG_abs_a
0x0AD8	0x0E00      	MOVLW       0
0x0ADA	0xBF3B      	BTFSC       _set, 7, 1
0x0ADC	0x0EFF      	MOVLW       255
0x0ADE	0x6FBA      	MOVWF       FARG_abs_a+1, 1
0x0AE0	0xDD91      	RCALL       _abs
0x0AE2	0x5000      	MOVF        R0, 0 
0x0AE4	0x1001      	IORWF       R1, 0 
0x0AE6	0xE00E      	BZ          L_inputTime39
L__inputTime266:
;MyProject.c,303 :: 		write_ds1307(0,0x00); //Reset second to 0 sec. and start Oscillator
0x0AE8	0x6BB9      	CLRF        FARG_write_ds1307_address, 1
0x0AEA	0x6BBA      	CLRF        FARG_write_ds1307_w_data, 1
0x0AEC	0xDD3F      	RCALL       _write_ds1307
;MyProject.c,304 :: 		second2 = 0x00;
0x0AEE	0x0101      	MOVLB       1
0x0AF0	0x6B9C      	CLRF        _second2, 1
;MyProject.c,305 :: 		Lcd_out(1,12, "00");
0x0AF2	0x0E01      	MOVLW       1
0x0AF4	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0AF6	0x0E0C      	MOVLW       12
0x0AF8	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0AFA	0x0E40      	MOVLW       ?lstr6_MyProject
0x0AFC	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0AFE	0x0E00      	MOVLW       hi_addr(?lstr6_MyProject)
0x0B00	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B02	0xDD41      	RCALL       _Lcd_Out
;MyProject.c,306 :: 		}
L_inputTime39:
;MyProject.c,307 :: 		break;
0x0B04	0xD00A      	BRA         L_inputTime28
;MyProject.c,308 :: 		}
L_inputTime27:
0x0B06	0x513C      	MOVF        _set_count, 0, 1
0x0B08	0x0A01      	XORLW       1
0x0B0A	0xB4D8      	BTFSC       STATUS, 2 
0x0B0C	0xD765      	BRA         L_inputTime29
0x0B0E	0x513C      	MOVF        _set_count, 0, 1
0x0B10	0x0A02      	XORLW       2
0x0B12	0xE0B4      	BZ          L_inputTime33
0x0B14	0x513C      	MOVF        _set_count, 0, 1
0x0B16	0x0A03      	XORLW       3
0x0B18	0xE0DA      	BZ          L_inputTime36
L_inputTime28:
;MyProject.c,310 :: 		}
L_inputTime26:
;MyProject.c,311 :: 		}
L_inputTime17:
;MyProject.c,312 :: 		time2Str(1);
0x0B1A	0x0E01      	MOVLW       1
0x0B1C	0x6FB9      	MOVWF       FARG_time2Str_temp, 1
0x0B1E	0x0E00      	MOVLW       0
0x0B20	0x6FBA      	MOVWF       FARG_time2Str_temp+1, 1
0x0B22	0xDC53      	RCALL       _time2Str
;MyProject.c,315 :: 		loopcount ++;
0x0B24	0x2BA8      	INCF        _loopcount, 1, 1
;MyProject.c,316 :: 		if(loopcount > 10) loopcount = 0; // For blinking
0x0B26	0x0E80      	MOVLW       128
0x0B28	0x0A0A      	XORLW       10
0x0B2A	0x6E00      	MOVWF       R0 
0x0B2C	0x0E80      	MOVLW       128
0x0B2E	0x19A8      	XORWF       _loopcount, 0, 1
0x0B30	0x5C00      	SUBWF       R0, 0 
0x0B32	0xA0D8      	BTFSS       STATUS, 0 
0x0B34	0x6BA8      	CLRF        _loopcount, 1
L_inputTime40:
;MyProject.c,317 :: 		if(loopcount < 5)                 //Full display for 0.5s
0x0B36	0x0E80      	MOVLW       128
0x0B38	0x19A8      	XORWF       _loopcount, 0, 1
0x0B3A	0x6E00      	MOVWF       R0 
0x0B3C	0x0E80      	MOVLW       128
0x0B3E	0x0A05      	XORLW       5
0x0B40	0x5C00      	SUBWF       R0, 0 
0x0B42	0xE21C      	BC          L_inputTime41
;MyProject.c,319 :: 		Lcd_out(1,6, time);
0x0B44	0x0E01      	MOVLW       1
0x0B46	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0B48	0x0E06      	MOVLW       6
0x0B4A	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0B4C	0x0E34      	MOVLW       _time
0x0B4E	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0B50	0x0E00      	MOVLW       hi_addr(_time)
0x0B52	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B54	0xDD18      	RCALL       _Lcd_Out
;MyProject.c,320 :: 		Lcd_out(2,3, "Save");
0x0B56	0x0E02      	MOVLW       2
0x0B58	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0B5A	0x0E03      	MOVLW       3
0x0B5C	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0B5E	0x0E2C      	MOVLW       ?lstr7_MyProject
0x0B60	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0B62	0x0E00      	MOVLW       hi_addr(?lstr7_MyProject)
0x0B64	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B66	0xDD0F      	RCALL       _Lcd_Out
;MyProject.c,321 :: 		Lcd_out(2,10, "Cancel");
0x0B68	0x0E02      	MOVLW       2
0x0B6A	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0B6C	0x0E0A      	MOVLW       10
0x0B6E	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0B70	0x0E1F      	MOVLW       ?lstr8_MyProject
0x0B72	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0B74	0x0E00      	MOVLW       hi_addr(?lstr8_MyProject)
0x0B76	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B78	0xDD06      	RCALL       _Lcd_Out
;MyProject.c,322 :: 		}
0x0B7A	0xD040      	BRA         L_inputTime42
L_inputTime41:
;MyProject.c,325 :: 		if (set_count  ==1) Lcd_out(1,6, "__");
0x0B7C	0x513C      	MOVF        _set_count, 0, 1
0x0B7E	0x0A01      	XORLW       1
0x0B80	0xE10A      	BNZ         L_inputTime43
0x0B82	0x0E01      	MOVLW       1
0x0B84	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0B86	0x0E06      	MOVLW       6
0x0B88	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0B8A	0x0E26      	MOVLW       ?lstr9_MyProject
0x0B8C	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0B8E	0x0E00      	MOVLW       hi_addr(?lstr9_MyProject)
0x0B90	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B92	0xDCF9      	RCALL       _Lcd_Out
0x0B94	0xD033      	BRA         L_inputTime44
L_inputTime43:
;MyProject.c,326 :: 		else if (set_count  ==2) Lcd_out(1,9, "__");
0x0B96	0x513C      	MOVF        _set_count, 0, 1
0x0B98	0x0A02      	XORLW       2
0x0B9A	0xE10A      	BNZ         L_inputTime45
0x0B9C	0x0E01      	MOVLW       1
0x0B9E	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0BA0	0x0E09      	MOVLW       9
0x0BA2	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0BA4	0x0E29      	MOVLW       ?lstr10_MyProject
0x0BA6	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0BA8	0x0E00      	MOVLW       hi_addr(?lstr10_MyProject)
0x0BAA	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0BAC	0xDCEC      	RCALL       _Lcd_Out
0x0BAE	0xD026      	BRA         L_inputTime46
L_inputTime45:
;MyProject.c,327 :: 		else if (set_count  ==3) Lcd_out(1,12, "__");
0x0BB0	0x513C      	MOVF        _set_count, 0, 1
0x0BB2	0x0A03      	XORLW       3
0x0BB4	0xE10A      	BNZ         L_inputTime47
0x0BB6	0x0E01      	MOVLW       1
0x0BB8	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0BBA	0x0E0C      	MOVLW       12
0x0BBC	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0BBE	0x0E7B      	MOVLW       ?lstr11_MyProject
0x0BC0	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0BC2	0x0E00      	MOVLW       hi_addr(?lstr11_MyProject)
0x0BC4	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0BC6	0xDCDF      	RCALL       _Lcd_Out
0x0BC8	0xD019      	BRA         L_inputTime48
L_inputTime47:
;MyProject.c,328 :: 		else if (set_count == 4) Lcd_out(2,3, "____");
0x0BCA	0x513C      	MOVF        _set_count, 0, 1
0x0BCC	0x0A04      	XORLW       4
0x0BCE	0xE10A      	BNZ         L_inputTime49
0x0BD0	0x0E02      	MOVLW       2
0x0BD2	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0BD4	0x0E03      	MOVLW       3
0x0BD6	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0BD8	0x0EEB      	MOVLW       ?lstr12_MyProject
0x0BDA	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0BDC	0x0E00      	MOVLW       hi_addr(?lstr12_MyProject)
0x0BDE	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0BE0	0xDCD2      	RCALL       _Lcd_Out
0x0BE2	0xD00C      	BRA         L_inputTime50
L_inputTime49:
;MyProject.c,329 :: 		else if (set_count  ==5) Lcd_out(2,10, "______");
0x0BE4	0x513C      	MOVF        _set_count, 0, 1
0x0BE6	0x0A05      	XORLW       5
0x0BE8	0xE109      	BNZ         L_inputTime51
0x0BEA	0x0E02      	MOVLW       2
0x0BEC	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0BEE	0x0E0A      	MOVLW       10
0x0BF0	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0BF2	0x0EF0      	MOVLW       ?lstr13_MyProject
0x0BF4	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0BF6	0x0E00      	MOVLW       hi_addr(?lstr13_MyProject)
0x0BF8	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0BFA	0xDCC5      	RCALL       _Lcd_Out
L_inputTime51:
L_inputTime50:
L_inputTime48:
L_inputTime46:
L_inputTime44:
;MyProject.c,330 :: 		}
L_inputTime42:
;MyProject.c,333 :: 		Delay_ms(100);
0x0BFC	0x0E02      	MOVLW       2
0x0BFE	0x6E0B      	MOVWF       R11, 0
0x0C00	0x0E04      	MOVLW       4
0x0C02	0x6E0C      	MOVWF       R12, 0
0x0C04	0x0EBA      	MOVLW       186
0x0C06	0x6E0D      	MOVWF       R13, 0
L_inputTime52:
0x0C08	0x2E0D      	DECFSZ      R13, 1, 0
0x0C0A	0xD7FE      	BRA         L_inputTime52
0x0C0C	0x2E0C      	DECFSZ      R12, 1, 0
0x0C0E	0xD7FC      	BRA         L_inputTime52
0x0C10	0x2E0B      	DECFSZ      R11, 1, 0
0x0C12	0xD7FA      	BRA         L_inputTime52
0x0C14	0x0000      	NOP
;MyProject.c,335 :: 		if(PORTA.F3 == 0)                        // Break the while loop when menu pressed
0x0C16	0xB680      	BTFSC       PORTA, 3 
0x0C18	0xD07C      	BRA         L_inputTime53
;MyProject.c,337 :: 		Delay_ms(100);
0x0C1A	0x0E02      	MOVLW       2
0x0C1C	0x6E0B      	MOVWF       R11, 0
0x0C1E	0x0E04      	MOVLW       4
0x0C20	0x6E0C      	MOVWF       R12, 0
0x0C22	0x0EBA      	MOVLW       186
0x0C24	0x6E0D      	MOVWF       R13, 0
L_inputTime54:
0x0C26	0x2E0D      	DECFSZ      R13, 1, 0
0x0C28	0xD7FE      	BRA         L_inputTime54
0x0C2A	0x2E0C      	DECFSZ      R12, 1, 0
0x0C2C	0xD7FC      	BRA         L_inputTime54
0x0C2E	0x2E0B      	DECFSZ      R11, 1, 0
0x0C30	0xD7FA      	BRA         L_inputTime54
0x0C32	0x0000      	NOP
;MyProject.c,338 :: 		if(PORTA.F3 == 0)
0x0C34	0xB680      	BTFSC       PORTA, 3 
0x0C36	0xD06D      	BRA         L_inputTime55
;MyProject.c,340 :: 		if(set_count == 4)              //if Save is pressed
0x0C38	0x513C      	MOVF        _set_count, 0, 1
0x0C3A	0x0A04      	XORLW       4
0x0C3C	0xE166      	BNZ         L_inputTime56
;MyProject.c,342 :: 		if(!mode)                    //Write to RTC
0x0C3E	0x51B3      	MOVF        FARG_inputTime_mode, 0, 1
0x0C40	0x11B4      	IORWF       FARG_inputTime_mode+1, 0, 1
0x0C42	0xE10C      	BNZ         L_inputTime57
;MyProject.c,344 :: 		write_ds1307(2, hour2);
0x0C44	0x0E02      	MOVLW       2
0x0C46	0x6FB9      	MOVWF       FARG_write_ds1307_address, 1
0x0C48	0xF1BAC19A  	MOVFF       _hour2, FARG_write_ds1307_w_data
0x0C4C	0xDC8F      	RCALL       _write_ds1307
;MyProject.c,345 :: 		write_ds1307(1, minute2);
0x0C4E	0x0E01      	MOVLW       1
0x0C50	0x0101      	MOVLB       1
0x0C52	0x6FB9      	MOVWF       FARG_write_ds1307_address, 1
0x0C54	0xF1BAC19E  	MOVFF       _minute2, FARG_write_ds1307_w_data
0x0C58	0xDC89      	RCALL       _write_ds1307
;MyProject.c,346 :: 		break;
0x0C5A	0xD05F      	BRA         L_inputTime9
;MyProject.c,347 :: 		}
L_inputTime57:
;MyProject.c,350 :: 		alarmHr[mode-1] = BCD2Binary(hr2);
0x0C5C	0x0E01      	MOVLW       1
0x0C5E	0x0101      	MOVLB       1
0x0C60	0x5DB3      	SUBWF       FARG_inputTime_mode, 0, 1
0x0C62	0x6E03      	MOVWF       R3 
0x0C64	0x0E00      	MOVLW       0
0x0C66	0x59B4      	SUBWFB      FARG_inputTime_mode+1, 0, 1
0x0C68	0x6E04      	MOVWF       R4 
0x0C6A	0xF000C003  	MOVFF       R3, R0
0x0C6E	0xF001C004  	MOVFF       R4, R1
0x0C72	0x3600      	RLCF        R0, 1 
0x0C74	0x9000      	BCF         R0, 0 
0x0C76	0x3601      	RLCF        R1, 1 
0x0C78	0x0E19      	MOVLW       _alarmHr
0x0C7A	0x2400      	ADDWF       R0, 0 
0x0C7C	0x6FB7      	MOVWF       FLOC__inputTime, 1
0x0C7E	0x0E00      	MOVLW       hi_addr(_alarmHr)
0x0C80	0x2001      	ADDWFC      R1, 0 
0x0C82	0x6FB8      	MOVWF       FLOC__inputTime+1, 1
0x0C84	0xF1B9C196  	MOVFF       _hr2, FARG_BCD2Binary_a
0x0C88	0xF1BAC197  	MOVFF       _hr2+1, FARG_BCD2Binary_a+1
0x0C8C	0xF002EC3D  	CALL        _BCD2Binary, 0
0x0C90	0xFFE1C1B7  	MOVFF       FLOC__inputTime, FSR1L
0x0C94	0xFFE2C1B8  	MOVFF       FLOC__inputTime+1, FSR1H
0x0C98	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0C9C	0xFFE6C001  	MOVFF       R1, POSTINC1
;MyProject.c,351 :: 		alarmMinute[mode-1] = BCD2Binary(minute2);
0x0CA0	0x0E01      	MOVLW       1
0x0CA2	0x5DB3      	SUBWF       FARG_inputTime_mode, 0, 1
0x0CA4	0x6E00      	MOVWF       R0 
0x0CA6	0x0E00      	MOVLW       0
0x0CA8	0x59B4      	SUBWFB      FARG_inputTime_mode+1, 0, 1
0x0CAA	0x6E01      	MOVWF       R1 
0x0CAC	0x0E16      	MOVLW       _alarmMinute
0x0CAE	0x2400      	ADDWF       R0, 0 
0x0CB0	0x6FB7      	MOVWF       FLOC__inputTime, 1
0x0CB2	0x0E00      	MOVLW       hi_addr(_alarmMinute)
0x0CB4	0x2001      	ADDWFC      R1, 0 
0x0CB6	0x6FB8      	MOVWF       FLOC__inputTime+1, 1
0x0CB8	0xF1B9C19E  	MOVFF       _minute2, FARG_BCD2Binary_a
0x0CBC	0x0E00      	MOVLW       0
0x0CBE	0xBF9E      	BTFSC       _minute2, 7, 1
0x0CC0	0x0EFF      	MOVLW       255
0x0CC2	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x0CC4	0xF002EC3D  	CALL        _BCD2Binary, 0
0x0CC8	0xFFE1C1B7  	MOVFF       FLOC__inputTime, FSR1L
0x0CCC	0xFFE2C1B8  	MOVFF       FLOC__inputTime+1, FSR1H
0x0CD0	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,352 :: 		alarmAP[mode-1] = BCD2Binary(ap2);
0x0CD4	0x0E01      	MOVLW       1
0x0CD6	0x5DB3      	SUBWF       FARG_inputTime_mode, 0, 1
0x0CD8	0x6E00      	MOVWF       R0 
0x0CDA	0x0E00      	MOVLW       0
0x0CDC	0x59B4      	SUBWFB      FARG_inputTime_mode+1, 0, 1
0x0CDE	0x6E01      	MOVWF       R1 
0x0CE0	0x0E31      	MOVLW       _alarmAP
0x0CE2	0x2400      	ADDWF       R0, 0 
0x0CE4	0x6FB7      	MOVWF       FLOC__inputTime, 1
0x0CE6	0x0E00      	MOVLW       hi_addr(_alarmAP)
0x0CE8	0x2001      	ADDWFC      R1, 0 
0x0CEA	0x6FB8      	MOVWF       FLOC__inputTime+1, 1
0x0CEC	0xF1B9C193  	MOVFF       _ap2, FARG_BCD2Binary_a
0x0CF0	0x0E00      	MOVLW       0
0x0CF2	0xBF93      	BTFSC       _ap2, 7, 1
0x0CF4	0x0EFF      	MOVLW       255
0x0CF6	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x0CF8	0xF002EC3D  	CALL        _BCD2Binary, 0
0x0CFC	0xFFE1C1B7  	MOVFF       FLOC__inputTime, FSR1L
0x0D00	0xFFE2C1B8  	MOVFF       FLOC__inputTime+1, FSR1H
0x0D04	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,353 :: 		break;
0x0D08	0xD008      	BRA         L_inputTime9
;MyProject.c,355 :: 		}
L_inputTime56:
;MyProject.c,357 :: 		if(set_count == 5) break;
0x0D0A	0x513C      	MOVF        _set_count, 0, 1
0x0D0C	0x0A05      	XORLW       5
0x0D0E	0xE101      	BNZ         L_inputTime59
0x0D10	0xD004      	BRA         L_inputTime9
L_inputTime59:
;MyProject.c,358 :: 		}
L_inputTime55:
;MyProject.c,359 :: 		}
L_inputTime53:
;MyProject.c,360 :: 		if(goBackAlarm) break;            //Break if alarm goes off
0x0D12	0x5243      	MOVF        _goBackAlarm, 1 
0x0D14	0xE001      	BZ          L_inputTime60
0x0D16	0xD001      	BRA         L_inputTime9
L_inputTime60:
;MyProject.c,361 :: 		}
0x0D18	0xD610      	BRA         L_inputTime8
L_inputTime9:
0x0D1A	0x0101      	MOVLB       1
;MyProject.c,363 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0D1C	0x0E01      	MOVLW       1
0x0D1E	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0D20	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,364 :: 		set = 0;
0x0D24	0x6B3B      	CLRF        _set, 1
;MyProject.c,365 :: 		set_count = 0;
0x0D26	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,367 :: 		}
L_end_inputTime:
0x0D28	0x0012      	RETURN      0
; end of _inputTime
_date2Str:
;MyProject.c,202 :: 		void date2Str()
;MyProject.c,204 :: 		date[0] = BCD2UpperCh(day);
0x0D2A	0xF1BEC1AC  	MOVFF       _day, FARG_BCD2UpperCh_bcd
0x0D2E	0xF001ECA9  	CALL        _BCD2UpperCh, 0
0x0D32	0xF132C000  	MOVFF       R0, _date
;MyProject.c,205 :: 		date[1] = BCD2LowerCh(day);
0x0D36	0xF1BEC1AC  	MOVFF       _day, FARG_BCD2LowerCh_bcd
0x0D3A	0xF001ECB6  	CALL        _BCD2LowerCh, 0
0x0D3E	0xF133C000  	MOVFF       R0, _date+1
;MyProject.c,206 :: 		date[3] = BCD2UpperCh(month);
0x0D42	0xF1BEC1AA  	MOVFF       _month, FARG_BCD2UpperCh_bcd
0x0D46	0xF001ECA9  	CALL        _BCD2UpperCh, 0
0x0D4A	0xF135C000  	MOVFF       R0, _date+3
;MyProject.c,207 :: 		date[4] = BCD2LowerCh(month);
0x0D4E	0xF1BEC1AA  	MOVFF       _month, FARG_BCD2LowerCh_bcd
0x0D52	0xF001ECB6  	CALL        _BCD2LowerCh, 0
0x0D56	0xF136C000  	MOVFF       R0, _date+4
;MyProject.c,208 :: 		date[6] = BCD2UpperCh(year);
0x0D5A	0xF1BEC1A9  	MOVFF       _year, FARG_BCD2UpperCh_bcd
0x0D5E	0xF001ECA9  	CALL        _BCD2UpperCh, 0
0x0D62	0xF138C000  	MOVFF       R0, _date+6
;MyProject.c,209 :: 		date[7] = BCD2LowerCh(year);
0x0D66	0xF1BEC1A9  	MOVFF       _year, FARG_BCD2LowerCh_bcd
0x0D6A	0xF001ECB6  	CALL        _BCD2LowerCh, 0
0x0D6E	0xF139C000  	MOVFF       R0, _date+7
;MyProject.c,210 :: 		}
L_end_date2Str:
0x0D72	0x0012      	RETURN      0
; end of _date2Str
_inputDate:
;MyProject.c,369 :: 		void inputDate()                      // Interface for input & write Date
;MyProject.c,371 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0D74	0x0E01      	MOVLW       1
0x0D76	0x0101      	MOVLB       1
0x0D78	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0D7A	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,372 :: 		Lcd_out(1,1,"Date:");
0x0D7E	0x0E01      	MOVLW       1
0x0D80	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0D82	0x0E01      	MOVLW       1
0x0D84	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0D86	0x0E47      	MOVLW       ?lstr14_MyProject
0x0D88	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0D8A	0x0E01      	MOVLW       hi_addr(?lstr14_MyProject)
0x0D8C	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D8E	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,373 :: 		Lcd_out(1,6, date);
0x0D92	0x0E01      	MOVLW       1
0x0D94	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0D96	0x0E06      	MOVLW       6
0x0D98	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0D9A	0x0E32      	MOVLW       _date
0x0D9C	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0D9E	0x0E01      	MOVLW       hi_addr(_date)
0x0DA0	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0DA2	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,374 :: 		Lcd_out(2,1," [Save] [Cancel]");
0x0DA6	0x0E02      	MOVLW       2
0x0DA8	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x0DAA	0x0E01      	MOVLW       1
0x0DAC	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x0DAE	0x0E21      	MOVLW       ?lstr15_MyProject
0x0DB0	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x0DB2	0x0E01      	MOVLW       hi_addr(?lstr15_MyProject)
0x0DB4	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0DB6	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,376 :: 		loopcount = 0;
0x0DBA	0x6BA8      	CLRF        _loopcount, 1
;MyProject.c,377 :: 		set_count = 0;
0x0DBC	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,379 :: 		while(1)
L_inputDate61:
0x0DBE	0x0101      	MOVLB       1
;MyProject.c,381 :: 		set = 0;
0x0DC0	0x6B3B      	CLRF        _set, 1
;MyProject.c,382 :: 		if(PORTA.F0 == 0)              //Mode Pressed
0x0DC2	0xB080      	BTFSC       PORTA, 0 
0x0DC4	0xD015      	BRA         L_inputDate63
;MyProject.c,384 :: 		Delay_ms(100);
0x0DC6	0x0E02      	MOVLW       2
0x0DC8	0x6E0B      	MOVWF       R11, 0
0x0DCA	0x0E04      	MOVLW       4
0x0DCC	0x6E0C      	MOVWF       R12, 0
0x0DCE	0x0EBA      	MOVLW       186
0x0DD0	0x6E0D      	MOVWF       R13, 0
L_inputDate64:
0x0DD2	0x2E0D      	DECFSZ      R13, 1, 0
0x0DD4	0xD7FE      	BRA         L_inputDate64
0x0DD6	0x2E0C      	DECFSZ      R12, 1, 0
0x0DD8	0xD7FC      	BRA         L_inputDate64
0x0DDA	0x2E0B      	DECFSZ      R11, 1, 0
0x0DDC	0xD7FA      	BRA         L_inputDate64
0x0DDE	0x0000      	NOP
;MyProject.c,385 :: 		if(PORTA.F0 == 0)
0x0DE0	0xB080      	BTFSC       PORTA, 0 
0x0DE2	0xD006      	BRA         L_inputDate65
;MyProject.c,387 :: 		set_count++;
0x0DE4	0x2B3C      	INCF        _set_count, 1, 1
;MyProject.c,388 :: 		if(set_count > 5)
0x0DE6	0x513C      	MOVF        _set_count, 0, 1
0x0DE8	0x0805      	SUBLW       5
0x0DEA	0xE202      	BC          L_inputDate66
;MyProject.c,390 :: 		set_count = 1;
0x0DEC	0x0E01      	MOVLW       1
0x0DEE	0x6F3C      	MOVWF       _set_count, 1
;MyProject.c,391 :: 		}
L_inputDate66:
;MyProject.c,392 :: 		}
L_inputDate65:
;MyProject.c,393 :: 		}
L_inputDate63:
;MyProject.c,395 :: 		if(set_count)
0x0DF0	0x533C      	MOVF        _set_count, 1, 1
0x0DF2	0xB4D8      	BTFSC       STATUS, 2 
0x0DF4	0xD193      	BRA         L_inputDate67
;MyProject.c,397 :: 		if(PORTA.F1 == 0)
0x0DF6	0xB280      	BTFSC       PORTA, 1 
0x0DF8	0xD011      	BRA         L_inputDate68
;MyProject.c,399 :: 		Delay_ms(100);
0x0DFA	0x0E02      	MOVLW       2
0x0DFC	0x6E0B      	MOVWF       R11, 0
0x0DFE	0x0E04      	MOVLW       4
0x0E00	0x6E0C      	MOVWF       R12, 0
0x0E02	0x0EBA      	MOVLW       186
0x0E04	0x6E0D      	MOVWF       R13, 0
L_inputDate69:
0x0E06	0x2E0D      	DECFSZ      R13, 1, 0
0x0E08	0xD7FE      	BRA         L_inputDate69
0x0E0A	0x2E0C      	DECFSZ      R12, 1, 0
0x0E0C	0xD7FC      	BRA         L_inputDate69
0x0E0E	0x2E0B      	DECFSZ      R11, 1, 0
0x0E10	0xD7FA      	BRA         L_inputDate69
0x0E12	0x0000      	NOP
;MyProject.c,400 :: 		if(PORTA.F1 == 0)
0x0E14	0xB280      	BTFSC       PORTA, 1 
0x0E16	0xD002      	BRA         L_inputDate70
;MyProject.c,401 :: 		set = 1;
0x0E18	0x0E01      	MOVLW       1
0x0E1A	0x6F3B      	MOVWF       _set, 1
L_inputDate70:
;MyProject.c,402 :: 		}
L_inputDate68:
;MyProject.c,404 :: 		if(PORTA.F2 == 0)
0x0E1C	0xB480      	BTFSC       PORTA, 2 
0x0E1E	0xD011      	BRA         L_inputDate71
;MyProject.c,406 :: 		Delay_ms(100);
0x0E20	0x0E02      	MOVLW       2
0x0E22	0x6E0B      	MOVWF       R11, 0
0x0E24	0x0E04      	MOVLW       4
0x0E26	0x6E0C      	MOVWF       R12, 0
0x0E28	0x0EBA      	MOVLW       186
0x0E2A	0x6E0D      	MOVWF       R13, 0
L_inputDate72:
0x0E2C	0x2E0D      	DECFSZ      R13, 1, 0
0x0E2E	0xD7FE      	BRA         L_inputDate72
0x0E30	0x2E0C      	DECFSZ      R12, 1, 0
0x0E32	0xD7FC      	BRA         L_inputDate72
0x0E34	0x2E0B      	DECFSZ      R11, 1, 0
0x0E36	0xD7FA      	BRA         L_inputDate72
0x0E38	0x0000      	NOP
;MyProject.c,407 :: 		if(PORTA.F2 == 0)
0x0E3A	0xB480      	BTFSC       PORTA, 2 
0x0E3C	0xD002      	BRA         L_inputDate73
;MyProject.c,408 :: 		set = -1;
0x0E3E	0x0EFF      	MOVLW       255
0x0E40	0x6F3B      	MOVWF       _set, 1
L_inputDate73:
;MyProject.c,409 :: 		}
L_inputDate71:
;MyProject.c,410 :: 		if(set_count && set)
0x0E42	0x533C      	MOVF        _set_count, 1, 1
0x0E44	0xB4D8      	BTFSC       STATUS, 2 
0x0E46	0xD16A      	BRA         L_inputDate76
0x0E48	0x533B      	MOVF        _set, 1, 1
0x0E4A	0xB4D8      	BTFSC       STATUS, 2 
0x0E4C	0xD167      	BRA         L_inputDate76
L__inputDate271:
;MyProject.c,412 :: 		switch(set_count)
0x0E4E	0xD15C      	BRA         L_inputDate77
;MyProject.c,414 :: 		case 3:
L_inputDate79:
;MyProject.c,415 :: 		day = BCD2Binary(day);
0x0E50	0xF1B9C1AC  	MOVFF       _day, FARG_BCD2Binary_a
0x0E54	0x0E00      	MOVLW       0
0x0E56	0xBFAC      	BTFSC       _day, 7, 1
0x0E58	0x0EFF      	MOVLW       255
0x0E5A	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x0E5C	0xF002EC3D  	CALL        _BCD2Binary, 0
0x0E60	0xF1ACC000  	MOVFF       R0, _day
;MyProject.c,416 :: 		day = day + set;
0x0E64	0x513B      	MOVF        _set, 0, 1
0x0E66	0x2600      	ADDWF       R0, 1 
0x0E68	0xF1ACC000  	MOVFF       R0, _day
;MyProject.c,417 :: 		day = Binary2BCD(day);
0x0E6C	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x0E70	0x0E00      	MOVLW       0
0x0E72	0xBE00      	BTFSC       R0, 7 
0x0E74	0x0EFF      	MOVLW       255
0x0E76	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x0E78	0xF002EC6D  	CALL        _Binary2BCD, 0
0x0E7C	0xF1ACC000  	MOVFF       R0, _day
;MyProject.c,423 :: 		if(month == 0x1 || month == 0x3 || month == 0x5 || month == 0x7 || month == 0x8 || month == 0x10 || month == 0x12) // 31 Days
0x0E80	0x51AA      	MOVF        _month, 0, 1
0x0E82	0x0A01      	XORLW       1
0x0E84	0xE013      	BZ          L__inputDate270
0x0E86	0x51AA      	MOVF        _month, 0, 1
0x0E88	0x0A03      	XORLW       3
0x0E8A	0xE010      	BZ          L__inputDate270
0x0E8C	0x51AA      	MOVF        _month, 0, 1
0x0E8E	0x0A05      	XORLW       5
0x0E90	0xE00D      	BZ          L__inputDate270
0x0E92	0x51AA      	MOVF        _month, 0, 1
0x0E94	0x0A07      	XORLW       7
0x0E96	0xE00A      	BZ          L__inputDate270
0x0E98	0x51AA      	MOVF        _month, 0, 1
0x0E9A	0x0A08      	XORLW       8
0x0E9C	0xE007      	BZ          L__inputDate270
0x0E9E	0x51AA      	MOVF        _month, 0, 1
0x0EA0	0x0A10      	XORLW       16
0x0EA2	0xE004      	BZ          L__inputDate270
0x0EA4	0x51AA      	MOVF        _month, 0, 1
0x0EA6	0x0A12      	XORLW       18
0x0EA8	0xE001      	BZ          L__inputDate270
0x0EAA	0xD012      	BRA         L_inputDate82
L__inputDate270:
;MyProject.c,425 :: 		if (day > 0x31) day =1;
0x0EAC	0x0E80      	MOVLW       128
0x0EAE	0x0A31      	XORLW       49
0x0EB0	0x6E00      	MOVWF       R0 
0x0EB2	0x0E80      	MOVLW       128
0x0EB4	0x19AC      	XORWF       _day, 0, 1
0x0EB6	0x5C00      	SUBWF       R0, 0 
0x0EB8	0xE202      	BC          L_inputDate83
0x0EBA	0x0E01      	MOVLW       1
0x0EBC	0x6FAC      	MOVWF       _day, 1
L_inputDate83:
;MyProject.c,426 :: 		if (day < 1) day = 0x31;
0x0EBE	0x0E80      	MOVLW       128
0x0EC0	0x19AC      	XORWF       _day, 0, 1
0x0EC2	0x6E00      	MOVWF       R0 
0x0EC4	0x0E80      	MOVLW       128
0x0EC6	0x0A01      	XORLW       1
0x0EC8	0x5C00      	SUBWF       R0, 0 
0x0ECA	0xE202      	BC          L_inputDate84
0x0ECC	0x0E31      	MOVLW       49
0x0ECE	0x6FAC      	MOVWF       _day, 1
L_inputDate84:
;MyProject.c,427 :: 		}
L_inputDate82:
;MyProject.c,428 :: 		if(month == 0x4 || month == 0x6 || month == 0x9 || month == 0x11) // 30 Days
0x0ED0	0x51AA      	MOVF        _month, 0, 1
0x0ED2	0x0A04      	XORLW       4
0x0ED4	0xE00A      	BZ          L__inputDate269
0x0ED6	0x51AA      	MOVF        _month, 0, 1
0x0ED8	0x0A06      	XORLW       6
0x0EDA	0xE007      	BZ          L__inputDate269
0x0EDC	0x51AA      	MOVF        _month, 0, 1
0x0EDE	0x0A09      	XORLW       9
0x0EE0	0xE004      	BZ          L__inputDate269
0x0EE2	0x51AA      	MOVF        _month, 0, 1
0x0EE4	0x0A11      	XORLW       17
0x0EE6	0xE001      	BZ          L__inputDate269
0x0EE8	0xD012      	BRA         L_inputDate87
L__inputDate269:
;MyProject.c,430 :: 		if (day > 0x30) day =1;
0x0EEA	0x0E80      	MOVLW       128
0x0EEC	0x0A30      	XORLW       48
0x0EEE	0x6E00      	MOVWF       R0 
0x0EF0	0x0E80      	MOVLW       128
0x0EF2	0x19AC      	XORWF       _day, 0, 1
0x0EF4	0x5C00      	SUBWF       R0, 0 
0x0EF6	0xE202      	BC          L_inputDate88
0x0EF8	0x0E01      	MOVLW       1
0x0EFA	0x6FAC      	MOVWF       _day, 1
L_inputDate88:
;MyProject.c,431 :: 		if (day < 1) day = 0x30;
0x0EFC	0x0E80      	MOVLW       128
0x0EFE	0x19AC      	XORWF       _day, 0, 1
0x0F00	0x6E00      	MOVWF       R0 
0x0F02	0x0E80      	MOVLW       128
0x0F04	0x0A01      	XORLW       1
0x0F06	0x5C00      	SUBWF       R0, 0 
0x0F08	0xE202      	BC          L_inputDate89
0x0F0A	0x0E30      	MOVLW       48
0x0F0C	0x6FAC      	MOVWF       _day, 1
L_inputDate89:
;MyProject.c,432 :: 		}
L_inputDate87:
;MyProject.c,433 :: 		if(month == 0x2) // February
0x0F0E	0x51AA      	MOVF        _month, 0, 1
0x0F10	0x0A02      	XORLW       2
0x0F12	0xA4D8      	BTFSS       STATUS, 2 
0x0F14	0xD099      	BRA         L_inputDate90
;MyProject.c,435 :: 		if(BCD2Binary(year) % 100 == 0)                                          // If Divisible by 100
0x0F16	0xF1B9C1A9  	MOVFF       _year, FARG_BCD2Binary_a
0x0F1A	0x0E00      	MOVLW       0
0x0F1C	0xBFA9      	BTFSC       _year, 7, 1
0x0F1E	0x0EFF      	MOVLW       255
0x0F20	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x0F22	0xF002EC3D  	CALL        _BCD2Binary, 0
0x0F26	0x0E64      	MOVLW       100
0x0F28	0x6E04      	MOVWF       R4 
0x0F2A	0x0E00      	MOVLW       0
0x0F2C	0x6E05      	MOVWF       R5 
0x0F2E	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x0F32	0xF000C008  	MOVFF       R8, R0
0x0F36	0xF001C009  	MOVFF       R9, R1
0x0F3A	0x0E00      	MOVLW       0
0x0F3C	0x1801      	XORWF       R1, 0 
0x0F3E	0xE102      	BNZ         L__inputDate295
0x0F40	0x0E00      	MOVLW       0
0x0F42	0x1800      	XORWF       R0, 0 
L__inputDate295:
0x0F44	0xE141      	BNZ         L_inputDate91
;MyProject.c,437 :: 		if(BCD2Binary(year) % 400 == 0) //Leap Year
0x0F46	0xF1B9C1A9  	MOVFF       _year, FARG_BCD2Binary_a
0x0F4A	0x0E00      	MOVLW       0
0x0F4C	0x0101      	MOVLB       1
0x0F4E	0xBFA9      	BTFSC       _year, 7, 1
0x0F50	0x0EFF      	MOVLW       255
0x0F52	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x0F54	0xF002EC3D  	CALL        _BCD2Binary, 0
0x0F58	0x0E90      	MOVLW       144
0x0F5A	0x6E04      	MOVWF       R4 
0x0F5C	0x0E01      	MOVLW       1
0x0F5E	0x6E05      	MOVWF       R5 
0x0F60	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x0F64	0xF000C008  	MOVFF       R8, R0
0x0F68	0xF001C009  	MOVFF       R9, R1
0x0F6C	0x0E00      	MOVLW       0
0x0F6E	0x1801      	XORWF       R1, 0 
0x0F70	0xE102      	BNZ         L__inputDate296
0x0F72	0x0E00      	MOVLW       0
0x0F74	0x1800      	XORWF       R0, 0 
L__inputDate296:
0x0F76	0xE114      	BNZ         L_inputDate92
;MyProject.c,439 :: 		if (day > 0x29) day =1;
0x0F78	0x0E80      	MOVLW       128
0x0F7A	0x0A29      	XORLW       41
0x0F7C	0x6E00      	MOVWF       R0 
0x0F7E	0x0E80      	MOVLW       128
0x0F80	0x0101      	MOVLB       1
0x0F82	0x19AC      	XORWF       _day, 0, 1
0x0F84	0x5C00      	SUBWF       R0, 0 
0x0F86	0xE202      	BC          L_inputDate93
0x0F88	0x0E01      	MOVLW       1
0x0F8A	0x6FAC      	MOVWF       _day, 1
L_inputDate93:
;MyProject.c,440 :: 		if (day < 1) day = 0x29;
0x0F8C	0x0E80      	MOVLW       128
0x0F8E	0x19AC      	XORWF       _day, 0, 1
0x0F90	0x6E00      	MOVWF       R0 
0x0F92	0x0E80      	MOVLW       128
0x0F94	0x0A01      	XORLW       1
0x0F96	0x5C00      	SUBWF       R0, 0 
0x0F98	0xE202      	BC          L_inputDate94
0x0F9A	0x0E29      	MOVLW       41
0x0F9C	0x6FAC      	MOVWF       _day, 1
L_inputDate94:
;MyProject.c,441 :: 		}
0x0F9E	0xD013      	BRA         L_inputDate95
L_inputDate92:
0x0FA0	0x0101      	MOVLB       1
;MyProject.c,444 :: 		if (day > 0x28) day =1;
0x0FA2	0x0E80      	MOVLW       128
0x0FA4	0x0A28      	XORLW       40
0x0FA6	0x6E00      	MOVWF       R0 
0x0FA8	0x0E80      	MOVLW       128
0x0FAA	0x19AC      	XORWF       _day, 0, 1
0x0FAC	0x5C00      	SUBWF       R0, 0 
0x0FAE	0xE202      	BC          L_inputDate96
0x0FB0	0x0E01      	MOVLW       1
0x0FB2	0x6FAC      	MOVWF       _day, 1
L_inputDate96:
;MyProject.c,445 :: 		if (day < 1) day = 0x28;
0x0FB4	0x0E80      	MOVLW       128
0x0FB6	0x19AC      	XORWF       _day, 0, 1
0x0FB8	0x6E00      	MOVWF       R0 
0x0FBA	0x0E80      	MOVLW       128
0x0FBC	0x0A01      	XORLW       1
0x0FBE	0x5C00      	SUBWF       R0, 0 
0x0FC0	0xE202      	BC          L_inputDate97
0x0FC2	0x0E28      	MOVLW       40
0x0FC4	0x6FAC      	MOVWF       _day, 1
L_inputDate97:
;MyProject.c,446 :: 		}
L_inputDate95:
;MyProject.c,447 :: 		}
0x0FC6	0xD040      	BRA         L_inputDate98
L_inputDate91:
0x0FC8	0x0101      	MOVLB       1
;MyProject.c,450 :: 		if(BCD2Binary(year) % 4 == 0) //Leap Year
0x0FCA	0xF1B9C1A9  	MOVFF       _year, FARG_BCD2Binary_a
0x0FCE	0x0E00      	MOVLW       0
0x0FD0	0xBFA9      	BTFSC       _year, 7, 1
0x0FD2	0x0EFF      	MOVLW       255
0x0FD4	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x0FD6	0xF002EC3D  	CALL        _BCD2Binary, 0
0x0FDA	0x0E04      	MOVLW       4
0x0FDC	0x6E04      	MOVWF       R4 
0x0FDE	0x0E00      	MOVLW       0
0x0FE0	0x6E05      	MOVWF       R5 
0x0FE2	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x0FE6	0xF000C008  	MOVFF       R8, R0
0x0FEA	0xF001C009  	MOVFF       R9, R1
0x0FEE	0x0E00      	MOVLW       0
0x0FF0	0x1801      	XORWF       R1, 0 
0x0FF2	0xE102      	BNZ         L__inputDate297
0x0FF4	0x0E00      	MOVLW       0
0x0FF6	0x1800      	XORWF       R0, 0 
L__inputDate297:
0x0FF8	0xE114      	BNZ         L_inputDate99
;MyProject.c,452 :: 		if (day > 0x29) day =1;
0x0FFA	0x0E80      	MOVLW       128
0x0FFC	0x0A29      	XORLW       41
0x0FFE	0x6E00      	MOVWF       R0 
0x1000	0x0E80      	MOVLW       128
0x1002	0x0101      	MOVLB       1
0x1004	0x19AC      	XORWF       _day, 0, 1
0x1006	0x5C00      	SUBWF       R0, 0 
0x1008	0xE202      	BC          L_inputDate100
0x100A	0x0E01      	MOVLW       1
0x100C	0x6FAC      	MOVWF       _day, 1
L_inputDate100:
;MyProject.c,453 :: 		if (day < 1) day = 0x29;
0x100E	0x0E80      	MOVLW       128
0x1010	0x19AC      	XORWF       _day, 0, 1
0x1012	0x6E00      	MOVWF       R0 
0x1014	0x0E80      	MOVLW       128
0x1016	0x0A01      	XORLW       1
0x1018	0x5C00      	SUBWF       R0, 0 
0x101A	0xE202      	BC          L_inputDate101
0x101C	0x0E29      	MOVLW       41
0x101E	0x6FAC      	MOVWF       _day, 1
L_inputDate101:
;MyProject.c,454 :: 		}
0x1020	0xD013      	BRA         L_inputDate102
L_inputDate99:
0x1022	0x0101      	MOVLB       1
;MyProject.c,457 :: 		if (day > 0x28) day =1;
0x1024	0x0E80      	MOVLW       128
0x1026	0x0A28      	XORLW       40
0x1028	0x6E00      	MOVWF       R0 
0x102A	0x0E80      	MOVLW       128
0x102C	0x19AC      	XORWF       _day, 0, 1
0x102E	0x5C00      	SUBWF       R0, 0 
0x1030	0xE202      	BC          L_inputDate103
0x1032	0x0E01      	MOVLW       1
0x1034	0x6FAC      	MOVWF       _day, 1
L_inputDate103:
;MyProject.c,458 :: 		if (day < 1) day = 0x28;
0x1036	0x0E80      	MOVLW       128
0x1038	0x19AC      	XORWF       _day, 0, 1
0x103A	0x6E00      	MOVWF       R0 
0x103C	0x0E80      	MOVLW       128
0x103E	0x0A01      	XORLW       1
0x1040	0x5C00      	SUBWF       R0, 0 
0x1042	0xE202      	BC          L_inputDate104
0x1044	0x0E28      	MOVLW       40
0x1046	0x6FAC      	MOVWF       _day, 1
L_inputDate104:
;MyProject.c,459 :: 		}
L_inputDate102:
;MyProject.c,460 :: 		}
L_inputDate98:
;MyProject.c,461 :: 		}
L_inputDate90:
;MyProject.c,463 :: 		break;
0x1048	0xD069      	BRA         L_inputDate78
;MyProject.c,466 :: 		case 2:
L_inputDate105:
;MyProject.c,467 :: 		month = BCD2Binary(month);
0x104A	0xF1B9C1AA  	MOVFF       _month, FARG_BCD2Binary_a
0x104E	0x0E00      	MOVLW       0
0x1050	0xBFAA      	BTFSC       _month, 7, 1
0x1052	0x0EFF      	MOVLW       255
0x1054	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x1056	0xF002EC3D  	CALL        _BCD2Binary, 0
0x105A	0xF1AAC000  	MOVFF       R0, _month
;MyProject.c,468 :: 		month = month + set;
0x105E	0x513B      	MOVF        _set, 0, 1
0x1060	0x2600      	ADDWF       R0, 1 
0x1062	0xF1AAC000  	MOVFF       R0, _month
;MyProject.c,469 :: 		month = Binary2BCD(month);
0x1066	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x106A	0x0E00      	MOVLW       0
0x106C	0xBE00      	BTFSC       R0, 7 
0x106E	0x0EFF      	MOVLW       255
0x1070	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x1072	0xF002EC6D  	CALL        _Binary2BCD, 0
0x1076	0xF1AAC000  	MOVFF       R0, _month
;MyProject.c,470 :: 		if(month > 0x12)
0x107A	0x0E80      	MOVLW       128
0x107C	0x0A12      	XORLW       18
0x107E	0x6E02      	MOVWF       R2 
0x1080	0x0E80      	MOVLW       128
0x1082	0x1800      	XORWF       R0, 0 
0x1084	0x5C02      	SUBWF       R2, 0 
0x1086	0xE202      	BC          L_inputDate106
;MyProject.c,471 :: 		month = 1;
0x1088	0x0E01      	MOVLW       1
0x108A	0x6FAA      	MOVWF       _month, 1
L_inputDate106:
;MyProject.c,472 :: 		if(month <= 0)
0x108C	0x0E80      	MOVLW       128
0x108E	0x0A00      	XORLW       0
0x1090	0x6E00      	MOVWF       R0 
0x1092	0x0E80      	MOVLW       128
0x1094	0x19AA      	XORWF       _month, 0, 1
0x1096	0x5C00      	SUBWF       R0, 0 
0x1098	0xE302      	BNC         L_inputDate107
;MyProject.c,473 :: 		month = 0x12;
0x109A	0x0E12      	MOVLW       18
0x109C	0x6FAA      	MOVWF       _month, 1
L_inputDate107:
;MyProject.c,474 :: 		minute = Binary2BCD(minute);
0x109E	0xF1B9C1AB  	MOVFF       _minute, FARG_Binary2BCD_a
0x10A2	0x0E00      	MOVLW       0
0x10A4	0xBFAB      	BTFSC       _minute, 7, 1
0x10A6	0x0EFF      	MOVLW       255
0x10A8	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x10AA	0xF002EC6D  	CALL        _Binary2BCD, 0
0x10AE	0xF1ABC000  	MOVFF       R0, _minute
;MyProject.c,476 :: 		break;
0x10B2	0xD034      	BRA         L_inputDate78
;MyProject.c,477 :: 		case 1:
L_inputDate108:
;MyProject.c,478 :: 		year = BCD2Binary(year);
0x10B4	0xF1B9C1A9  	MOVFF       _year, FARG_BCD2Binary_a
0x10B8	0x0E00      	MOVLW       0
0x10BA	0xBFA9      	BTFSC       _year, 7, 1
0x10BC	0x0EFF      	MOVLW       255
0x10BE	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x10C0	0xF002EC3D  	CALL        _BCD2Binary, 0
0x10C4	0xF1A9C000  	MOVFF       R0, _year
;MyProject.c,479 :: 		year = year + set;
0x10C8	0x513B      	MOVF        _set, 0, 1
0x10CA	0x2600      	ADDWF       R0, 1 
0x10CC	0xF1A9C000  	MOVFF       R0, _year
;MyProject.c,480 :: 		year = Binary2BCD(year);
0x10D0	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x10D4	0x0E00      	MOVLW       0
0x10D6	0xBE00      	BTFSC       R0, 7 
0x10D8	0x0EFF      	MOVLW       255
0x10DA	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x10DC	0xF002EC6D  	CALL        _Binary2BCD, 0
0x10E0	0xF1A9C000  	MOVFF       R0, _year
;MyProject.c,481 :: 		if(year <= -1)
0x10E4	0x0E80      	MOVLW       128
0x10E6	0x0AFF      	XORLW       255
0x10E8	0x6E02      	MOVWF       R2 
0x10EA	0x0E80      	MOVLW       128
0x10EC	0x1800      	XORWF       R0, 0 
0x10EE	0x5C02      	SUBWF       R2, 0 
0x10F0	0xE302      	BNC         L_inputDate109
;MyProject.c,482 :: 		year = 0x99;
0x10F2	0x0E99      	MOVLW       153
0x10F4	0x6FA9      	MOVWF       _year, 1
L_inputDate109:
;MyProject.c,483 :: 		if(year >= 0x50)
0x10F6	0x0E80      	MOVLW       128
0x10F8	0x19A9      	XORWF       _year, 0, 1
0x10FA	0x6E00      	MOVWF       R0 
0x10FC	0x0E80      	MOVLW       128
0x10FE	0x0A50      	XORLW       80
0x1100	0x5C00      	SUBWF       R0, 0 
0x1102	0xB0D8      	BTFSC       STATUS, 0 
;MyProject.c,484 :: 		year = 0;
0x1104	0x6BA9      	CLRF        _year, 1
L_inputDate110:
;MyProject.c,485 :: 		break;
0x1106	0xD00A      	BRA         L_inputDate78
;MyProject.c,486 :: 		}
L_inputDate77:
0x1108	0x513C      	MOVF        _set_count, 0, 1
0x110A	0x0A03      	XORLW       3
0x110C	0xB4D8      	BTFSC       STATUS, 2 
0x110E	0xD6A0      	BRA         L_inputDate79
0x1110	0x513C      	MOVF        _set_count, 0, 1
0x1112	0x0A02      	XORLW       2
0x1114	0xE09A      	BZ          L_inputDate105
0x1116	0x513C      	MOVF        _set_count, 0, 1
0x1118	0x0A01      	XORLW       1
0x111A	0xE0CC      	BZ          L_inputDate108
L_inputDate78:
;MyProject.c,488 :: 		}
L_inputDate76:
;MyProject.c,489 :: 		}
L_inputDate67:
;MyProject.c,490 :: 		date2Str();
0x111C	0xDE06      	RCALL       _date2Str
;MyProject.c,493 :: 		loopcount ++;
0x111E	0x2BA8      	INCF        _loopcount, 1, 1
;MyProject.c,494 :: 		if(loopcount > 10) loopcount = 0; // For blinking
0x1120	0x0E80      	MOVLW       128
0x1122	0x0A0A      	XORLW       10
0x1124	0x6E00      	MOVWF       R0 
0x1126	0x0E80      	MOVLW       128
0x1128	0x19A8      	XORWF       _loopcount, 0, 1
0x112A	0x5C00      	SUBWF       R0, 0 
0x112C	0xA0D8      	BTFSS       STATUS, 0 
0x112E	0x6BA8      	CLRF        _loopcount, 1
L_inputDate111:
;MyProject.c,495 :: 		if(loopcount < 5)
0x1130	0x0E80      	MOVLW       128
0x1132	0x19A8      	XORWF       _loopcount, 0, 1
0x1134	0x6E00      	MOVWF       R0 
0x1136	0x0E80      	MOVLW       128
0x1138	0x0A05      	XORLW       5
0x113A	0x5C00      	SUBWF       R0, 0 
0x113C	0xE21F      	BC          L_inputDate112
;MyProject.c,497 :: 		Lcd_out(1,6, date);     //Show full date for 1s
0x113E	0x0E01      	MOVLW       1
0x1140	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1142	0x0E06      	MOVLW       6
0x1144	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1146	0x0E32      	MOVLW       _date
0x1148	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x114A	0x0E01      	MOVLW       hi_addr(_date)
0x114C	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x114E	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,498 :: 		Lcd_out(2,3, "Save");
0x1152	0x0E02      	MOVLW       2
0x1154	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1156	0x0E03      	MOVLW       3
0x1158	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x115A	0x0E57      	MOVLW       ?lstr16_MyProject
0x115C	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x115E	0x0E01      	MOVLW       hi_addr(?lstr16_MyProject)
0x1160	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1162	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,499 :: 		Lcd_out(2,10, "Cancel");
0x1166	0x0E02      	MOVLW       2
0x1168	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x116A	0x0E0A      	MOVLW       10
0x116C	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x116E	0x0E50      	MOVLW       ?lstr17_MyProject
0x1170	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1172	0x0E01      	MOVLW       hi_addr(?lstr17_MyProject)
0x1174	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1176	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,500 :: 		}
0x117A	0xD045      	BRA         L_inputDate113
L_inputDate112:
;MyProject.c,503 :: 		if (set_count  ==1) Lcd_out(1,12, "__");
0x117C	0x513C      	MOVF        _set_count, 0, 1
0x117E	0x0A01      	XORLW       1
0x1180	0xE10B      	BNZ         L_inputDate114
0x1182	0x0E01      	MOVLW       1
0x1184	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1186	0x0E0C      	MOVLW       12
0x1188	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x118A	0x0E1E      	MOVLW       ?lstr18_MyProject
0x118C	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x118E	0x0E01      	MOVLW       hi_addr(?lstr18_MyProject)
0x1190	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1192	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1196	0xD037      	BRA         L_inputDate115
L_inputDate114:
;MyProject.c,504 :: 		else if (set_count  ==2) Lcd_out(1,9, "__");
0x1198	0x513C      	MOVF        _set_count, 0, 1
0x119A	0x0A02      	XORLW       2
0x119C	0xE10B      	BNZ         L_inputDate116
0x119E	0x0E01      	MOVLW       1
0x11A0	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x11A2	0x0E09      	MOVLW       9
0x11A4	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x11A6	0x0E55      	MOVLW       ?lstr19_MyProject
0x11A8	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x11AA	0x0E00      	MOVLW       hi_addr(?lstr19_MyProject)
0x11AC	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x11AE	0xF002ECC3  	CALL        _Lcd_Out, 0
0x11B2	0xD029      	BRA         L_inputDate117
L_inputDate116:
;MyProject.c,505 :: 		else if (set_count  ==3) Lcd_out(1,6, "__");
0x11B4	0x513C      	MOVF        _set_count, 0, 1
0x11B6	0x0A03      	XORLW       3
0x11B8	0xE10B      	BNZ         L_inputDate118
0x11BA	0x0E01      	MOVLW       1
0x11BC	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x11BE	0x0E06      	MOVLW       6
0x11C0	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x11C2	0x0E58      	MOVLW       ?lstr20_MyProject
0x11C4	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x11C6	0x0E00      	MOVLW       hi_addr(?lstr20_MyProject)
0x11C8	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x11CA	0xF002ECC3  	CALL        _Lcd_Out, 0
0x11CE	0xD01B      	BRA         L_inputDate119
L_inputDate118:
;MyProject.c,506 :: 		else if (set_count == 4) Lcd_out(2,3, "____");
0x11D0	0x513C      	MOVF        _set_count, 0, 1
0x11D2	0x0A04      	XORLW       4
0x11D4	0xE10B      	BNZ         L_inputDate120
0x11D6	0x0E02      	MOVLW       2
0x11D8	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x11DA	0x0E03      	MOVLW       3
0x11DC	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x11DE	0x0E5B      	MOVLW       ?lstr21_MyProject
0x11E0	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x11E2	0x0E00      	MOVLW       hi_addr(?lstr21_MyProject)
0x11E4	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x11E6	0xF002ECC3  	CALL        _Lcd_Out, 0
0x11EA	0xD00D      	BRA         L_inputDate121
L_inputDate120:
;MyProject.c,507 :: 		else if (set_count  ==5) Lcd_out(2,10, "______");
0x11EC	0x513C      	MOVF        _set_count, 0, 1
0x11EE	0x0A05      	XORLW       5
0x11F0	0xE10A      	BNZ         L_inputDate122
0x11F2	0x0E02      	MOVLW       2
0x11F4	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x11F6	0x0E0A      	MOVLW       10
0x11F8	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x11FA	0x0E4E      	MOVLW       ?lstr22_MyProject
0x11FC	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x11FE	0x0E00      	MOVLW       hi_addr(?lstr22_MyProject)
0x1200	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1202	0xF002ECC3  	CALL        _Lcd_Out, 0
L_inputDate122:
L_inputDate121:
L_inputDate119:
L_inputDate117:
L_inputDate115:
;MyProject.c,508 :: 		}
L_inputDate113:
;MyProject.c,511 :: 		Delay_ms(100);
0x1206	0x0E02      	MOVLW       2
0x1208	0x6E0B      	MOVWF       R11, 0
0x120A	0x0E04      	MOVLW       4
0x120C	0x6E0C      	MOVWF       R12, 0
0x120E	0x0EBA      	MOVLW       186
0x1210	0x6E0D      	MOVWF       R13, 0
L_inputDate123:
0x1212	0x2E0D      	DECFSZ      R13, 1, 0
0x1214	0xD7FE      	BRA         L_inputDate123
0x1216	0x2E0C      	DECFSZ      R12, 1, 0
0x1218	0xD7FC      	BRA         L_inputDate123
0x121A	0x2E0B      	DECFSZ      R11, 1, 0
0x121C	0xD7FA      	BRA         L_inputDate123
0x121E	0x0000      	NOP
;MyProject.c,513 :: 		if(PORTA.F3 == 0)                        // Break the while loop when menu pressed
0x1220	0xB680      	BTFSC       PORTA, 3 
0x1222	0xD027      	BRA         L_inputDate124
;MyProject.c,515 :: 		Delay_ms(100);
0x1224	0x0E02      	MOVLW       2
0x1226	0x6E0B      	MOVWF       R11, 0
0x1228	0x0E04      	MOVLW       4
0x122A	0x6E0C      	MOVWF       R12, 0
0x122C	0x0EBA      	MOVLW       186
0x122E	0x6E0D      	MOVWF       R13, 0
L_inputDate125:
0x1230	0x2E0D      	DECFSZ      R13, 1, 0
0x1232	0xD7FE      	BRA         L_inputDate125
0x1234	0x2E0C      	DECFSZ      R12, 1, 0
0x1236	0xD7FC      	BRA         L_inputDate125
0x1238	0x2E0B      	DECFSZ      R11, 1, 0
0x123A	0xD7FA      	BRA         L_inputDate125
0x123C	0x0000      	NOP
;MyProject.c,516 :: 		if(PORTA.F3 == 0)
0x123E	0xB680      	BTFSC       PORTA, 3 
0x1240	0xD018      	BRA         L_inputDate126
;MyProject.c,518 :: 		if(set_count == 4 )             //Write to RTC, if Save is pressed
0x1242	0x513C      	MOVF        _set_count, 0, 1
0x1244	0x0A04      	XORLW       4
0x1246	0xE114      	BNZ         L_inputDate127
;MyProject.c,520 :: 		write_ds1307(4, day);
0x1248	0x0E04      	MOVLW       4
0x124A	0x6FB9      	MOVWF       FARG_write_ds1307_address, 1
0x124C	0xF1BAC1AC  	MOVFF       _day, FARG_write_ds1307_w_data
0x1250	0xF002ECB6  	CALL        _write_ds1307, 0
;MyProject.c,521 :: 		write_ds1307(5,month);
0x1254	0x0E05      	MOVLW       5
0x1256	0x0101      	MOVLB       1
0x1258	0x6FB9      	MOVWF       FARG_write_ds1307_address, 1
0x125A	0xF1BAC1AA  	MOVFF       _month, FARG_write_ds1307_w_data
0x125E	0xF002ECB6  	CALL        _write_ds1307, 0
;MyProject.c,522 :: 		write_ds1307(6, year);
0x1262	0x0E06      	MOVLW       6
0x1264	0x0101      	MOVLB       1
0x1266	0x6FB9      	MOVWF       FARG_write_ds1307_address, 1
0x1268	0xF1BAC1A9  	MOVFF       _year, FARG_write_ds1307_w_data
0x126C	0xF002ECB6  	CALL        _write_ds1307, 0
;MyProject.c,523 :: 		}
L_inputDate127:
;MyProject.c,524 :: 		break;
0x1270	0xD004      	BRA         L_inputDate62
;MyProject.c,527 :: 		}
L_inputDate126:
;MyProject.c,528 :: 		}
L_inputDate124:
;MyProject.c,529 :: 		if(goBackAlarm) break;                  //Break if alarm goes off
0x1272	0x5243      	MOVF        _goBackAlarm, 1 
0x1274	0xE001      	BZ          L_inputDate129
0x1276	0xD001      	BRA         L_inputDate62
L_inputDate129:
;MyProject.c,530 :: 		}
0x1278	0xD5A2      	BRA         L_inputDate61
L_inputDate62:
;MyProject.c,532 :: 		Lcd_Cmd(_LCD_CLEAR);
0x127A	0x0E01      	MOVLW       1
0x127C	0x0101      	MOVLB       1
0x127E	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1280	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,533 :: 		set = 0;
0x1284	0x6B3B      	CLRF        _set, 1
;MyProject.c,534 :: 		set_count = 0;
0x1286	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,536 :: 		}
L_end_inputDate:
0x1288	0x0012      	RETURN      0
; end of _inputDate
_menuAlarm2:
;MyProject.c,578 :: 		void menuAlarm2(int alarmNo)//****************************** ALARM MENU
;MyProject.c,584 :: 		Lcd_Cmd(_LCD_CLEAR);
0x128A	0x0E01      	MOVLW       1
0x128C	0x0101      	MOVLB       1
0x128E	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1290	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,585 :: 		populateAlarm(alarmNo);
0x1294	0xF1B3C1B1  	MOVFF       FARG_menuAlarm2_alarmNo, FARG_populateAlarm_alarmNo
0x1298	0xF1B4C1B2  	MOVFF       FARG_menuAlarm2_alarmNo+1, FARG_populateAlarm_alarmNo+1
0x129C	0xF003EC19  	CALL        _populateAlarm, 0
;MyProject.c,587 :: 		loopcount = 0;
0x12A0	0x6BA8      	CLRF        _loopcount, 1
;MyProject.c,588 :: 		set_count = 0;
0x12A2	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,590 :: 		while(1)
L_menuAlarm2137:
;MyProject.c,592 :: 		set = 0;
0x12A4	0x6B3B      	CLRF        _set, 1
;MyProject.c,593 :: 		if(PORTA.F0 == 0)              //Mode Pressed
0x12A6	0xB080      	BTFSC       PORTA, 0 
0x12A8	0xD015      	BRA         L_menuAlarm2139
;MyProject.c,595 :: 		Delay_ms(100);
0x12AA	0x0E02      	MOVLW       2
0x12AC	0x6E0B      	MOVWF       R11, 0
0x12AE	0x0E04      	MOVLW       4
0x12B0	0x6E0C      	MOVWF       R12, 0
0x12B2	0x0EBA      	MOVLW       186
0x12B4	0x6E0D      	MOVWF       R13, 0
L_menuAlarm2140:
0x12B6	0x2E0D      	DECFSZ      R13, 1, 0
0x12B8	0xD7FE      	BRA         L_menuAlarm2140
0x12BA	0x2E0C      	DECFSZ      R12, 1, 0
0x12BC	0xD7FC      	BRA         L_menuAlarm2140
0x12BE	0x2E0B      	DECFSZ      R11, 1, 0
0x12C0	0xD7FA      	BRA         L_menuAlarm2140
0x12C2	0x0000      	NOP
;MyProject.c,596 :: 		if(PORTA.F0 == 0)
0x12C4	0xB080      	BTFSC       PORTA, 0 
0x12C6	0xD006      	BRA         L_menuAlarm2141
;MyProject.c,598 :: 		set_count++;
0x12C8	0x2B3C      	INCF        _set_count, 1, 1
;MyProject.c,599 :: 		if(set_count > 4)
0x12CA	0x513C      	MOVF        _set_count, 0, 1
0x12CC	0x0804      	SUBLW       4
0x12CE	0xE202      	BC          L_menuAlarm2142
;MyProject.c,601 :: 		set_count = 1;
0x12D0	0x0E01      	MOVLW       1
0x12D2	0x6F3C      	MOVWF       _set_count, 1
;MyProject.c,602 :: 		}
L_menuAlarm2142:
;MyProject.c,603 :: 		}
L_menuAlarm2141:
;MyProject.c,604 :: 		}
L_menuAlarm2139:
;MyProject.c,606 :: 		if(set_count)
0x12D4	0x533C      	MOVF        _set_count, 1, 1
0x12D6	0xB4D8      	BTFSC       STATUS, 2 
0x12D8	0xD168      	BRA         L_menuAlarm2143
;MyProject.c,608 :: 		if(PORTA.F1 == 0)
0x12DA	0xB280      	BTFSC       PORTA, 1 
0x12DC	0xD011      	BRA         L_menuAlarm2144
;MyProject.c,610 :: 		Delay_ms(100);
0x12DE	0x0E02      	MOVLW       2
0x12E0	0x6E0B      	MOVWF       R11, 0
0x12E2	0x0E04      	MOVLW       4
0x12E4	0x6E0C      	MOVWF       R12, 0
0x12E6	0x0EBA      	MOVLW       186
0x12E8	0x6E0D      	MOVWF       R13, 0
L_menuAlarm2145:
0x12EA	0x2E0D      	DECFSZ      R13, 1, 0
0x12EC	0xD7FE      	BRA         L_menuAlarm2145
0x12EE	0x2E0C      	DECFSZ      R12, 1, 0
0x12F0	0xD7FC      	BRA         L_menuAlarm2145
0x12F2	0x2E0B      	DECFSZ      R11, 1, 0
0x12F4	0xD7FA      	BRA         L_menuAlarm2145
0x12F6	0x0000      	NOP
;MyProject.c,611 :: 		if(PORTA.F1 == 0)
0x12F8	0xB280      	BTFSC       PORTA, 1 
0x12FA	0xD002      	BRA         L_menuAlarm2146
;MyProject.c,612 :: 		set = 1;
0x12FC	0x0E01      	MOVLW       1
0x12FE	0x6F3B      	MOVWF       _set, 1
L_menuAlarm2146:
;MyProject.c,613 :: 		}
L_menuAlarm2144:
;MyProject.c,615 :: 		if(PORTA.F2 == 0)
0x1300	0xB480      	BTFSC       PORTA, 2 
0x1302	0xD011      	BRA         L_menuAlarm2147
;MyProject.c,617 :: 		Delay_ms(100);
0x1304	0x0E02      	MOVLW       2
0x1306	0x6E0B      	MOVWF       R11, 0
0x1308	0x0E04      	MOVLW       4
0x130A	0x6E0C      	MOVWF       R12, 0
0x130C	0x0EBA      	MOVLW       186
0x130E	0x6E0D      	MOVWF       R13, 0
L_menuAlarm2148:
0x1310	0x2E0D      	DECFSZ      R13, 1, 0
0x1312	0xD7FE      	BRA         L_menuAlarm2148
0x1314	0x2E0C      	DECFSZ      R12, 1, 0
0x1316	0xD7FC      	BRA         L_menuAlarm2148
0x1318	0x2E0B      	DECFSZ      R11, 1, 0
0x131A	0xD7FA      	BRA         L_menuAlarm2148
0x131C	0x0000      	NOP
;MyProject.c,618 :: 		if(PORTA.F2 == 0)
0x131E	0xB480      	BTFSC       PORTA, 2 
0x1320	0xD002      	BRA         L_menuAlarm2149
;MyProject.c,619 :: 		set = -1;
0x1322	0x0EFF      	MOVLW       255
0x1324	0x6F3B      	MOVWF       _set, 1
L_menuAlarm2149:
;MyProject.c,620 :: 		}
L_menuAlarm2147:
;MyProject.c,621 :: 		if(set_count && set)
0x1326	0x533C      	MOVF        _set_count, 1, 1
0x1328	0xB4D8      	BTFSC       STATUS, 2 
0x132A	0xD0E3      	BRA         L_menuAlarm2152
0x132C	0x533B      	MOVF        _set, 1, 1
0x132E	0xB4D8      	BTFSC       STATUS, 2 
0x1330	0xD0E0      	BRA         L_menuAlarm2152
L__menuAlarm2272:
;MyProject.c,625 :: 		switch(set_count)
0x1332	0xD0CB      	BRA         L_menuAlarm2153
;MyProject.c,627 :: 		case 1: //On Off
L_menuAlarm2155:
;MyProject.c,628 :: 		alarmStatus[alarmNo-1] = !alarmStatus[alarmNo-1];
0x1334	0x0E01      	MOVLW       1
0x1336	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x1338	0x6E00      	MOVWF       R0 
0x133A	0x0E00      	MOVLW       0
0x133C	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x133E	0x6E01      	MOVWF       R1 
0x1340	0x0E3D      	MOVLW       _alarmStatus
0x1342	0x2400      	ADDWF       R0, 0 
0x1344	0x6E02      	MOVWF       R2 
0x1346	0x0E01      	MOVLW       hi_addr(_alarmStatus)
0x1348	0x2001      	ADDWFC      R1, 0 
0x134A	0x6E03      	MOVWF       R3 
0x134C	0xFFE9C002  	MOVFF       R2, FSR0L
0x1350	0xFFEAC003  	MOVFF       R3, FSR0H
0x1354	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1358	0x5201      	MOVF        R1, 1 
0x135A	0x0E01      	MOVLW       1
0x135C	0xA4D8      	BTFSS       STATUS, 2 
0x135E	0x0E00      	MOVLW       0
0x1360	0x6E00      	MOVWF       R0 
0x1362	0xFFE1C002  	MOVFF       R2, FSR1L
0x1366	0xFFE2C003  	MOVFF       R3, FSR1H
0x136A	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,629 :: 		break;
0x136E	0xD0BB      	BRA         L_menuAlarm2154
;MyProject.c,630 :: 		case 3: //Snooze
L_menuAlarm2156:
;MyProject.c,631 :: 		snoozeTimes[alarmNo-1] += set;
0x1370	0x0E01      	MOVLW       1
0x1372	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x1374	0x6E00      	MOVWF       R0 
0x1376	0x0E00      	MOVLW       0
0x1378	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x137A	0x6E01      	MOVWF       R1 
0x137C	0x0E4D      	MOVLW       _snoozeTimes
0x137E	0x2400      	ADDWF       R0, 0 
0x1380	0x6E02      	MOVWF       R2 
0x1382	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x1384	0x2001      	ADDWFC      R1, 0 
0x1386	0x6E03      	MOVWF       R3 
0x1388	0xFFE9C002  	MOVFF       R2, FSR0L
0x138C	0xFFEAC003  	MOVFF       R3, FSR0H
0x1390	0x513B      	MOVF        _set, 0, 1
0x1392	0x24EE      	ADDWF       POSTINC0, 0 
0x1394	0x6E00      	MOVWF       R0 
0x1396	0xFFE1C002  	MOVFF       R2, FSR1L
0x139A	0xFFE2C003  	MOVFF       R3, FSR1H
0x139E	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,632 :: 		if(snoozeTimes[alarmNo-1] >19) snoozeTimes[alarmNo-1] = 0;
0x13A2	0x0E01      	MOVLW       1
0x13A4	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x13A6	0x6E00      	MOVWF       R0 
0x13A8	0x0E00      	MOVLW       0
0x13AA	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x13AC	0x6E01      	MOVWF       R1 
0x13AE	0x0E4D      	MOVLW       _snoozeTimes
0x13B0	0x2400      	ADDWF       R0, 0 
0x13B2	0x6EE9      	MOVWF       FSR0L 
0x13B4	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x13B6	0x2001      	ADDWFC      R1, 0 
0x13B8	0x6EEA      	MOVWF       FSR0H 
0x13BA	0x0E80      	MOVLW       128
0x13BC	0x0A13      	XORLW       19
0x13BE	0x6E00      	MOVWF       R0 
0x13C0	0x0E80      	MOVLW       128
0x13C2	0x18EE      	XORWF       POSTINC0, 0 
0x13C4	0x5C00      	SUBWF       R0, 0 
0x13C6	0xE20D      	BC          L_menuAlarm2157
0x13C8	0x0E01      	MOVLW       1
0x13CA	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x13CC	0x6E00      	MOVWF       R0 
0x13CE	0x0E00      	MOVLW       0
0x13D0	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x13D2	0x6E01      	MOVWF       R1 
0x13D4	0x0E4D      	MOVLW       _snoozeTimes
0x13D6	0x2400      	ADDWF       R0, 0 
0x13D8	0x6EE1      	MOVWF       FSR1L 
0x13DA	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x13DC	0x2001      	ADDWFC      R1, 0 
0x13DE	0x6EE2      	MOVWF       FSR1H 
0x13E0	0x6AE6      	CLRF        POSTINC1 
L_menuAlarm2157:
;MyProject.c,633 :: 		if(snoozeTimes[alarmNo-1] <0) snoozeTimes[alarmNo-1] = 19;
0x13E2	0x0E01      	MOVLW       1
0x13E4	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x13E6	0x6E00      	MOVWF       R0 
0x13E8	0x0E00      	MOVLW       0
0x13EA	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x13EC	0x6E01      	MOVWF       R1 
0x13EE	0x0E4D      	MOVLW       _snoozeTimes
0x13F0	0x2400      	ADDWF       R0, 0 
0x13F2	0x6EE9      	MOVWF       FSR0L 
0x13F4	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x13F6	0x2001      	ADDWFC      R1, 0 
0x13F8	0x6EEA      	MOVWF       FSR0H 
0x13FA	0x0E80      	MOVLW       128
0x13FC	0x18EE      	XORWF       POSTINC0, 0 
0x13FE	0x6E00      	MOVWF       R0 
0x1400	0x0E80      	MOVLW       128
0x1402	0x0A00      	XORLW       0
0x1404	0x5C00      	SUBWF       R0, 0 
0x1406	0xE20E      	BC          L_menuAlarm2158
0x1408	0x0E01      	MOVLW       1
0x140A	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x140C	0x6E00      	MOVWF       R0 
0x140E	0x0E00      	MOVLW       0
0x1410	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x1412	0x6E01      	MOVWF       R1 
0x1414	0x0E4D      	MOVLW       _snoozeTimes
0x1416	0x2400      	ADDWF       R0, 0 
0x1418	0x6EE1      	MOVWF       FSR1L 
0x141A	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x141C	0x2001      	ADDWFC      R1, 0 
0x141E	0x6EE2      	MOVWF       FSR1H 
0x1420	0x0E13      	MOVLW       19
0x1422	0x6EE6      	MOVWF       POSTINC1 
L_menuAlarm2158:
;MyProject.c,634 :: 		break;
0x1424	0xD060      	BRA         L_menuAlarm2154
;MyProject.c,635 :: 		case 2: //Time
L_menuAlarm2159:
;MyProject.c,636 :: 		alText[3] = BCD2LowerCh(Binary2BCD(alarmNo));
0x1426	0xF1B9C1B1  	MOVFF       FARG_menuAlarm2_alarmNo, FARG_Binary2BCD_a
0x142A	0xF1BAC1B2  	MOVFF       FARG_menuAlarm2_alarmNo+1, FARG_Binary2BCD_a+1
0x142E	0xF002EC6D  	CALL        _Binary2BCD, 0
0x1432	0xF1BEC000  	MOVFF       R0, FARG_BCD2LowerCh_bcd
0x1436	0xF001ECB6  	CALL        _BCD2LowerCh, 0
0x143A	0xF047C000  	MOVFF       R0, _alText+3
;MyProject.c,637 :: 		inputTime(2, alText);    //
0x143E	0x0E02      	MOVLW       2
0x1440	0x6FB3      	MOVWF       FARG_inputTime_mode, 1
0x1442	0x0E00      	MOVLW       0
0x1444	0x6FB4      	MOVWF       FARG_inputTime_mode+1, 1
0x1446	0x0E44      	MOVLW       _alText
0x1448	0x6FB5      	MOVWF       FARG_inputTime_setStr, 1
0x144A	0x0E00      	MOVLW       hi_addr(_alText)
0x144C	0x6FB6      	MOVWF       FARG_inputTime_setStr+1, 1
0x144E	0xF004EC1A  	CALL        _inputTime, 0
;MyProject.c,638 :: 		break;
0x1452	0xD049      	BRA         L_menuAlarm2154
;MyProject.c,639 :: 		case 4: //Tune
L_menuAlarm2160:
;MyProject.c,640 :: 		alarmTunes[alarmNo-1] += set;
0x1454	0x0E01      	MOVLW       1
0x1456	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x1458	0x6E00      	MOVWF       R0 
0x145A	0x0E00      	MOVLW       0
0x145C	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x145E	0x6E01      	MOVWF       R1 
0x1460	0x0E44      	MOVLW       _alarmTunes
0x1462	0x2400      	ADDWF       R0, 0 
0x1464	0x6E02      	MOVWF       R2 
0x1466	0x0E01      	MOVLW       hi_addr(_alarmTunes)
0x1468	0x2001      	ADDWFC      R1, 0 
0x146A	0x6E03      	MOVWF       R3 
0x146C	0xFFE9C002  	MOVFF       R2, FSR0L
0x1470	0xFFEAC003  	MOVFF       R3, FSR0H
0x1474	0x513B      	MOVF        _set, 0, 1
0x1476	0x24EE      	ADDWF       POSTINC0, 0 
0x1478	0x6E00      	MOVWF       R0 
0x147A	0xFFE1C002  	MOVFF       R2, FSR1L
0x147E	0xFFE2C003  	MOVFF       R3, FSR1H
0x1482	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,641 :: 		if(alarmTunes[alarmNo-1] >3) alarmTunes[alarmNo-1] = 1;
0x1486	0x0E01      	MOVLW       1
0x1488	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x148A	0x6E00      	MOVWF       R0 
0x148C	0x0E00      	MOVLW       0
0x148E	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x1490	0x6E01      	MOVWF       R1 
0x1492	0x0E44      	MOVLW       _alarmTunes
0x1494	0x2400      	ADDWF       R0, 0 
0x1496	0x6EE9      	MOVWF       FSR0L 
0x1498	0x0E01      	MOVLW       hi_addr(_alarmTunes)
0x149A	0x2001      	ADDWFC      R1, 0 
0x149C	0x6EEA      	MOVWF       FSR0H 
0x149E	0x0E80      	MOVLW       128
0x14A0	0x0A03      	XORLW       3
0x14A2	0x6E00      	MOVWF       R0 
0x14A4	0x0E80      	MOVLW       128
0x14A6	0x18EE      	XORWF       POSTINC0, 0 
0x14A8	0x5C00      	SUBWF       R0, 0 
0x14AA	0xE20E      	BC          L_menuAlarm2161
0x14AC	0x0E01      	MOVLW       1
0x14AE	0x5DB1      	SUBWF       FARG_menuAlarm2_alarmNo, 0, 1
0x14B0	0x6E00      	MOVWF       R0 
0x14B2	0x0E00      	MOVLW       0
0x14B4	0x59B2      	SUBWFB      FARG_menuAlarm2_alarmNo+1, 0, 1
0x14B6	0x6E01      	MOVWF       R1 
0x14B8	0x0E44      	MOVLW       _alarmTunes
0x14BA	0x2400      	ADDWF       R0, 0 
0x14BC	0x6EE1      	MOVWF       FSR1L 
0x14BE	0x0E01      	MOVLW       hi_addr(_alarmTunes)
0x14C0	0x2001      	ADDWFC      R1, 0 
0x14C2	0x6EE2      	MOVWF       FSR1H 
0x14C4	0x0E01      	MOVLW       1
0x14C6	0x6EE6      	MOVWF       POSTINC1 
L_menuAlarm2161:
;MyProject.c,642 :: 		break;
0x14C8	0xD00E      	BRA         L_menuAlarm2154
;MyProject.c,644 :: 		}
L_menuAlarm2153:
0x14CA	0x513C      	MOVF        _set_count, 0, 1
0x14CC	0x0A01      	XORLW       1
0x14CE	0xB4D8      	BTFSC       STATUS, 2 
0x14D0	0xD731      	BRA         L_menuAlarm2155
0x14D2	0x513C      	MOVF        _set_count, 0, 1
0x14D4	0x0A03      	XORLW       3
0x14D6	0xB4D8      	BTFSC       STATUS, 2 
0x14D8	0xD74B      	BRA         L_menuAlarm2156
0x14DA	0x513C      	MOVF        _set_count, 0, 1
0x14DC	0x0A02      	XORLW       2
0x14DE	0xE0A3      	BZ          L_menuAlarm2159
0x14E0	0x513C      	MOVF        _set_count, 0, 1
0x14E2	0x0A04      	XORLW       4
0x14E4	0xE0B7      	BZ          L_menuAlarm2160
L_menuAlarm2154:
;MyProject.c,645 :: 		populateAlarm(alarmNo);
0x14E6	0xF1B3C1B1  	MOVFF       FARG_menuAlarm2_alarmNo, FARG_populateAlarm_alarmNo
0x14EA	0xF1B4C1B2  	MOVFF       FARG_menuAlarm2_alarmNo+1, FARG_populateAlarm_alarmNo+1
0x14EE	0xF003EC19  	CALL        _populateAlarm, 0
;MyProject.c,647 :: 		}
L_menuAlarm2152:
;MyProject.c,649 :: 		loopcount ++;
0x14F2	0x2BA8      	INCF        _loopcount, 1, 1
;MyProject.c,650 :: 		if(loopcount > 10) loopcount = 0; // For blinking
0x14F4	0x0E80      	MOVLW       128
0x14F6	0x0A0A      	XORLW       10
0x14F8	0x6E00      	MOVWF       R0 
0x14FA	0x0E80      	MOVLW       128
0x14FC	0x19A8      	XORWF       _loopcount, 0, 1
0x14FE	0x5C00      	SUBWF       R0, 0 
0x1500	0xA0D8      	BTFSS       STATUS, 0 
0x1502	0x6BA8      	CLRF        _loopcount, 1
L_menuAlarm2162:
;MyProject.c,651 :: 		if(loopcount < 5)
0x1504	0x0E80      	MOVLW       128
0x1506	0x19A8      	XORWF       _loopcount, 0, 1
0x1508	0x6E00      	MOVWF       R0 
0x150A	0x0E80      	MOVLW       128
0x150C	0x0A05      	XORLW       5
0x150E	0x5C00      	SUBWF       R0, 0 
0x1510	0xE215      	BC          L_menuAlarm2163
;MyProject.c,653 :: 		Lcd_out(1,1, menuAlarmText[0]);
0x1512	0x0E01      	MOVLW       1
0x1514	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1516	0x0E01      	MOVLW       1
0x1518	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x151A	0xF1BBC140  	MOVFF       _menuAlarmText, FARG_Lcd_Out_text
0x151E	0xF1BCC141  	MOVFF       _menuAlarmText+1, FARG_Lcd_Out_text+1
0x1522	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,654 :: 		Lcd_out(2,1, menuAlarmText[1]);     //Show full menu for 0.5s
0x1526	0x0E02      	MOVLW       2
0x1528	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x152A	0x0E01      	MOVLW       1
0x152C	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x152E	0xF1BBC142  	MOVFF       _menuAlarmText+2, FARG_Lcd_Out_text
0x1532	0xF1BCC143  	MOVFF       _menuAlarmText+3, FARG_Lcd_Out_text+1
0x1536	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,655 :: 		}
0x153A	0xD037      	BRA         L_menuAlarm2164
L_menuAlarm2163:
;MyProject.c,658 :: 		if      (set_count  ==1) Lcd_out(1,9, "___");
0x153C	0x513C      	MOVF        _set_count, 0, 1
0x153E	0x0A01      	XORLW       1
0x1540	0xE10B      	BNZ         L_menuAlarm2165
0x1542	0x0E01      	MOVLW       1
0x1544	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1546	0x0E09      	MOVLW       9
0x1548	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x154A	0x0E4A      	MOVLW       ?lstr23_MyProject
0x154C	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x154E	0x0E00      	MOVLW       hi_addr(?lstr23_MyProject)
0x1550	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1552	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1556	0xD029      	BRA         L_menuAlarm2166
L_menuAlarm2165:
;MyProject.c,659 :: 		else if (set_count  ==2) Lcd_out(1,13, "____");
0x1558	0x513C      	MOVF        _set_count, 0, 1
0x155A	0x0A02      	XORLW       2
0x155C	0xE10B      	BNZ         L_menuAlarm2167
0x155E	0x0E01      	MOVLW       1
0x1560	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1562	0x0E0D      	MOVLW       13
0x1564	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1566	0x0E71      	MOVLW       ?lstr24_MyProject
0x1568	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x156A	0x0E00      	MOVLW       hi_addr(?lstr24_MyProject)
0x156C	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x156E	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1572	0xD01B      	BRA         L_menuAlarm2168
L_menuAlarm2167:
;MyProject.c,660 :: 		else if (set_count  ==3) Lcd_out(2,8, "__");
0x1574	0x513C      	MOVF        _set_count, 0, 1
0x1576	0x0A03      	XORLW       3
0x1578	0xE10B      	BNZ         L_menuAlarm2169
0x157A	0x0E02      	MOVLW       2
0x157C	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x157E	0x0E08      	MOVLW       8
0x1580	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1582	0x0E76      	MOVLW       ?lstr25_MyProject
0x1584	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1586	0x0E00      	MOVLW       hi_addr(?lstr25_MyProject)
0x1588	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x158A	0xF002ECC3  	CALL        _Lcd_Out, 0
0x158E	0xD00D      	BRA         L_menuAlarm2170
L_menuAlarm2169:
;MyProject.c,661 :: 		else if (set_count  ==4) Lcd_out(2,16, "_");
0x1590	0x513C      	MOVF        _set_count, 0, 1
0x1592	0x0A04      	XORLW       4
0x1594	0xE10A      	BNZ         L_menuAlarm2171
0x1596	0x0E02      	MOVLW       2
0x1598	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x159A	0x0E10      	MOVLW       16
0x159C	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x159E	0x0E79      	MOVLW       ?lstr26_MyProject
0x15A0	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x15A2	0x0E00      	MOVLW       hi_addr(?lstr26_MyProject)
0x15A4	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x15A6	0xF002ECC3  	CALL        _Lcd_Out, 0
L_menuAlarm2171:
L_menuAlarm2170:
L_menuAlarm2168:
L_menuAlarm2166:
;MyProject.c,662 :: 		}
L_menuAlarm2164:
;MyProject.c,664 :: 		}
L_menuAlarm2143:
;MyProject.c,666 :: 		if(PORTA.F3 == 0)                        // Break the while loop when menu pressed
0x15AA	0xB680      	BTFSC       PORTA, 3 
0x15AC	0xD010      	BRA         L_menuAlarm2172
;MyProject.c,668 :: 		Delay_ms(100);
0x15AE	0x0E02      	MOVLW       2
0x15B0	0x6E0B      	MOVWF       R11, 0
0x15B2	0x0E04      	MOVLW       4
0x15B4	0x6E0C      	MOVWF       R12, 0
0x15B6	0x0EBA      	MOVLW       186
0x15B8	0x6E0D      	MOVWF       R13, 0
L_menuAlarm2173:
0x15BA	0x2E0D      	DECFSZ      R13, 1, 0
0x15BC	0xD7FE      	BRA         L_menuAlarm2173
0x15BE	0x2E0C      	DECFSZ      R12, 1, 0
0x15C0	0xD7FC      	BRA         L_menuAlarm2173
0x15C2	0x2E0B      	DECFSZ      R11, 1, 0
0x15C4	0xD7FA      	BRA         L_menuAlarm2173
0x15C6	0x0000      	NOP
;MyProject.c,669 :: 		if(PORTA.F3 == 0) break;
0x15C8	0xB680      	BTFSC       PORTA, 3 
0x15CA	0xD001      	BRA         L_menuAlarm2174
0x15CC	0xD011      	BRA         L_menuAlarm2138
L_menuAlarm2174:
;MyProject.c,670 :: 		}
L_menuAlarm2172:
;MyProject.c,672 :: 		if(goBackAlarm) break;            //Immediately go back if alarm goes off
0x15CE	0x5243      	MOVF        _goBackAlarm, 1 
0x15D0	0xE001      	BZ          L_menuAlarm2175
0x15D2	0xD00E      	BRA         L_menuAlarm2138
L_menuAlarm2175:
;MyProject.c,675 :: 		Delay_ms(100);
0x15D4	0x0E02      	MOVLW       2
0x15D6	0x6E0B      	MOVWF       R11, 0
0x15D8	0x0E04      	MOVLW       4
0x15DA	0x6E0C      	MOVWF       R12, 0
0x15DC	0x0EBA      	MOVLW       186
0x15DE	0x6E0D      	MOVWF       R13, 0
L_menuAlarm2176:
0x15E0	0x2E0D      	DECFSZ      R13, 1, 0
0x15E2	0xD7FE      	BRA         L_menuAlarm2176
0x15E4	0x2E0C      	DECFSZ      R12, 1, 0
0x15E6	0xD7FC      	BRA         L_menuAlarm2176
0x15E8	0x2E0B      	DECFSZ      R11, 1, 0
0x15EA	0xD7FA      	BRA         L_menuAlarm2176
0x15EC	0x0000      	NOP
;MyProject.c,676 :: 		}
0x15EE	0xD65A      	BRA         L_menuAlarm2137
L_menuAlarm2138:
;MyProject.c,678 :: 		Lcd_Cmd(_LCD_CLEAR);
0x15F0	0x0E01      	MOVLW       1
0x15F2	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x15F4	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,679 :: 		set = 0;
0x15F8	0x6B3B      	CLRF        _set, 1
;MyProject.c,680 :: 		set_count = 0;
0x15FA	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,681 :: 		loopcount = 0;
0x15FC	0x6BA8      	CLRF        _loopcount, 1
;MyProject.c,682 :: 		menuAlarmText[0][6] = "_";
0x15FE	0x0E06      	MOVLW       6
0x1600	0x2540      	ADDWF       _menuAlarmText, 0, 1
0x1602	0x6EE1      	MOVWF       FSR1L 
0x1604	0x0E00      	MOVLW       0
0x1606	0x2141      	ADDWFC      _menuAlarmText+1, 0, 1
0x1608	0x6EE2      	MOVWF       FSR1H 
0x160A	0x0E06      	MOVLW       ?lstr_27_MyProject
0x160C	0x6EE6      	MOVWF       POSTINC1 
;MyProject.c,683 :: 		}
L_end_menuAlarm2:
0x160E	0x0012      	RETURN      0
; end of _menuAlarm2
_read_ds1307:
;MyProject.c,83 :: 		unsigned short read_ds1307(unsigned short address)
;MyProject.c,86 :: 		I2C1_Start();
0x1610	0xF001EC1C  	CALL        _I2C1_Start, 0
;MyProject.c,87 :: 		I2C1_Wr(0xD0); //address 0x68 followed by direction bit (0 for write, 1 for read) 0x68 followed by 0 --> 0xD0
0x1614	0x0ED0      	MOVLW       208
0x1616	0x0101      	MOVLB       1
0x1618	0x6FBE      	MOVWF       FARG_I2C1_Wr_data_, 1
0x161A	0xF001EC0B  	CALL        _I2C1_Wr, 0
;MyProject.c,88 :: 		I2C1_Wr(address);
0x161E	0xF1BEC1B1  	MOVFF       FARG_read_ds1307_address, FARG_I2C1_Wr_data_
0x1622	0xF001EC0B  	CALL        _I2C1_Wr, 0
;MyProject.c,89 :: 		I2C1_Repeated_Start();
0x1626	0xF003ECFF  	CALL        _I2C1_Repeated_Start, 0
;MyProject.c,90 :: 		I2C1_Wr(0xD1); //0x68 followed by 1 --> 0xD1
0x162A	0x0ED1      	MOVLW       209
0x162C	0x0101      	MOVLB       1
0x162E	0x6FBE      	MOVWF       FARG_I2C1_Wr_data_, 1
0x1630	0xF001EC0B  	CALL        _I2C1_Wr, 0
;MyProject.c,91 :: 		r_data=I2C1_Rd(0);
0x1634	0x0101      	MOVLB       1
0x1636	0x6BB3      	CLRF        FARG_I2C1_Rd_ack, 1
0x1638	0xF004EC04  	CALL        _I2C1_Rd, 0
0x163C	0xF1B2C000  	MOVFF       R0, read_ds1307_r_data_L0
;MyProject.c,92 :: 		I2C1_Stop();
0x1640	0xF001EC3D  	CALL        _I2C1_Stop, 0
;MyProject.c,93 :: 		return(r_data);
0x1644	0xF000C1B2  	MOVFF       read_ds1307_r_data_L0, R0
;MyProject.c,94 :: 		}
L_end_read_ds1307:
0x1648	0x0012      	RETURN      0
; end of _read_ds1307
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x164A	0x9693      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x164C	0x9493      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x164E	0x9893      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x1650	0x9A93      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x1652	0x9C93      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x1654	0x9E93      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x1656	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x1658	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x165A	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x165C	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x165E	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x1660	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x1662	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,101 :: 		
0x1666	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,102 :: 		
0x166A	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,105 :: 		
0x166E	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x1670	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x1672	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x1674	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,109 :: 		
0x1678	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x167A	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,112 :: 		
0x167E	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x1680	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,114 :: 		
0x1684	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x1686	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,117 :: 		
0x168A	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x168C	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,119 :: 		
0x1690	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x1692	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,123 :: 		
0x1696	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x1698	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x169A	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,126 :: 		
0x169E	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x16A0	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,130 :: 		
0x16A4	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x16A6	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,132 :: 		
0x16AA	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x16AC	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x16AE	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x16B0	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x16B2	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,138 :: 		
0x16B6	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x16B8	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,142 :: 		
0x16BC	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x16BE	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x16C0	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x16C2	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,146 :: 		
0x16C6	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x16C8	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x16CA	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x16CC	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,151 :: 		
0x16D0	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x16D2	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,155 :: 		
0x16D6	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x16D8	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,157 :: 		
0x16DC	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x16DE	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x16E0	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x16E2	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,162 :: 		
0x16E6	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x16E8	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,166 :: 		
0x16EC	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x16EE	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x16F0	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,169 :: 		
0x16F4	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x16F6	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x16F8	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x16FA	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x16FC	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x16FE	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x1700	0xF000EC90  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,177 :: 		
0x1704	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x1706	0xF000EC80  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,181 :: 		
0x170A	0x0101      	MOVLB       1
0x170C	0x81A6      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x170E	0x0012      	RETURN      0
; end of _Lcd_Init
_I2C1_Init:
;__Lib_I2C_c34.c,4 :: 		
;__Lib_I2C_c34.c,11 :: 		
0x1710	0x9894      	BCF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_I2C_c34.c,12 :: 		
0x1712	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
;__Lib_I2C_c34.c,15 :: 		
0x1714	0x988B      	BCF         LATC4_bit, BitPos(LATC4_bit+0) 
;__Lib_I2C_c34.c,16 :: 		
0x1716	0x968B      	BCF         LATC3_bit, BitPos(LATC3_bit+0) 
;__Lib_I2C_c34.c,19 :: 		
0x1718	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_I2C_c34.c,20 :: 		
0x171A	0x8694      	BSF         TRISC3_bit, BitPos(TRISC3_bit+0) 
;__Lib_I2C_c34.c,22 :: 		
0x171C	0x9EC7      	BCF         SSPSTAT, 7 
;__Lib_I2C_c34.c,23 :: 		
0x171E	0x9CC7      	BCF         SSPSTAT, 6 
;__Lib_I2C_c34.c,24 :: 		
0x1720	0x0E38      	MOVLW       56
0x1722	0x6EC6      	MOVWF       SSPCON1 
;__Lib_I2C_c34.c,27 :: 		
L_end_I2C1_Init:
0x1724	0x0012      	RETURN      0
; end of _I2C1_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x1726	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x1728	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x172C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x172E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x1730	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x1732	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x1734	0x0012      	RETURN      0
; end of ___CC2DW
_readTime:
;MyProject.c,142 :: 		void readTime()
;MyProject.c,144 :: 		second = read_ds1307(0);
0x1736	0x0101      	MOVLB       1
0x1738	0x6BB1      	CLRF        FARG_read_ds1307_address, 1
0x173A	0xDF6A      	RCALL       _read_ds1307
0x173C	0xF19DC000  	MOVFF       R0, _second
;MyProject.c,145 :: 		minute = read_ds1307(1);
0x1740	0x0E01      	MOVLW       1
0x1742	0x0101      	MOVLB       1
0x1744	0x6FB1      	MOVWF       FARG_read_ds1307_address, 1
0x1746	0xDF64      	RCALL       _read_ds1307
0x1748	0xF1ABC000  	MOVFF       R0, _minute
;MyProject.c,146 :: 		hour = read_ds1307(2);
0x174C	0x0E02      	MOVLW       2
0x174E	0x0101      	MOVLB       1
0x1750	0x6FB1      	MOVWF       FARG_read_ds1307_address, 1
0x1752	0xDF5E      	RCALL       _read_ds1307
0x1754	0xF194C000  	MOVFF       R0, _hour
0x1758	0x0E00      	MOVLW       0
0x175A	0x0101      	MOVLB       1
0x175C	0x6F95      	MOVWF       _hour+1, 1
;MyProject.c,147 :: 		hr = hour & 0b00011111;
0x175E	0x0E1F      	MOVLW       31
0x1760	0x1594      	ANDWF       _hour, 0, 1
0x1762	0x6F98      	MOVWF       _hr, 1
0x1764	0xF199C195  	MOVFF       _hour+1, _hr+1
0x1768	0x0E00      	MOVLW       0
0x176A	0x1799      	ANDWF       _hr+1, 1, 1
;MyProject.c,148 :: 		ap = hour & 0b00100000;
0x176C	0x0E20      	MOVLW       32
0x176E	0x1594      	ANDWF       _hour, 0, 1
0x1770	0x6F92      	MOVWF       _ap, 1
;MyProject.c,149 :: 		dday = read_ds1307(3);
0x1772	0x0E03      	MOVLW       3
0x1774	0x6FB1      	MOVWF       FARG_read_ds1307_address, 1
0x1776	0xDF4C      	RCALL       _read_ds1307
0x1778	0xF1A7C000  	MOVFF       R0, _dday
;MyProject.c,150 :: 		day = read_ds1307(4);
0x177C	0x0E04      	MOVLW       4
0x177E	0x0101      	MOVLB       1
0x1780	0x6FB1      	MOVWF       FARG_read_ds1307_address, 1
0x1782	0xDF46      	RCALL       _read_ds1307
0x1784	0xF1ACC000  	MOVFF       R0, _day
;MyProject.c,151 :: 		month = read_ds1307(5);
0x1788	0x0E05      	MOVLW       5
0x178A	0x0101      	MOVLB       1
0x178C	0x6FB1      	MOVWF       FARG_read_ds1307_address, 1
0x178E	0xDF40      	RCALL       _read_ds1307
0x1790	0xF1AAC000  	MOVFF       R0, _month
;MyProject.c,152 :: 		year = read_ds1307(6);
0x1794	0x0E06      	MOVLW       6
0x1796	0x0101      	MOVLB       1
0x1798	0x6FB1      	MOVWF       FARG_read_ds1307_address, 1
0x179A	0xDF3A      	RCALL       _read_ds1307
0x179C	0xF1A9C000  	MOVFF       R0, _year
;MyProject.c,154 :: 		time2Str(0);
0x17A0	0x0101      	MOVLB       1
0x17A2	0x6BB9      	CLRF        FARG_time2Str_temp, 1
0x17A4	0x6BBA      	CLRF        FARG_time2Str_temp+1, 1
0x17A6	0xF001ECE5  	CALL        _time2Str, 0
;MyProject.c,155 :: 		date2Str();
0x17AA	0xF006EC95  	CALL        _date2Str, 0
;MyProject.c,156 :: 		}
L_end_readTime:
0x17AE	0x0012      	RETURN      0
; end of _readTime
_playTone:
;MyProject.c,783 :: 		void playTone()                              // Runs while ringing/snoozing the alarm. Plays the tone, stops, snooze...etc.
;MyProject.c,785 :: 		ringAlarmText[6] = BCD2LowerCh(Binary2BCD(goBackAlarm));
0x17B0	0x0E06      	MOVLW       6
0x17B2	0x247E      	ADDWF       _ringAlarmText, 0 
0x17B4	0x0101      	MOVLB       1
0x17B6	0x6FAD      	MOVWF       FLOC__playTone, 1
0x17B8	0x0E00      	MOVLW       0
0x17BA	0x207F      	ADDWFC      _ringAlarmText+1, 0 
0x17BC	0x6FAE      	MOVWF       FLOC__playTone+1, 1
0x17BE	0xF1B9C043  	MOVFF       _goBackAlarm, FARG_Binary2BCD_a
0x17C2	0x0E00      	MOVLW       0
0x17C4	0xBE43      	BTFSC       _goBackAlarm, 7 
0x17C6	0x0EFF      	MOVLW       255
0x17C8	0x6FBA      	MOVWF       FARG_Binary2BCD_a+1, 1
0x17CA	0xF002EC6D  	CALL        _Binary2BCD, 0
0x17CE	0xF1BEC000  	MOVFF       R0, FARG_BCD2LowerCh_bcd
0x17D2	0xF001ECB6  	CALL        _BCD2LowerCh, 0
0x17D6	0xFFE1C1AD  	MOVFF       FLOC__playTone, FSR1L
0x17DA	0xFFE2C1AE  	MOVFF       FLOC__playTone+1, FSR1H
0x17DE	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,786 :: 		Lcd_out(2,1, ringAlarmText);               //Show Alarm 1: Ringing
0x17E2	0x0E02      	MOVLW       2
0x17E4	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x17E6	0x0E01      	MOVLW       1
0x17E8	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x17EA	0xF1BBC07E  	MOVFF       _ringAlarmText, FARG_Lcd_Out_text
0x17EE	0xF1BCC07F  	MOVFF       _ringAlarmText+1, FARG_Lcd_Out_text+1
0x17F2	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,787 :: 		loopcount = 0;
0x17F6	0x6BA8      	CLRF        _loopcount, 1
;MyProject.c,789 :: 		while(1)
L_playTone217:
;MyProject.c,795 :: 		if         (loopcount < 5) Lcd_out(2,10, "       ");
0x17F8	0x0E80      	MOVLW       128
0x17FA	0x19A8      	XORWF       _loopcount, 0, 1
0x17FC	0x6E00      	MOVWF       R0 
0x17FE	0x0E80      	MOVLW       128
0x1800	0x0A05      	XORLW       5
0x1802	0x5C00      	SUBWF       R0, 0 
0x1804	0xE20B      	BC          L_playTone219
0x1806	0x0E02      	MOVLW       2
0x1808	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x180A	0x0E0A      	MOVLW       10
0x180C	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x180E	0x0E80      	MOVLW       ?lstr38_MyProject
0x1810	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1812	0x0E00      	MOVLW       hi_addr(?lstr38_MyProject)
0x1814	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1816	0xF002ECC3  	CALL        _Lcd_Out, 0
0x181A	0xD013      	BRA         L_playTone220
L_playTone219:
;MyProject.c,796 :: 		else if    (loopcount <10) Lcd_out(2,10, "RINGING");
0x181C	0x0E80      	MOVLW       128
0x181E	0x19A8      	XORWF       _loopcount, 0, 1
0x1820	0x6E00      	MOVWF       R0 
0x1822	0x0E80      	MOVLW       128
0x1824	0x0A0A      	XORLW       10
0x1826	0x5C00      	SUBWF       R0, 0 
0x1828	0xE20B      	BC          L_playTone221
0x182A	0x0E02      	MOVLW       2
0x182C	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x182E	0x0E0A      	MOVLW       10
0x1830	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1832	0x0E88      	MOVLW       ?lstr39_MyProject
0x1834	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1836	0x0E00      	MOVLW       hi_addr(?lstr39_MyProject)
0x1838	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x183A	0xF002ECC3  	CALL        _Lcd_Out, 0
0x183E	0xD001      	BRA         L_playTone222
L_playTone221:
;MyProject.c,797 :: 		else       loopcount = 0;
0x1840	0x6BA8      	CLRF        _loopcount, 1
L_playTone222:
L_playTone220:
;MyProject.c,799 :: 		if(PORTA.F1 == 0)              //Up/Snooze Pressed
0x1842	0xB280      	BTFSC       PORTA, 1 
0x1844	0xD16E      	BRA         L_playTone223
;MyProject.c,801 :: 		Delay_ms(100);
0x1846	0x0E02      	MOVLW       2
0x1848	0x6E0B      	MOVWF       R11, 0
0x184A	0x0E04      	MOVLW       4
0x184C	0x6E0C      	MOVWF       R12, 0
0x184E	0x0EBA      	MOVLW       186
0x1850	0x6E0D      	MOVWF       R13, 0
L_playTone224:
0x1852	0x2E0D      	DECFSZ      R13, 1, 0
0x1854	0xD7FE      	BRA         L_playTone224
0x1856	0x2E0C      	DECFSZ      R12, 1, 0
0x1858	0xD7FC      	BRA         L_playTone224
0x185A	0x2E0B      	DECFSZ      R11, 1, 0
0x185C	0xD7FA      	BRA         L_playTone224
0x185E	0x0000      	NOP
;MyProject.c,802 :: 		if(PORTA.F1 == 0)
0x1860	0xB280      	BTFSC       PORTA, 1 
0x1862	0xD15F      	BRA         L_playTone225
;MyProject.c,805 :: 		Lcd_out(2,1, "SNOOZING - 00:00");
0x1864	0x0E02      	MOVLW       2
0x1866	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1868	0x0E01      	MOVLW       1
0x186A	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x186C	0x0E97      	MOVLW       ?lstr40_MyProject
0x186E	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1870	0x0E00      	MOVLW       hi_addr(?lstr40_MyProject)
0x1872	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1874	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,806 :: 		snoozeMax = snoozeTimes[goBackAlarm-1]*600;   //Max Snooze count = snooze in seconds * 10
0x1878	0x0443      	DECF        _goBackAlarm, 0 
0x187A	0x6E00      	MOVWF       R0 
0x187C	0x0E00      	MOVLW       0
0x187E	0xBE43      	BTFSC       _goBackAlarm, 7 
0x1880	0x0EFF      	MOVLW       255
0x1882	0x6E01      	MOVWF       R1 
0x1884	0x0E00      	MOVLW       0
0x1886	0x5A01      	SUBWFB      R1, 1 
0x1888	0x0E4D      	MOVLW       _snoozeTimes
0x188A	0x2400      	ADDWF       R0, 0 
0x188C	0x6EE9      	MOVWF       FSR0L 
0x188E	0x0E01      	MOVLW       hi_addr(_snoozeTimes)
0x1890	0x2001      	ADDWFC      R1, 0 
0x1892	0x6EEA      	MOVWF       FSR0H 
0x1894	0xF000CFEE  	MOVFF       POSTINC0, R0
0x1898	0x0E00      	MOVLW       0
0x189A	0xBE00      	BTFSC       R0, 7 
0x189C	0x0EFF      	MOVLW       255
0x189E	0x6E01      	MOVWF       R1 
0x18A0	0x0E58      	MOVLW       88
0x18A2	0x6E04      	MOVWF       R4 
0x18A4	0x0E02      	MOVLW       2
0x18A6	0x6E05      	MOVWF       R5 
0x18A8	0xF001ECBD  	CALL        _Mul_16X16_U, 0
0x18AC	0xF0A8C000  	MOVFF       R0, _snoozeMax
0x18B0	0xF0A9C001  	MOVFF       R1, _snoozeMax+1
;MyProject.c,807 :: 		snoozeCounter = snoozeMax;
0x18B4	0xF0AAC000  	MOVFF       R0, _snoozeCounter
0x18B8	0xF0ABC001  	MOVFF       R1, _snoozeCounter+1
;MyProject.c,808 :: 		while(snoozeCounter >=1)
L_playTone226:
0x18BC	0x0E80      	MOVLW       128
0x18BE	0x0100      	MOVLB       0
0x18C0	0x19AB      	XORWF       _snoozeCounter+1, 0, 1
0x18C2	0x6E00      	MOVWF       R0 
0x18C4	0x0E80      	MOVLW       128
0x18C6	0x5C00      	SUBWF       R0, 0 
0x18C8	0xE102      	BNZ         L__playTone305
0x18CA	0x0E01      	MOVLW       1
0x18CC	0x5DAA      	SUBWF       _snoozeCounter, 0, 1
L__playTone305:
0x18CE	0xA0D8      	BTFSS       STATUS, 0 
0x18D0	0xD116      	BRA         L_playTone227
;MyProject.c,810 :: 		if(!(snoozeCounter%10))                   //Every second
0x18D2	0x0E0A      	MOVLW       10
0x18D4	0x6E04      	MOVWF       R4 
0x18D6	0x0E00      	MOVLW       0
0x18D8	0x6E05      	MOVWF       R5 
0x18DA	0xF000C0AA  	MOVFF       _snoozeCounter, R0
0x18DE	0xF001C0AB  	MOVFF       _snoozeCounter+1, R1
0x18E2	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x18E6	0xF000C008  	MOVFF       R8, R0
0x18EA	0xF001C009  	MOVFF       R9, R1
0x18EE	0x5000      	MOVF        R0, 0 
0x18F0	0x1001      	IORWF       R1, 0 
0x18F2	0xA4D8      	BTFSS       STATUS, 2 
0x18F4	0xD0B8      	BRA         L_playTone228
;MyProject.c,812 :: 		snoozeCounter = snoozeCounter/10;        //Bring the count to second
0x18F6	0x0E0A      	MOVLW       10
0x18F8	0x6E04      	MOVWF       R4 
0x18FA	0x0E00      	MOVLW       0
0x18FC	0x6E05      	MOVWF       R5 
0x18FE	0xF000C0AA  	MOVFF       _snoozeCounter, R0
0x1902	0xF001C0AB  	MOVFF       _snoozeCounter+1, R1
0x1906	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x190A	0xF0AAC000  	MOVFF       R0, _snoozeCounter
0x190E	0xF0ABC001  	MOVFF       R1, _snoozeCounter+1
;MyProject.c,814 :: 		snoozeTime[0] = BCD2UpperCh(Binary2BCD(snoozeCounter/60));
0x1912	0xF1ADC095  	MOVFF       _snoozeTime, FLOC__playTone
0x1916	0xF1AEC096  	MOVFF       _snoozeTime+1, FLOC__playTone+1
0x191A	0x0E3C      	MOVLW       60
0x191C	0x6E04      	MOVWF       R4 
0x191E	0x0E00      	MOVLW       0
0x1920	0x6E05      	MOVWF       R5 
0x1922	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x1926	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x192A	0xF1BAC001  	MOVFF       R1, FARG_Binary2BCD_a+1
0x192E	0xF002EC6D  	CALL        _Binary2BCD, 0
0x1932	0xF1BEC000  	MOVFF       R0, FARG_BCD2UpperCh_bcd
0x1936	0xF001ECA9  	CALL        _BCD2UpperCh, 0
0x193A	0xFFE1C1AD  	MOVFF       FLOC__playTone, FSR1L
0x193E	0xFFE2C1AE  	MOVFF       FLOC__playTone+1, FSR1H
0x1942	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,815 :: 		snoozeTime[1] = BCD2LowerCh(Binary2BCD(snoozeCounter/60));
0x1946	0x0E01      	MOVLW       1
0x1948	0x0100      	MOVLB       0
0x194A	0x2595      	ADDWF       _snoozeTime, 0, 1
0x194C	0x0101      	MOVLB       1
0x194E	0x6FAD      	MOVWF       FLOC__playTone, 1
0x1950	0x0E00      	MOVLW       0
0x1952	0x0100      	MOVLB       0
0x1954	0x2196      	ADDWFC      _snoozeTime+1, 0, 1
0x1956	0x0101      	MOVLB       1
0x1958	0x6FAE      	MOVWF       FLOC__playTone+1, 1
0x195A	0x0E3C      	MOVLW       60
0x195C	0x6E04      	MOVWF       R4 
0x195E	0x0E00      	MOVLW       0
0x1960	0x6E05      	MOVWF       R5 
0x1962	0xF000C0AA  	MOVFF       _snoozeCounter, R0
0x1966	0xF001C0AB  	MOVFF       _snoozeCounter+1, R1
0x196A	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x196E	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x1972	0xF1BAC001  	MOVFF       R1, FARG_Binary2BCD_a+1
0x1976	0xF002EC6D  	CALL        _Binary2BCD, 0
0x197A	0xF1BEC000  	MOVFF       R0, FARG_BCD2LowerCh_bcd
0x197E	0xF001ECB6  	CALL        _BCD2LowerCh, 0
0x1982	0xFFE1C1AD  	MOVFF       FLOC__playTone, FSR1L
0x1986	0xFFE2C1AE  	MOVFF       FLOC__playTone+1, FSR1H
0x198A	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,816 :: 		Lcd_out(2,12, snoozeTime);               //Show Minutes left
0x198E	0x0E02      	MOVLW       2
0x1990	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1992	0x0E0C      	MOVLW       12
0x1994	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1996	0xF1BBC095  	MOVFF       _snoozeTime, FARG_Lcd_Out_text
0x199A	0xF1BCC096  	MOVFF       _snoozeTime+1, FARG_Lcd_Out_text+1
0x199E	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,818 :: 		snoozeTime[0] = BCD2UpperCh(Binary2BCD(snoozeCounter%60));
0x19A2	0xF1ADC095  	MOVFF       _snoozeTime, FLOC__playTone
0x19A6	0xF1AEC096  	MOVFF       _snoozeTime+1, FLOC__playTone+1
0x19AA	0x0E3C      	MOVLW       60
0x19AC	0x6E04      	MOVWF       R4 
0x19AE	0x0E00      	MOVLW       0
0x19B0	0x6E05      	MOVWF       R5 
0x19B2	0xF000C0AA  	MOVFF       _snoozeCounter, R0
0x19B6	0xF001C0AB  	MOVFF       _snoozeCounter+1, R1
0x19BA	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x19BE	0xF000C008  	MOVFF       R8, R0
0x19C2	0xF001C009  	MOVFF       R9, R1
0x19C6	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x19CA	0xF1BAC001  	MOVFF       R1, FARG_Binary2BCD_a+1
0x19CE	0xF002EC6D  	CALL        _Binary2BCD, 0
0x19D2	0xF1BEC000  	MOVFF       R0, FARG_BCD2UpperCh_bcd
0x19D6	0xF001ECA9  	CALL        _BCD2UpperCh, 0
0x19DA	0xFFE1C1AD  	MOVFF       FLOC__playTone, FSR1L
0x19DE	0xFFE2C1AE  	MOVFF       FLOC__playTone+1, FSR1H
0x19E2	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,819 :: 		snoozeTime[1] = BCD2LowerCh(Binary2BCD(snoozeCounter%60));
0x19E6	0x0E01      	MOVLW       1
0x19E8	0x0100      	MOVLB       0
0x19EA	0x2595      	ADDWF       _snoozeTime, 0, 1
0x19EC	0x0101      	MOVLB       1
0x19EE	0x6FAD      	MOVWF       FLOC__playTone, 1
0x19F0	0x0E00      	MOVLW       0
0x19F2	0x0100      	MOVLB       0
0x19F4	0x2196      	ADDWFC      _snoozeTime+1, 0, 1
0x19F6	0x0101      	MOVLB       1
0x19F8	0x6FAE      	MOVWF       FLOC__playTone+1, 1
0x19FA	0x0E3C      	MOVLW       60
0x19FC	0x6E04      	MOVWF       R4 
0x19FE	0x0E00      	MOVLW       0
0x1A00	0x6E05      	MOVWF       R5 
0x1A02	0xF000C0AA  	MOVFF       _snoozeCounter, R0
0x1A06	0xF001C0AB  	MOVFF       _snoozeCounter+1, R1
0x1A0A	0xF001EC3F  	CALL        _Div_16x16_S, 0
0x1A0E	0xF000C008  	MOVFF       R8, R0
0x1A12	0xF001C009  	MOVFF       R9, R1
0x1A16	0xF1B9C000  	MOVFF       R0, FARG_Binary2BCD_a
0x1A1A	0xF1BAC001  	MOVFF       R1, FARG_Binary2BCD_a+1
0x1A1E	0xF002EC6D  	CALL        _Binary2BCD, 0
0x1A22	0xF1BEC000  	MOVFF       R0, FARG_BCD2LowerCh_bcd
0x1A26	0xF001ECB6  	CALL        _BCD2LowerCh, 0
0x1A2A	0xFFE1C1AD  	MOVFF       FLOC__playTone, FSR1L
0x1A2E	0xFFE2C1AE  	MOVFF       FLOC__playTone+1, FSR1H
0x1A32	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,821 :: 		Lcd_out(2,15, snoozeTime);               //Show Seconds left
0x1A36	0x0E02      	MOVLW       2
0x1A38	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1A3A	0x0E0F      	MOVLW       15
0x1A3C	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1A3E	0xF1BBC095  	MOVFF       _snoozeTime, FARG_Lcd_Out_text
0x1A42	0xF1BCC096  	MOVFF       _snoozeTime+1, FARG_Lcd_Out_text+1
0x1A46	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,823 :: 		snoozeCounter = snoozeCounter*10;         //Take it back to count
0x1A4A	0xF000C0AA  	MOVFF       _snoozeCounter, R0
0x1A4E	0xF001C0AB  	MOVFF       _snoozeCounter+1, R1
0x1A52	0x0E0A      	MOVLW       10
0x1A54	0x6E04      	MOVWF       R4 
0x1A56	0x0E00      	MOVLW       0
0x1A58	0x6E05      	MOVWF       R5 
0x1A5A	0xF001ECBD  	CALL        _Mul_16X16_U, 0
0x1A5E	0xF0AAC000  	MOVFF       R0, _snoozeCounter
0x1A62	0xF0ABC001  	MOVFF       R1, _snoozeCounter+1
;MyProject.c,824 :: 		}
L_playTone228:
;MyProject.c,826 :: 		if(PORTA.F1 == 0)                           //If Snooze Pressed inside snooze, reset snooze count
0x1A66	0xB280      	BTFSC       PORTA, 1 
0x1A68	0xD016      	BRA         L_playTone229
;MyProject.c,828 :: 		Delay_ms(100);
0x1A6A	0x0E02      	MOVLW       2
0x1A6C	0x6E0B      	MOVWF       R11, 0
0x1A6E	0x0E04      	MOVLW       4
0x1A70	0x6E0C      	MOVWF       R12, 0
0x1A72	0x0EBA      	MOVLW       186
0x1A74	0x6E0D      	MOVWF       R13, 0
L_playTone230:
0x1A76	0x2E0D      	DECFSZ      R13, 1, 0
0x1A78	0xD7FE      	BRA         L_playTone230
0x1A7A	0x2E0C      	DECFSZ      R12, 1, 0
0x1A7C	0xD7FC      	BRA         L_playTone230
0x1A7E	0x2E0B      	DECFSZ      R11, 1, 0
0x1A80	0xD7FA      	BRA         L_playTone230
0x1A82	0x0000      	NOP
;MyProject.c,829 :: 		if(PORTA.F1 == 0) snoozeCounter = snoozeMax+1;
0x1A84	0xB280      	BTFSC       PORTA, 1 
0x1A86	0xD007      	BRA         L_playTone231
0x1A88	0x0E01      	MOVLW       1
0x1A8A	0x0100      	MOVLB       0
0x1A8C	0x25A8      	ADDWF       _snoozeMax, 0, 1
0x1A8E	0x6FAA      	MOVWF       _snoozeCounter, 1
0x1A90	0x0E00      	MOVLW       0
0x1A92	0x21A9      	ADDWFC      _snoozeMax+1, 0, 1
0x1A94	0x6FAB      	MOVWF       _snoozeCounter+1, 1
L_playTone231:
;MyProject.c,830 :: 		}
L_playTone229:
;MyProject.c,832 :: 		if(PORTA.F2 == 0)              //If Stop Pressed, start the stop counter and stop the tune.
0x1A96	0xB480      	BTFSC       PORTA, 2 
0x1A98	0xD01F      	BRA         L_playTone232
;MyProject.c,834 :: 		Delay_ms(100);
0x1A9A	0x0E02      	MOVLW       2
0x1A9C	0x6E0B      	MOVWF       R11, 0
0x1A9E	0x0E04      	MOVLW       4
0x1AA0	0x6E0C      	MOVWF       R12, 0
0x1AA2	0x0EBA      	MOVLW       186
0x1AA4	0x6E0D      	MOVWF       R13, 0
L_playTone233:
0x1AA6	0x2E0D      	DECFSZ      R13, 1, 0
0x1AA8	0xD7FE      	BRA         L_playTone233
0x1AAA	0x2E0C      	DECFSZ      R12, 1, 0
0x1AAC	0xD7FC      	BRA         L_playTone233
0x1AAE	0x2E0B      	DECFSZ      R11, 1, 0
0x1AB0	0xD7FA      	BRA         L_playTone233
0x1AB2	0x0000      	NOP
;MyProject.c,835 :: 		if(PORTA.F2 == 0)
0x1AB4	0xB480      	BTFSC       PORTA, 2 
0x1AB6	0xD010      	BRA         L_playTone234
;MyProject.c,837 :: 		stopCounter = 1;
0x1AB8	0x0100      	MOVLB       0
0x1ABA	0x0E01      	MOVLW       1
0x1ABC	0x6F90      	MOVWF       _stopCounter, 1
0x1ABE	0x0E00      	MOVLW       0
0x1AC0	0x6F91      	MOVWF       _stopCounter+1, 1
;MyProject.c,838 :: 		goBackAlarm = 0;
0x1AC2	0x6A43      	CLRF        _goBackAlarm 
;MyProject.c,839 :: 		snoozeCounter = 0;
0x1AC4	0x6BAA      	CLRF        _snoozeCounter, 1
0x1AC6	0x6BAB      	CLRF        _snoozeCounter+1, 1
;MyProject.c,840 :: 		snoozeMax = 0;
0x1AC8	0x6BA8      	CLRF        _snoozeMax, 1
0x1ACA	0x6BA9      	CLRF        _snoozeMax+1, 1
;MyProject.c,841 :: 		Lcd_Cmd(_LCD_CLEAR);
0x1ACC	0x0E01      	MOVLW       1
0x1ACE	0x0101      	MOVLB       1
0x1AD0	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1AD2	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,842 :: 		return;
0x1AD6	0xD056      	BRA         L_end_playTone
;MyProject.c,843 :: 		}
L_playTone234:
;MyProject.c,844 :: 		}
L_playTone232:
;MyProject.c,845 :: 		snoozeCounter--;
0x1AD8	0x0E01      	MOVLW       1
0x1ADA	0x0100      	MOVLB       0
0x1ADC	0x5FAA      	SUBWF       _snoozeCounter, 1, 1
0x1ADE	0x0E00      	MOVLW       0
0x1AE0	0x5BAB      	SUBWFB      _snoozeCounter+1, 1, 1
;MyProject.c,846 :: 		Delay_ms(100);
0x1AE2	0x0E02      	MOVLW       2
0x1AE4	0x6E0B      	MOVWF       R11, 0
0x1AE6	0x0E04      	MOVLW       4
0x1AE8	0x6E0C      	MOVWF       R12, 0
0x1AEA	0x0EBA      	MOVLW       186
0x1AEC	0x6E0D      	MOVWF       R13, 0
L_playTone235:
0x1AEE	0x2E0D      	DECFSZ      R13, 1, 0
0x1AF0	0xD7FE      	BRA         L_playTone235
0x1AF2	0x2E0C      	DECFSZ      R12, 1, 0
0x1AF4	0xD7FC      	BRA         L_playTone235
0x1AF6	0x2E0B      	DECFSZ      R11, 1, 0
0x1AF8	0xD7FA      	BRA         L_playTone235
0x1AFA	0x0000      	NOP
;MyProject.c,847 :: 		}
0x1AFC	0xD6DF      	BRA         L_playTone226
L_playTone227:
;MyProject.c,848 :: 		snoozeTime = "00";
0x1AFE	0x0E92      	MOVLW       ?lstr41_MyProject
0x1B00	0x6F95      	MOVWF       _snoozeTime, 1
0x1B02	0x0E00      	MOVLW       hi_addr(?lstr41_MyProject)
0x1B04	0x6F96      	MOVWF       _snoozeTime+1, 1
;MyProject.c,849 :: 		Lcd_out(2,1, ringAlarmText);               //Show Alarm 1: Ringing
0x1B06	0x0E02      	MOVLW       2
0x1B08	0x0101      	MOVLB       1
0x1B0A	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1B0C	0x0E01      	MOVLW       1
0x1B0E	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1B10	0xF1BBC07E  	MOVFF       _ringAlarmText, FARG_Lcd_Out_text
0x1B14	0xF1BCC07F  	MOVFF       _ringAlarmText+1, FARG_Lcd_Out_text+1
0x1B18	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,850 :: 		snoozeCounter = 0;
0x1B1C	0x0100      	MOVLB       0
0x1B1E	0x6BAA      	CLRF        _snoozeCounter, 1
0x1B20	0x6BAB      	CLRF        _snoozeCounter+1, 1
;MyProject.c,851 :: 		}
L_playTone225:
;MyProject.c,853 :: 		}
L_playTone223:
;MyProject.c,855 :: 		if(PORTA.F2 == 0)              //If Stop Pressed, start the stop counter and stop the tune.
0x1B22	0xB480      	BTFSC       PORTA, 2 
0x1B24	0xD01F      	BRA         L_playTone236
;MyProject.c,857 :: 		Delay_ms(100);
0x1B26	0x0E02      	MOVLW       2
0x1B28	0x6E0B      	MOVWF       R11, 0
0x1B2A	0x0E04      	MOVLW       4
0x1B2C	0x6E0C      	MOVWF       R12, 0
0x1B2E	0x0EBA      	MOVLW       186
0x1B30	0x6E0D      	MOVWF       R13, 0
L_playTone237:
0x1B32	0x2E0D      	DECFSZ      R13, 1, 0
0x1B34	0xD7FE      	BRA         L_playTone237
0x1B36	0x2E0C      	DECFSZ      R12, 1, 0
0x1B38	0xD7FC      	BRA         L_playTone237
0x1B3A	0x2E0B      	DECFSZ      R11, 1, 0
0x1B3C	0xD7FA      	BRA         L_playTone237
0x1B3E	0x0000      	NOP
;MyProject.c,858 :: 		if(PORTA.F2 == 0)
0x1B40	0xB480      	BTFSC       PORTA, 2 
0x1B42	0xD010      	BRA         L_playTone238
;MyProject.c,860 :: 		stopCounter = 1;
0x1B44	0x0100      	MOVLB       0
0x1B46	0x0E01      	MOVLW       1
0x1B48	0x6F90      	MOVWF       _stopCounter, 1
0x1B4A	0x0E00      	MOVLW       0
0x1B4C	0x6F91      	MOVWF       _stopCounter+1, 1
;MyProject.c,861 :: 		goBackAlarm = 0;
0x1B4E	0x6A43      	CLRF        _goBackAlarm 
;MyProject.c,862 :: 		snoozeCounter = 0;
0x1B50	0x6BAA      	CLRF        _snoozeCounter, 1
0x1B52	0x6BAB      	CLRF        _snoozeCounter+1, 1
;MyProject.c,863 :: 		snoozeMax = 0;
0x1B54	0x6BA8      	CLRF        _snoozeMax, 1
0x1B56	0x6BA9      	CLRF        _snoozeMax+1, 1
;MyProject.c,864 :: 		Lcd_Cmd(_LCD_CLEAR);
0x1B58	0x0E01      	MOVLW       1
0x1B5A	0x0101      	MOVLB       1
0x1B5C	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1B5E	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,865 :: 		return;
0x1B62	0xD010      	BRA         L_end_playTone
;MyProject.c,866 :: 		}
L_playTone238:
;MyProject.c,867 :: 		}
L_playTone236:
0x1B64	0x0101      	MOVLB       1
;MyProject.c,868 :: 		loopcount++;
0x1B66	0x2BA8      	INCF        _loopcount, 1, 1
;MyProject.c,869 :: 		Delay_ms(100);
0x1B68	0x0E02      	MOVLW       2
0x1B6A	0x6E0B      	MOVWF       R11, 0
0x1B6C	0x0E04      	MOVLW       4
0x1B6E	0x6E0C      	MOVWF       R12, 0
0x1B70	0x0EBA      	MOVLW       186
0x1B72	0x6E0D      	MOVWF       R13, 0
L_playTone239:
0x1B74	0x2E0D      	DECFSZ      R13, 1, 0
0x1B76	0xD7FE      	BRA         L_playTone239
0x1B78	0x2E0C      	DECFSZ      R12, 1, 0
0x1B7A	0xD7FC      	BRA         L_playTone239
0x1B7C	0x2E0B      	DECFSZ      R11, 1, 0
0x1B7E	0xD7FA      	BRA         L_playTone239
0x1B80	0x0000      	NOP
;MyProject.c,870 :: 		}
0x1B82	0xD63A      	BRA         L_playTone217
;MyProject.c,875 :: 		}
L_end_playTone:
0x1B84	0x0012      	RETURN      0
; end of _playTone
_menuMain2:
;MyProject.c,686 :: 		void menuMain2() //***************************************** MAIN MENU
;MyProject.c,691 :: 		Lcd_Init();                        // Initialize LCD
0x1B86	0xDD61      	RCALL       _Lcd_Init
;MyProject.c,692 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x1B88	0x0E01      	MOVLW       1
0x1B8A	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1B8C	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,693 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x1B90	0x0E0C      	MOVLW       12
0x1B92	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1B94	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,694 :: 		Lcd_out(1,1, "Edit Alarm:1|2|3"); Lcd_out(2,1, "Set: Time | Date");
0x1B98	0x0E01      	MOVLW       1
0x1B9A	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1B9C	0x0E01      	MOVLW       1
0x1B9E	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1BA0	0x0EF7      	MOVLW       ?lstr28_MyProject
0x1BA2	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1BA4	0x0E00      	MOVLW       hi_addr(?lstr28_MyProject)
0x1BA6	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1BA8	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1BAC	0x0E02      	MOVLW       2
0x1BAE	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1BB0	0x0E01      	MOVLW       1
0x1BB2	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1BB4	0x0EDA      	MOVLW       ?lstr29_MyProject
0x1BB6	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1BB8	0x0E00      	MOVLW       hi_addr(?lstr29_MyProject)
0x1BBA	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1BBC	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,696 :: 		loopcount = 0;
0x1BC0	0x6BA8      	CLRF        _loopcount, 1
;MyProject.c,697 :: 		set_count = 0;
0x1BC2	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,698 :: 		while(1)
L_menuMain2177:
;MyProject.c,700 :: 		set = 0;
0x1BC4	0x6B3B      	CLRF        _set, 1
;MyProject.c,701 :: 		if(PORTA.F0 == 0)              //Mode Pressed
0x1BC6	0xB080      	BTFSC       PORTA, 0 
0x1BC8	0xD015      	BRA         L_menuMain2179
;MyProject.c,703 :: 		Delay_ms(100);
0x1BCA	0x0E02      	MOVLW       2
0x1BCC	0x6E0B      	MOVWF       R11, 0
0x1BCE	0x0E04      	MOVLW       4
0x1BD0	0x6E0C      	MOVWF       R12, 0
0x1BD2	0x0EBA      	MOVLW       186
0x1BD4	0x6E0D      	MOVWF       R13, 0
L_menuMain2180:
0x1BD6	0x2E0D      	DECFSZ      R13, 1, 0
0x1BD8	0xD7FE      	BRA         L_menuMain2180
0x1BDA	0x2E0C      	DECFSZ      R12, 1, 0
0x1BDC	0xD7FC      	BRA         L_menuMain2180
0x1BDE	0x2E0B      	DECFSZ      R11, 1, 0
0x1BE0	0xD7FA      	BRA         L_menuMain2180
0x1BE2	0x0000      	NOP
;MyProject.c,704 :: 		if(PORTA.F0 == 0)
0x1BE4	0xB080      	BTFSC       PORTA, 0 
0x1BE6	0xD006      	BRA         L_menuMain2181
;MyProject.c,706 :: 		set_count++;
0x1BE8	0x2B3C      	INCF        _set_count, 1, 1
;MyProject.c,707 :: 		if(set_count > 5)  set_count = 1;
0x1BEA	0x513C      	MOVF        _set_count, 0, 1
0x1BEC	0x0805      	SUBLW       5
0x1BEE	0xE202      	BC          L_menuMain2182
0x1BF0	0x0E01      	MOVLW       1
0x1BF2	0x6F3C      	MOVWF       _set_count, 1
L_menuMain2182:
;MyProject.c,708 :: 		}
L_menuMain2181:
;MyProject.c,709 :: 		}
L_menuMain2179:
;MyProject.c,711 :: 		if(set_count)
0x1BF4	0x533C      	MOVF        _set_count, 1, 1
0x1BF6	0xB4D8      	BTFSC       STATUS, 2 
0x1BF8	0xD0C5      	BRA         L_menuMain2183
;MyProject.c,713 :: 		if(PORTA.F1 == 0)
0x1BFA	0xB280      	BTFSC       PORTA, 1 
0x1BFC	0xD011      	BRA         L_menuMain2184
;MyProject.c,715 :: 		Delay_ms(100);
0x1BFE	0x0E02      	MOVLW       2
0x1C00	0x6E0B      	MOVWF       R11, 0
0x1C02	0x0E04      	MOVLW       4
0x1C04	0x6E0C      	MOVWF       R12, 0
0x1C06	0x0EBA      	MOVLW       186
0x1C08	0x6E0D      	MOVWF       R13, 0
L_menuMain2185:
0x1C0A	0x2E0D      	DECFSZ      R13, 1, 0
0x1C0C	0xD7FE      	BRA         L_menuMain2185
0x1C0E	0x2E0C      	DECFSZ      R12, 1, 0
0x1C10	0xD7FC      	BRA         L_menuMain2185
0x1C12	0x2E0B      	DECFSZ      R11, 1, 0
0x1C14	0xD7FA      	BRA         L_menuMain2185
0x1C16	0x0000      	NOP
;MyProject.c,716 :: 		if(PORTA.F1 == 0)
0x1C18	0xB280      	BTFSC       PORTA, 1 
0x1C1A	0xD002      	BRA         L_menuMain2186
;MyProject.c,717 :: 		set = 1;
0x1C1C	0x0E01      	MOVLW       1
0x1C1E	0x6F3B      	MOVWF       _set, 1
L_menuMain2186:
;MyProject.c,718 :: 		}
L_menuMain2184:
;MyProject.c,720 :: 		if(PORTA.F2 == 0)
0x1C20	0xB480      	BTFSC       PORTA, 2 
0x1C22	0xD011      	BRA         L_menuMain2187
;MyProject.c,722 :: 		Delay_ms(100);
0x1C24	0x0E02      	MOVLW       2
0x1C26	0x6E0B      	MOVWF       R11, 0
0x1C28	0x0E04      	MOVLW       4
0x1C2A	0x6E0C      	MOVWF       R12, 0
0x1C2C	0x0EBA      	MOVLW       186
0x1C2E	0x6E0D      	MOVWF       R13, 0
L_menuMain2188:
0x1C30	0x2E0D      	DECFSZ      R13, 1, 0
0x1C32	0xD7FE      	BRA         L_menuMain2188
0x1C34	0x2E0C      	DECFSZ      R12, 1, 0
0x1C36	0xD7FC      	BRA         L_menuMain2188
0x1C38	0x2E0B      	DECFSZ      R11, 1, 0
0x1C3A	0xD7FA      	BRA         L_menuMain2188
0x1C3C	0x0000      	NOP
;MyProject.c,723 :: 		if(PORTA.F2 == 0)
0x1C3E	0xB480      	BTFSC       PORTA, 2 
0x1C40	0xD002      	BRA         L_menuMain2189
;MyProject.c,724 :: 		set = -1;
0x1C42	0x0EFF      	MOVLW       255
0x1C44	0x6F3B      	MOVWF       _set, 1
L_menuMain2189:
;MyProject.c,725 :: 		}
L_menuMain2187:
;MyProject.c,726 :: 		if(set_count && set)
0x1C46	0x533C      	MOVF        _set_count, 1, 1
0x1C48	0xE033      	BZ          L_menuMain2192
0x1C4A	0x533B      	MOVF        _set, 1, 1
0x1C4C	0xE031      	BZ          L_menuMain2192
L__menuMain2273:
;MyProject.c,728 :: 		switch(set_count)
0x1C4E	0xD021      	BRA         L_menuMain2193
;MyProject.c,730 :: 		case 1: // Alarm1
L_menuMain2195:
;MyProject.c,731 :: 		menuAlarm2(1);
0x1C50	0x0E01      	MOVLW       1
0x1C52	0x6FB1      	MOVWF       FARG_menuAlarm2_alarmNo, 1
0x1C54	0x0E00      	MOVLW       0
0x1C56	0x6FB2      	MOVWF       FARG_menuAlarm2_alarmNo+1, 1
0x1C58	0xF009EC45  	CALL        _menuAlarm2, 0
;MyProject.c,732 :: 		break;
0x1C5C	0xD029      	BRA         L_menuMain2194
;MyProject.c,733 :: 		case 2: //Alarm2
L_menuMain2196:
;MyProject.c,734 :: 		menuAlarm2(2);
0x1C5E	0x0E02      	MOVLW       2
0x1C60	0x6FB1      	MOVWF       FARG_menuAlarm2_alarmNo, 1
0x1C62	0x0E00      	MOVLW       0
0x1C64	0x6FB2      	MOVWF       FARG_menuAlarm2_alarmNo+1, 1
0x1C66	0xF009EC45  	CALL        _menuAlarm2, 0
;MyProject.c,735 :: 		break;
0x1C6A	0xD022      	BRA         L_menuMain2194
;MyProject.c,736 :: 		case 3: //Alarm3
L_menuMain2197:
;MyProject.c,737 :: 		menuAlarm2(3);
0x1C6C	0x0E03      	MOVLW       3
0x1C6E	0x6FB1      	MOVWF       FARG_menuAlarm2_alarmNo, 1
0x1C70	0x0E00      	MOVLW       0
0x1C72	0x6FB2      	MOVWF       FARG_menuAlarm2_alarmNo+1, 1
0x1C74	0xF009EC45  	CALL        _menuAlarm2, 0
;MyProject.c,738 :: 		break;
0x1C78	0xD01B      	BRA         L_menuMain2194
;MyProject.c,739 :: 		case 4: //Time
L_menuMain2198:
;MyProject.c,740 :: 		inputTime(0, "Time:");
0x1C7A	0x6BB3      	CLRF        FARG_inputTime_mode, 1
0x1C7C	0x6BB4      	CLRF        FARG_inputTime_mode+1, 1
0x1C7E	0x0EB2      	MOVLW       ?lstr30_MyProject
0x1C80	0x6FB5      	MOVWF       FARG_inputTime_setStr, 1
0x1C82	0x0E00      	MOVLW       hi_addr(?lstr30_MyProject)
0x1C84	0x6FB6      	MOVWF       FARG_inputTime_setStr+1, 1
0x1C86	0xF004EC1A  	CALL        _inputTime, 0
;MyProject.c,741 :: 		break;
0x1C8A	0xD012      	BRA         L_menuMain2194
;MyProject.c,742 :: 		case 5: //Date
L_menuMain2199:
;MyProject.c,743 :: 		inputDate();
0x1C8C	0xF006ECBA  	CALL        _inputDate, 0
;MyProject.c,744 :: 		break;
0x1C90	0xD00F      	BRA         L_menuMain2194
;MyProject.c,745 :: 		}
L_menuMain2193:
0x1C92	0x513C      	MOVF        _set_count, 0, 1
0x1C94	0x0A01      	XORLW       1
0x1C96	0xE0DC      	BZ          L_menuMain2195
0x1C98	0x513C      	MOVF        _set_count, 0, 1
0x1C9A	0x0A02      	XORLW       2
0x1C9C	0xE0E0      	BZ          L_menuMain2196
0x1C9E	0x513C      	MOVF        _set_count, 0, 1
0x1CA0	0x0A03      	XORLW       3
0x1CA2	0xE0E4      	BZ          L_menuMain2197
0x1CA4	0x513C      	MOVF        _set_count, 0, 1
0x1CA6	0x0A04      	XORLW       4
0x1CA8	0xE0E8      	BZ          L_menuMain2198
0x1CAA	0x513C      	MOVF        _set_count, 0, 1
0x1CAC	0x0A05      	XORLW       5
0x1CAE	0xE0EE      	BZ          L_menuMain2199
L_menuMain2194:
;MyProject.c,746 :: 		}
L_menuMain2192:
;MyProject.c,749 :: 		loopcount++;
0x1CB0	0x2BA8      	INCF        _loopcount, 1, 1
;MyProject.c,750 :: 		if(loopcount > 10) loopcount = 0; // For blinking
0x1CB2	0x0E80      	MOVLW       128
0x1CB4	0x0A0A      	XORLW       10
0x1CB6	0x6E00      	MOVWF       R0 
0x1CB8	0x0E80      	MOVLW       128
0x1CBA	0x19A8      	XORWF       _loopcount, 0, 1
0x1CBC	0x5C00      	SUBWF       R0, 0 
0x1CBE	0xA0D8      	BTFSS       STATUS, 0 
0x1CC0	0x6BA8      	CLRF        _loopcount, 1
L_menuMain2200:
;MyProject.c,751 :: 		if(loopcount < 5)
0x1CC2	0x0E80      	MOVLW       128
0x1CC4	0x19A8      	XORWF       _loopcount, 0, 1
0x1CC6	0x6E00      	MOVWF       R0 
0x1CC8	0x0E80      	MOVLW       128
0x1CCA	0x0A05      	XORLW       5
0x1CCC	0x5C00      	SUBWF       R0, 0 
0x1CCE	0xE215      	BC          L_menuMain2201
;MyProject.c,753 :: 		Lcd_out(1,1, "Edit Alarm:1|2|3"); Lcd_out(2,1, "Set: Time | Date");
0x1CD0	0x0E01      	MOVLW       1
0x1CD2	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1CD4	0x0E01      	MOVLW       1
0x1CD6	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1CD8	0x0EB8      	MOVLW       ?lstr31_MyProject
0x1CDA	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1CDC	0x0E00      	MOVLW       hi_addr(?lstr31_MyProject)
0x1CDE	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1CE0	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1CE4	0x0E02      	MOVLW       2
0x1CE6	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1CE8	0x0E01      	MOVLW       1
0x1CEA	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1CEC	0x0EC9      	MOVLW       ?lstr32_MyProject
0x1CEE	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1CF0	0x0E00      	MOVLW       hi_addr(?lstr32_MyProject)
0x1CF2	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1CF4	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,754 :: 		}
0x1CF8	0xD045      	BRA         L_menuMain2202
L_menuMain2201:
;MyProject.c,757 :: 		if      (set_count  ==1) Lcd_out(1,12, "_");
0x1CFA	0x513C      	MOVF        _set_count, 0, 1
0x1CFC	0x0A01      	XORLW       1
0x1CFE	0xE10B      	BNZ         L_menuMain2203
0x1D00	0x0E01      	MOVLW       1
0x1D02	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1D04	0x0E0C      	MOVLW       12
0x1D06	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1D08	0x0E18      	MOVLW       ?lstr33_MyProject
0x1D0A	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1D0C	0x0E01      	MOVLW       hi_addr(?lstr33_MyProject)
0x1D0E	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1D10	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1D14	0xD037      	BRA         L_menuMain2204
L_menuMain2203:
;MyProject.c,758 :: 		else if (set_count  ==2) Lcd_out(1,14, "_");
0x1D16	0x513C      	MOVF        _set_count, 0, 1
0x1D18	0x0A02      	XORLW       2
0x1D1A	0xE10B      	BNZ         L_menuMain2205
0x1D1C	0x0E01      	MOVLW       1
0x1D1E	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1D20	0x0E0E      	MOVLW       14
0x1D22	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1D24	0x0E1A      	MOVLW       ?lstr34_MyProject
0x1D26	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1D28	0x0E01      	MOVLW       hi_addr(?lstr34_MyProject)
0x1D2A	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1D2C	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1D30	0xD029      	BRA         L_menuMain2206
L_menuMain2205:
;MyProject.c,759 :: 		else if (set_count  ==3) Lcd_out(1,16, "_");
0x1D32	0x513C      	MOVF        _set_count, 0, 1
0x1D34	0x0A03      	XORLW       3
0x1D36	0xE10B      	BNZ         L_menuMain2207
0x1D38	0x0E01      	MOVLW       1
0x1D3A	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1D3C	0x0E10      	MOVLW       16
0x1D3E	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1D40	0x0E1C      	MOVLW       ?lstr35_MyProject
0x1D42	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1D44	0x0E01      	MOVLW       hi_addr(?lstr35_MyProject)
0x1D46	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1D48	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1D4C	0xD01B      	BRA         L_menuMain2208
L_menuMain2207:
;MyProject.c,760 :: 		else if (set_count  ==4) Lcd_out(2,6, "____");
0x1D4E	0x513C      	MOVF        _set_count, 0, 1
0x1D50	0x0A04      	XORLW       4
0x1D52	0xE10B      	BNZ         L_menuMain2209
0x1D54	0x0E02      	MOVLW       2
0x1D56	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1D58	0x0E06      	MOVLW       6
0x1D5A	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1D5C	0x0E13      	MOVLW       ?lstr36_MyProject
0x1D5E	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1D60	0x0E01      	MOVLW       hi_addr(?lstr36_MyProject)
0x1D62	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1D64	0xF002ECC3  	CALL        _Lcd_Out, 0
0x1D68	0xD00D      	BRA         L_menuMain2210
L_menuMain2209:
;MyProject.c,761 :: 		else if (set_count  ==5) Lcd_out(2,13, "____");
0x1D6A	0x513C      	MOVF        _set_count, 0, 1
0x1D6C	0x0A05      	XORLW       5
0x1D6E	0xE10A      	BNZ         L_menuMain2211
0x1D70	0x0E02      	MOVLW       2
0x1D72	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1D74	0x0E0D      	MOVLW       13
0x1D76	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1D78	0x0E08      	MOVLW       ?lstr37_MyProject
0x1D7A	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1D7C	0x0E01      	MOVLW       hi_addr(?lstr37_MyProject)
0x1D7E	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1D80	0xF002ECC3  	CALL        _Lcd_Out, 0
L_menuMain2211:
L_menuMain2210:
L_menuMain2208:
L_menuMain2206:
L_menuMain2204:
;MyProject.c,762 :: 		}
L_menuMain2202:
;MyProject.c,764 :: 		}
L_menuMain2183:
;MyProject.c,766 :: 		if(PORTA.F3 == 0)  // Break the while loop when menu pressed
0x1D84	0xB680      	BTFSC       PORTA, 3 
0x1D86	0xD010      	BRA         L_menuMain2212
;MyProject.c,768 :: 		Delay_ms(100);
0x1D88	0x0E02      	MOVLW       2
0x1D8A	0x6E0B      	MOVWF       R11, 0
0x1D8C	0x0E04      	MOVLW       4
0x1D8E	0x6E0C      	MOVWF       R12, 0
0x1D90	0x0EBA      	MOVLW       186
0x1D92	0x6E0D      	MOVWF       R13, 0
L_menuMain2213:
0x1D94	0x2E0D      	DECFSZ      R13, 1, 0
0x1D96	0xD7FE      	BRA         L_menuMain2213
0x1D98	0x2E0C      	DECFSZ      R12, 1, 0
0x1D9A	0xD7FC      	BRA         L_menuMain2213
0x1D9C	0x2E0B      	DECFSZ      R11, 1, 0
0x1D9E	0xD7FA      	BRA         L_menuMain2213
0x1DA0	0x0000      	NOP
;MyProject.c,769 :: 		if(PORTA.F3 == 0) break;
0x1DA2	0xB680      	BTFSC       PORTA, 3 
0x1DA4	0xD001      	BRA         L_menuMain2214
0x1DA6	0xD011      	BRA         L_menuMain2178
L_menuMain2214:
;MyProject.c,770 :: 		}
L_menuMain2212:
;MyProject.c,771 :: 		Delay_ms(100);
0x1DA8	0x0E02      	MOVLW       2
0x1DAA	0x6E0B      	MOVWF       R11, 0
0x1DAC	0x0E04      	MOVLW       4
0x1DAE	0x6E0C      	MOVWF       R12, 0
0x1DB0	0x0EBA      	MOVLW       186
0x1DB2	0x6E0D      	MOVWF       R13, 0
L_menuMain2215:
0x1DB4	0x2E0D      	DECFSZ      R13, 1, 0
0x1DB6	0xD7FE      	BRA         L_menuMain2215
0x1DB8	0x2E0C      	DECFSZ      R12, 1, 0
0x1DBA	0xD7FC      	BRA         L_menuMain2215
0x1DBC	0x2E0B      	DECFSZ      R11, 1, 0
0x1DBE	0xD7FA      	BRA         L_menuMain2215
0x1DC0	0x0000      	NOP
;MyProject.c,773 :: 		if(goBackAlarm) break; //Immediately return if Alarm goes off
0x1DC2	0x5243      	MOVF        _goBackAlarm, 1 
0x1DC4	0xE001      	BZ          L_menuMain2216
0x1DC6	0xD001      	BRA         L_menuMain2178
L_menuMain2216:
;MyProject.c,774 :: 		}
0x1DC8	0xD6FD      	BRA         L_menuMain2177
L_menuMain2178:
;MyProject.c,776 :: 		Lcd_Cmd(_LCD_CLEAR);
0x1DCA	0x0E01      	MOVLW       1
0x1DCC	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1DCE	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,777 :: 		set = 0;
0x1DD2	0x6B3B      	CLRF        _set, 1
;MyProject.c,778 :: 		set_count = 0;
0x1DD4	0x6B3C      	CLRF        _set_count, 1
;MyProject.c,779 :: 		loopcount = 0;
0x1DD6	0x6BA8      	CLRF        _loopcount, 1
;MyProject.c,780 :: 		}
L_end_menuMain2:
0x1DD8	0x0012      	RETURN      0
; end of _menuMain2
_main:
0x1DDA	0xF010EC40  	CALL        8320, 0
;MyProject.c,928 :: 		void main()
;MyProject.c,930 :: 		I2C1_Init(100000); //DS1307 I2C is running at 100KHz
0x1DDE	0x0E14      	MOVLW       20
0x1DE0	0x6EC8      	MOVWF       SSPADD 
0x1DE2	0xDC96      	RCALL       _I2C1_Init
;MyProject.c,931 :: 		CMCON = 0x07;   // To turn off comparators
0x1DE4	0x0E07      	MOVLW       7
0x1DE6	0x6EB4      	MOVWF       CMCON 
;MyProject.c,932 :: 		ADCON1 = 0x06;  // To turn off analog to digital converters
0x1DE8	0x0E06      	MOVLW       6
0x1DEA	0x6EC1      	MOVWF       ADCON1 
;MyProject.c,933 :: 		TRISA = 0xFF;   //Port A Set output
0x1DEC	0x0EFF      	MOVLW       255
0x1DEE	0x6E92      	MOVWF       TRISA 
;MyProject.c,934 :: 		PORTA = 0x00;
0x1DF0	0x6A80      	CLRF        PORTA 
;MyProject.c,936 :: 		TRISD = 0x00;
0x1DF2	0x6A95      	CLRF        TRISD 
;MyProject.c,937 :: 		PORTD = 0x00;
0x1DF4	0x6A83      	CLRF        PORTD 
;MyProject.c,940 :: 		Lcd_Init();                        // Initialize LCD
0x1DF6	0xDC29      	RCALL       _Lcd_Init
;MyProject.c,941 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x1DF8	0x0E01      	MOVLW       1
0x1DFA	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1DFC	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,942 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x1E00	0x0E0C      	MOVLW       12
0x1E02	0x6FC0      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1E04	0xF000ECBF  	CALL        _Lcd_Cmd, 0
;MyProject.c,945 :: 		T0CON	 = 0x84;
0x1E08	0x0E84      	MOVLW       132
0x1E0A	0x6ED5      	MOVWF       T0CON 
;MyProject.c,946 :: 		TMR0H	 = 0x0B;
0x1E0C	0x0E0B      	MOVLW       11
0x1E0E	0x6ED7      	MOVWF       TMR0H 
;MyProject.c,947 :: 		TMR0L	 = 0xDC;
0x1E10	0x0EDC      	MOVLW       220
0x1E12	0x6ED6      	MOVWF       TMR0L 
;MyProject.c,948 :: 		GIE_bit	 = 1;
0x1E14	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;MyProject.c,949 :: 		TMR0IE_bit	 = 1;
0x1E16	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;MyProject.c,951 :: 		readTime();
0x1E18	0xDC8E      	RCALL       _readTime
;MyProject.c,954 :: 		while(1)                                   //*********************Main Loop *****************************
L_main259:
;MyProject.c,956 :: 		Lcd_out(1,1,"Time:");
0x1E1A	0x0E01      	MOVLW       1
0x1E1C	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1E1E	0x0E01      	MOVLW       1
0x1E20	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1E22	0x0E0D      	MOVLW       ?lstr42_MyProject
0x1E24	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1E26	0x0E01      	MOVLW       hi_addr(?lstr42_MyProject)
0x1E28	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1E2A	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,957 :: 		Lcd_out(2,1,"Date:");
0x1E2E	0x0E02      	MOVLW       2
0x1E30	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1E32	0x0E01      	MOVLW       1
0x1E34	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1E36	0x0EAC      	MOVLW       ?lstr43_MyProject
0x1E38	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1E3A	0x0E00      	MOVLW       hi_addr(?lstr43_MyProject)
0x1E3C	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1E3E	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,958 :: 		readTime();
0x1E42	0xDC79      	RCALL       _readTime
;MyProject.c,959 :: 		nowHrBin = BCD2Binary(hour); nowMinBin = BCD2Binary(minute); nowSecBin = BCD2Binary(second); nowAP = ap;
0x1E44	0xF1B9C194  	MOVFF       _hour, FARG_BCD2Binary_a
0x1E48	0xF1BAC195  	MOVFF       _hour+1, FARG_BCD2Binary_a+1
0x1E4C	0xF002EC3D  	CALL        _BCD2Binary, 0
0x1E50	0xF1A1C000  	MOVFF       R0, _nowHrBin
0x1E54	0xF1A2C001  	MOVFF       R1, _nowHrBin+1
0x1E58	0xF1B9C1AB  	MOVFF       _minute, FARG_BCD2Binary_a
0x1E5C	0x0E00      	MOVLW       0
0x1E5E	0xBFAB      	BTFSC       _minute, 7, 1
0x1E60	0x0EFF      	MOVLW       255
0x1E62	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x1E64	0xF002EC3D  	CALL        _BCD2Binary, 0
0x1E68	0xF1A3C000  	MOVFF       R0, _nowMinBin
0x1E6C	0xF1B9C19D  	MOVFF       _second, FARG_BCD2Binary_a
0x1E70	0x0E00      	MOVLW       0
0x1E72	0xBF9D      	BTFSC       _second, 7, 1
0x1E74	0x0EFF      	MOVLW       255
0x1E76	0x6FBA      	MOVWF       FARG_BCD2Binary_a+1, 1
0x1E78	0xF002EC3D  	CALL        _BCD2Binary, 0
0x1E7C	0xF1A4C000  	MOVFF       R0, _nowSecBin
0x1E80	0xF1A5C001  	MOVFF       R1, _nowSecBin+1
0x1E84	0xF19FC192  	MOVFF       _ap, _nowAP
0x1E88	0x0E00      	MOVLW       0
0x1E8A	0xBF92      	BTFSC       _ap, 7, 1
0x1E8C	0x0EFF      	MOVLW       255
0x1E8E	0x6FA0      	MOVWF       _nowAP+1, 1
;MyProject.c,961 :: 		Lcd_out(1,6,time);
0x1E90	0x0E01      	MOVLW       1
0x1E92	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1E94	0x0E06      	MOVLW       6
0x1E96	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1E98	0x0E34      	MOVLW       _time
0x1E9A	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1E9C	0x0E00      	MOVLW       hi_addr(_time)
0x1E9E	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1EA0	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,962 :: 		Lcd_out(2,6,date);
0x1EA4	0x0E02      	MOVLW       2
0x1EA6	0x6FB9      	MOVWF       FARG_Lcd_Out_row, 1
0x1EA8	0x0E06      	MOVLW       6
0x1EAA	0x6FBA      	MOVWF       FARG_Lcd_Out_column, 1
0x1EAC	0x0E32      	MOVLW       _date
0x1EAE	0x6FBB      	MOVWF       FARG_Lcd_Out_text, 1
0x1EB0	0x0E01      	MOVLW       hi_addr(_date)
0x1EB2	0x6FBC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1EB4	0xF002ECC3  	CALL        _Lcd_Out, 0
;MyProject.c,963 :: 		set = 0;
0x1EB8	0x6B3B      	CLRF        _set, 1
;MyProject.c,965 :: 		if(gobackAlarm)                          //When the gobackAlarm varibale was set by the Timer Interrupt (Alarm goes off),
0x1EBA	0x5243      	MOVF        _goBackAlarm, 1 
0x1EBC	0xE002      	BZ          L_main261
;MyProject.c,967 :: 		playTone();                           //Here we set the alarm
0x1EBE	0xDC78      	RCALL       _playTone
;MyProject.c,968 :: 		goBackAlarm = 0;
0x1EC0	0x6A43      	CLRF        _goBackAlarm 
;MyProject.c,969 :: 		}
L_main261:
;MyProject.c,973 :: 		if(PORTA.F3 == 0)              //Menu Button Pressed
0x1EC2	0xB680      	BTFSC       PORTA, 3 
0x1EC4	0xD010      	BRA         L_main262
;MyProject.c,975 :: 		Delay_ms(100);
0x1EC6	0x0E02      	MOVLW       2
0x1EC8	0x6E0B      	MOVWF       R11, 0
0x1ECA	0x0E04      	MOVLW       4
0x1ECC	0x6E0C      	MOVWF       R12, 0
0x1ECE	0x0EBA      	MOVLW       186
0x1ED0	0x6E0D      	MOVWF       R13, 0
L_main263:
0x1ED2	0x2E0D      	DECFSZ      R13, 1, 0
0x1ED4	0xD7FE      	BRA         L_main263
0x1ED6	0x2E0C      	DECFSZ      R12, 1, 0
0x1ED8	0xD7FC      	BRA         L_main263
0x1EDA	0x2E0B      	DECFSZ      R11, 1, 0
0x1EDC	0xD7FA      	BRA         L_main263
0x1EDE	0x0000      	NOP
;MyProject.c,976 :: 		if(PORTA.F3 == 0)
0x1EE0	0xB680      	BTFSC       PORTA, 3 
0x1EE2	0xD001      	BRA         L_main264
;MyProject.c,978 :: 		menuMain2();
0x1EE4	0xDE50      	RCALL       _menuMain2
;MyProject.c,979 :: 		}
L_main264:
;MyProject.c,980 :: 		}
L_main262:
;MyProject.c,982 :: 		Delay_ms(100);
0x1EE6	0x0E02      	MOVLW       2
0x1EE8	0x6E0B      	MOVWF       R11, 0
0x1EEA	0x0E04      	MOVLW       4
0x1EEC	0x6E0C      	MOVWF       R12, 0
0x1EEE	0x0EBA      	MOVLW       186
0x1EF0	0x6E0D      	MOVWF       R13, 0
L_main265:
0x1EF2	0x2E0D      	DECFSZ      R13, 1, 0
0x1EF4	0xD7FE      	BRA         L_main265
0x1EF6	0x2E0C      	DECFSZ      R12, 1, 0
0x1EF8	0xD7FC      	BRA         L_main265
0x1EFA	0x2E0B      	DECFSZ      R11, 1, 0
0x1EFC	0xD7FA      	BRA         L_main265
0x1EFE	0x0000      	NOP
;MyProject.c,983 :: 		}
0x1F00	0xD78C      	BRA         L_main259
;MyProject.c,984 :: 		}
L_end_main:
0x1F02	0xD7FF      	BRA         $+0
; end of _main
0x2080	0xF016EE10  	LFSR        1, 22
0x2084	0x0E7C      	MOVLW       124
0x2086	0x6E00      	MOVWF       R0 
0x2088	0x0E02      	MOVLW       2
0x208A	0x6E01      	MOVWF       R1 
0x208C	0x0E04      	MOVLW       4
0x208E	0x6EF6      	MOVWF       4086 
0x2090	0x0E1F      	MOVLW       31
0x2092	0x6EF7      	MOVWF       TBLPTRH 
0x2094	0x0E00      	MOVLW       0
0x2096	0x6EF8      	MOVWF       TBLPTRU 
0x2098	0xF00BEC93  	CALL        5926, 0
0x209C	0x0012      	RETURN      0
;MyProject.c,0 :: ?lstr_27_MyProject
0x0006	0x005F ;?lstr_27_MyProject+0
; end of ?lstr_27_MyProject
;MyProject.c,0 :: ?ICS_alarmMinute
0x1F04	0x0000 ;?ICS_alarmMinute+0
0x1F06	0x00 ;?ICS_alarmMinute+2
; end of ?ICS_alarmMinute
;MyProject.c,0 :: ?ICS_alarmHr
0x1F07	0x0000 ;?ICS_alarmHr+0
0x1F09	0x0000 ;?ICS_alarmHr+2
0x1F0B	0x0000 ;?ICS_alarmHr+4
; end of ?ICS_alarmHr
;MyProject.c,0 :: ?ICS?lstr8_MyProject
0x1F0D	0x6143 ;?ICS?lstr8_MyProject+0
0x1F0F	0x636E ;?ICS?lstr8_MyProject+2
0x1F11	0x6C65 ;?ICS?lstr8_MyProject+4
0x1F13	0x00 ;?ICS?lstr8_MyProject+6
; end of ?ICS?lstr8_MyProject
;MyProject.c,0 :: ?ICS?lstr9_MyProject
0x1F14	0x5F5F ;?ICS?lstr9_MyProject+0
0x1F16	0x00 ;?ICS?lstr9_MyProject+2
; end of ?ICS?lstr9_MyProject
;MyProject.c,0 :: ?ICS?lstr10_MyProject
0x1F17	0x5F5F ;?ICS?lstr10_MyProject+0
0x1F19	0x00 ;?ICS?lstr10_MyProject+2
; end of ?ICS?lstr10_MyProject
;MyProject.c,0 :: ?ICS?lstr7_MyProject
0x1F1A	0x6153 ;?ICS?lstr7_MyProject+0
0x1F1C	0x6576 ;?ICS?lstr7_MyProject+2
0x1F1E	0x00 ;?ICS?lstr7_MyProject+4
; end of ?ICS?lstr7_MyProject
;MyProject.c,0 :: ?ICS_alarmAP
0x1F1F	0x0000 ;?ICS_alarmAP+0
0x1F21	0x00 ;?ICS_alarmAP+2
; end of ?ICS_alarmAP
;MyProject.c,0 :: ?ICS_time
0x1F22	0x3030 ;?ICS_time+0
0x1F24	0x303A ;?ICS_time+2
0x1F26	0x3A30 ;?ICS_time+4
0x1F28	0x3030 ;?ICS_time+6
0x1F2A	0x5020 ;?ICS_time+8
0x1F2C	0x004D ;?ICS_time+10
; end of ?ICS_time
;MyProject.c,0 :: ?ICS?lstr6_MyProject
0x1F2E	0x3030 ;?ICS?lstr6_MyProject+0
0x1F30	0x00 ;?ICS?lstr6_MyProject+2
; end of ?ICS?lstr6_MyProject
;MyProject.c,0 :: ?ICS_goBackAlarm
0x1F31	0x00 ;?ICS_goBackAlarm+0
; end of ?ICS_goBackAlarm
;MyProject.c,0 :: ?ICS_alText
0x1F32	0x4C41 ;?ICS_alText+0
0x1F34	0x312D ;?ICS_alText+2
0x1F36	0x003A ;?ICS_alText+4
; end of ?ICS_alText
;MyProject.c,0 :: ?ICS?lstr23_MyProject
0x1F38	0x5F5F ;?ICS?lstr23_MyProject+0
0x1F3A	0x005F ;?ICS?lstr23_MyProject+2
; end of ?ICS?lstr23_MyProject
;MyProject.c,0 :: ?ICS?lstr22_MyProject
0x1F3C	0x5F5F ;?ICS?lstr22_MyProject+0
0x1F3E	0x5F5F ;?ICS?lstr22_MyProject+2
0x1F40	0x5F5F ;?ICS?lstr22_MyProject+4
0x1F42	0x00 ;?ICS?lstr22_MyProject+6
; end of ?ICS?lstr22_MyProject
;MyProject.c,0 :: ?ICS?lstr19_MyProject
0x1F43	0x5F5F ;?ICS?lstr19_MyProject+0
0x1F45	0x00 ;?ICS?lstr19_MyProject+2
; end of ?ICS?lstr19_MyProject
;MyProject.c,0 :: ?ICS?lstr20_MyProject
0x1F46	0x5F5F ;?ICS?lstr20_MyProject+0
0x1F48	0x00 ;?ICS?lstr20_MyProject+2
; end of ?ICS?lstr20_MyProject
;MyProject.c,0 :: ?ICS?lstr21_MyProject
0x1F49	0x5F5F ;?ICS?lstr21_MyProject+0
0x1F4B	0x5F5F ;?ICS?lstr21_MyProject+2
0x1F4D	0x00 ;?ICS?lstr21_MyProject+4
; end of ?ICS?lstr21_MyProject
;MyProject.c,0 :: ?ICS?lstr5_MyProject
0x1F4E	0x5B20 ;?ICS?lstr5_MyProject+0
0x1F50	0x6153 ;?ICS?lstr5_MyProject+2
0x1F52	0x6576 ;?ICS?lstr5_MyProject+4
0x1F54	0x205D ;?ICS?lstr5_MyProject+6
0x1F56	0x435B ;?ICS?lstr5_MyProject+8
0x1F58	0x6E61 ;?ICS?lstr5_MyProject+10
0x1F5A	0x6563 ;?ICS?lstr5_MyProject+12
0x1F5C	0x5D6C ;?ICS?lstr5_MyProject+14
0x1F5E	0x00 ;?ICS?lstr5_MyProject+16
; end of ?ICS?lstr5_MyProject
;MyProject.c,0 :: ?ICS?lstr24_MyProject
0x1F5F	0x5F5F ;?ICS?lstr24_MyProject+0
0x1F61	0x5F5F ;?ICS?lstr24_MyProject+2
0x1F63	0x00 ;?ICS?lstr24_MyProject+4
; end of ?ICS?lstr24_MyProject
;MyProject.c,0 :: ?ICS?lstr25_MyProject
0x1F64	0x5F5F ;?ICS?lstr25_MyProject+0
0x1F66	0x00 ;?ICS?lstr25_MyProject+2
; end of ?ICS?lstr25_MyProject
;MyProject.c,0 :: ?ICS?lstr26_MyProject
0x1F67	0x005F ;?ICS?lstr26_MyProject+0
; end of ?ICS?lstr26_MyProject
;MyProject.c,0 :: ?ICS?lstr11_MyProject
0x1F69	0x5F5F ;?ICS?lstr11_MyProject+0
0x1F6B	0x00 ;?ICS?lstr11_MyProject+2
; end of ?ICS?lstr11_MyProject
;MyProject.c,0 :: ?ICS_ringAlarmText
0x1F6C	0x017E ;?ICS_ringAlarmText+0
; end of ?ICS_ringAlarmText
;MyProject.c,0 :: ?ICS?lstr38_MyProject
0x1F6E	0x2020 ;?ICS?lstr38_MyProject+0
0x1F70	0x2020 ;?ICS?lstr38_MyProject+2
0x1F72	0x2020 ;?ICS?lstr38_MyProject+4
0x1F74	0x0020 ;?ICS?lstr38_MyProject+6
; end of ?ICS?lstr38_MyProject
;MyProject.c,0 :: ?ICS?lstr39_MyProject
0x1F76	0x4952 ;?ICS?lstr39_MyProject+0
0x1F78	0x474E ;?ICS?lstr39_MyProject+2
0x1F7A	0x4E49 ;?ICS?lstr39_MyProject+4
0x1F7C	0x0047 ;?ICS?lstr39_MyProject+6
; end of ?ICS?lstr39_MyProject
;MyProject.c,0 :: ?ICS_stopCounter
0x1F7E	0x0000 ;?ICS_stopCounter+0
; end of ?ICS_stopCounter
;MyProject.c,0 :: ?ICS?lstr41_MyProject
0x1F80	0x3030 ;?ICS?lstr41_MyProject+0
0x1F82	0x00 ;?ICS?lstr41_MyProject+2
; end of ?ICS?lstr41_MyProject
;MyProject.c,0 :: ?ICS_snoozeTime
0x1F83	0x018F ;?ICS_snoozeTime+0
; end of ?ICS_snoozeTime
;MyProject.c,0 :: ?ICS?lstr40_MyProject
0x1F85	0x4E53 ;?ICS?lstr40_MyProject+0
0x1F87	0x4F4F ;?ICS?lstr40_MyProject+2
0x1F89	0x495A ;?ICS?lstr40_MyProject+4
0x1F8B	0x474E ;?ICS?lstr40_MyProject+6
0x1F8D	0x2D20 ;?ICS?lstr40_MyProject+8
0x1F8F	0x3020 ;?ICS?lstr40_MyProject+10
0x1F91	0x3A30 ;?ICS?lstr40_MyProject+12
0x1F93	0x3030 ;?ICS?lstr40_MyProject+14
0x1F95	0x00 ;?ICS?lstr40_MyProject+16
; end of ?ICS?lstr40_MyProject
;MyProject.c,0 :: ?ICS_snoozeMax
0x1F96	0x0000 ;?ICS_snoozeMax+0
; end of ?ICS_snoozeMax
;MyProject.c,0 :: ?ICS_snoozeCounter
0x1F98	0x0000 ;?ICS_snoozeCounter+0
; end of ?ICS_snoozeCounter
;MyProject.c,0 :: ?ICS?lstr43_MyProject
0x1F9A	0x6144 ;?ICS?lstr43_MyProject+0
0x1F9C	0x6574 ;?ICS?lstr43_MyProject+2
0x1F9E	0x003A ;?ICS?lstr43_MyProject+4
; end of ?ICS?lstr43_MyProject
;MyProject.c,0 :: ?ICS?lstr30_MyProject
0x1FA0	0x6954 ;?ICS?lstr30_MyProject+0
0x1FA2	0x656D ;?ICS?lstr30_MyProject+2
0x1FA4	0x003A ;?ICS?lstr30_MyProject+4
; end of ?ICS?lstr30_MyProject
;MyProject.c,0 :: ?ICS?lstr31_MyProject
0x1FA6	0x6445 ;?ICS?lstr31_MyProject+0
0x1FA8	0x7469 ;?ICS?lstr31_MyProject+2
0x1FAA	0x4120 ;?ICS?lstr31_MyProject+4
0x1FAC	0x616C ;?ICS?lstr31_MyProject+6
0x1FAE	0x6D72 ;?ICS?lstr31_MyProject+8
0x1FB0	0x313A ;?ICS?lstr31_MyProject+10
0x1FB2	0x327C ;?ICS?lstr31_MyProject+12
0x1FB4	0x337C ;?ICS?lstr31_MyProject+14
0x1FB6	0x00 ;?ICS?lstr31_MyProject+16
; end of ?ICS?lstr31_MyProject
;MyProject.c,0 :: ?ICS?lstr32_MyProject
0x1FB7	0x6553 ;?ICS?lstr32_MyProject+0
0x1FB9	0x3A74 ;?ICS?lstr32_MyProject+2
0x1FBB	0x5420 ;?ICS?lstr32_MyProject+4
0x1FBD	0x6D69 ;?ICS?lstr32_MyProject+6
0x1FBF	0x2065 ;?ICS?lstr32_MyProject+8
0x1FC1	0x207C ;?ICS?lstr32_MyProject+10
0x1FC3	0x6144 ;?ICS?lstr32_MyProject+12
0x1FC5	0x6574 ;?ICS?lstr32_MyProject+14
0x1FC7	0x00 ;?ICS?lstr32_MyProject+16
; end of ?ICS?lstr32_MyProject
;MyProject.c,0 :: ?ICS?lstr29_MyProject
0x1FC8	0x6553 ;?ICS?lstr29_MyProject+0
0x1FCA	0x3A74 ;?ICS?lstr29_MyProject+2
0x1FCC	0x5420 ;?ICS?lstr29_MyProject+4
0x1FCE	0x6D69 ;?ICS?lstr29_MyProject+6
0x1FD0	0x2065 ;?ICS?lstr29_MyProject+8
0x1FD2	0x207C ;?ICS?lstr29_MyProject+10
0x1FD4	0x6144 ;?ICS?lstr29_MyProject+12
0x1FD6	0x6574 ;?ICS?lstr29_MyProject+14
0x1FD8	0x00 ;?ICS?lstr29_MyProject+16
; end of ?ICS?lstr29_MyProject
;MyProject.c,0 :: ?ICS?lstr12_MyProject
0x1FD9	0x5F5F ;?ICS?lstr12_MyProject+0
0x1FDB	0x5F5F ;?ICS?lstr12_MyProject+2
0x1FDD	0x00 ;?ICS?lstr12_MyProject+4
; end of ?ICS?lstr12_MyProject
;MyProject.c,0 :: ?ICS?lstr13_MyProject
0x1FDE	0x5F5F ;?ICS?lstr13_MyProject+0
0x1FE0	0x5F5F ;?ICS?lstr13_MyProject+2
0x1FE2	0x5F5F ;?ICS?lstr13_MyProject+4
0x1FE4	0x00 ;?ICS?lstr13_MyProject+6
; end of ?ICS?lstr13_MyProject
;MyProject.c,0 :: ?ICS?lstr28_MyProject
0x1FE5	0x6445 ;?ICS?lstr28_MyProject+0
0x1FE7	0x7469 ;?ICS?lstr28_MyProject+2
0x1FE9	0x4120 ;?ICS?lstr28_MyProject+4
0x1FEB	0x616C ;?ICS?lstr28_MyProject+6
0x1FED	0x6D72 ;?ICS?lstr28_MyProject+8
0x1FEF	0x313A ;?ICS?lstr28_MyProject+10
0x1FF1	0x327C ;?ICS?lstr28_MyProject+12
0x1FF3	0x337C ;?ICS?lstr28_MyProject+14
0x1FF5	0x00 ;?ICS?lstr28_MyProject+16
; end of ?ICS?lstr28_MyProject
;MyProject.c,0 :: ?ICS?lstr37_MyProject
0x1FF6	0x5F5F ;?ICS?lstr37_MyProject+0
0x1FF8	0x5F5F ;?ICS?lstr37_MyProject+2
0x1FFA	0x00 ;?ICS?lstr37_MyProject+4
; end of ?ICS?lstr37_MyProject
;MyProject.c,0 :: ?ICS?lstr42_MyProject
0x1FFB	0x6954 ;?ICS?lstr42_MyProject+0
0x1FFD	0x656D ;?ICS?lstr42_MyProject+2
0x1FFF	0x003A ;?ICS?lstr42_MyProject+4
; end of ?ICS?lstr42_MyProject
;MyProject.c,0 :: ?ICS?lstr36_MyProject
0x2001	0x5F5F ;?ICS?lstr36_MyProject+0
0x2003	0x5F5F ;?ICS?lstr36_MyProject+2
0x2005	0x00 ;?ICS?lstr36_MyProject+4
; end of ?ICS?lstr36_MyProject
;MyProject.c,0 :: ?ICS?lstr33_MyProject
0x2006	0x005F ;?ICS?lstr33_MyProject+0
; end of ?ICS?lstr33_MyProject
;MyProject.c,0 :: ?ICS?lstr34_MyProject
0x2008	0x005F ;?ICS?lstr34_MyProject+0
; end of ?ICS?lstr34_MyProject
;MyProject.c,0 :: ?ICS?lstr35_MyProject
0x200A	0x005F ;?ICS?lstr35_MyProject+0
; end of ?ICS?lstr35_MyProject
;MyProject.c,0 :: ?ICS?lstr18_MyProject
0x200C	0x5F5F ;?ICS?lstr18_MyProject+0
0x200E	0x00 ;?ICS?lstr18_MyProject+2
; end of ?ICS?lstr18_MyProject
;MyProject.c,0 :: ?ICS?lstr15_MyProject
0x200F	0x5B20 ;?ICS?lstr15_MyProject+0
0x2011	0x6153 ;?ICS?lstr15_MyProject+2
0x2013	0x6576 ;?ICS?lstr15_MyProject+4
0x2015	0x205D ;?ICS?lstr15_MyProject+6
0x2017	0x435B ;?ICS?lstr15_MyProject+8
0x2019	0x6E61 ;?ICS?lstr15_MyProject+10
0x201B	0x6563 ;?ICS?lstr15_MyProject+12
0x201D	0x5D6C ;?ICS?lstr15_MyProject+14
0x201F	0x00 ;?ICS?lstr15_MyProject+16
; end of ?ICS?lstr15_MyProject
;MyProject.c,0 :: ?ICS_date
0x2020	0x3030 ;?ICS_date+0
0x2022	0x302D ;?ICS_date+2
0x2024	0x2D30 ;?ICS_date+4
0x2026	0x3030 ;?ICS_date+6
0x2028	0x00 ;?ICS_date+8
; end of ?ICS_date
;MyProject.c,0 :: ?ICS_set
0x2029	0x00 ;?ICS_set+0
; end of ?ICS_set
;MyProject.c,0 :: ?ICS_set_count
0x202A	0x00 ;?ICS_set_count+0
; end of ?ICS_set_count
;MyProject.c,0 :: ?ICS_alarmStatus
0x202B	0x0101 ;?ICS_alarmStatus+0
0x202D	0x01 ;?ICS_alarmStatus+2
; end of ?ICS_alarmStatus
;MyProject.c,0 :: ?ICS_menuAlarmText
0x202E	0x016D ;?ICS_menuAlarmText+0
0x2030	0x015C ;?ICS_menuAlarmText+2
; end of ?ICS_menuAlarmText
;MyProject.c,0 :: ?ICS_alarmTunes
0x2032	0x0203 ;?ICS_alarmTunes+0
0x2034	0x01 ;?ICS_alarmTunes+2
; end of ?ICS_alarmTunes
;MyProject.c,0 :: ?ICS?lstr14_MyProject
0x2035	0x6144 ;?ICS?lstr14_MyProject+0
0x2037	0x6574 ;?ICS?lstr14_MyProject+2
0x2039	0x003A ;?ICS?lstr14_MyProject+4
; end of ?ICS?lstr14_MyProject
;MyProject.c,0 :: ?ICS_snoozeTimes
0x203B	0x020F ;?ICS_snoozeTimes+0
0x203D	0x05 ;?ICS_snoozeTimes+2
; end of ?ICS_snoozeTimes
;MyProject.c,0 :: ?ICS?lstr17_MyProject
0x203E	0x6143 ;?ICS?lstr17_MyProject+0
0x2040	0x636E ;?ICS?lstr17_MyProject+2
0x2042	0x6C65 ;?ICS?lstr17_MyProject+4
0x2044	0x00 ;?ICS?lstr17_MyProject+6
; end of ?ICS?lstr17_MyProject
;MyProject.c,0 :: ?ICS?lstr16_MyProject
0x2045	0x6153 ;?ICS?lstr16_MyProject+0
0x2047	0x6576 ;?ICS?lstr16_MyProject+2
0x2049	0x00 ;?ICS?lstr16_MyProject+4
; end of ?ICS?lstr16_MyProject
;MyProject.c,0 :: ?ICS?lstr2_MyProject
0x204A	0x6E53 ;?ICS?lstr2_MyProject+0
0x204C	0x6F6F ;?ICS?lstr2_MyProject+2
0x204E	0x657A ;?ICS?lstr2_MyProject+4
0x2050	0x5F3A ;?ICS?lstr2_MyProject+6
0x2052	0x7C5F ;?ICS?lstr2_MyProject+8
0x2054	0x6F54 ;?ICS?lstr2_MyProject+10
0x2056	0x656E ;?ICS?lstr2_MyProject+12
0x2058	0x5F3A ;?ICS?lstr2_MyProject+14
0x205A	0x00 ;?ICS?lstr2_MyProject+16
; end of ?ICS?lstr2_MyProject
;MyProject.c,0 :: ?ICS?lstr1_MyProject
0x205B	0x6C41 ;?ICS?lstr1_MyProject+0
0x205D	0x7261 ;?ICS?lstr1_MyProject+2
0x205F	0x2D6D ;?ICS?lstr1_MyProject+4
0x2061	0x3A31 ;?ICS?lstr1_MyProject+6
0x2063	0x5F4F ;?ICS?lstr1_MyProject+8
0x2065	0x7C20 ;?ICS?lstr1_MyProject+10
0x2067	0x6954 ;?ICS?lstr1_MyProject+12
0x2069	0x656D ;?ICS?lstr1_MyProject+14
0x206B	0x00 ;?ICS?lstr1_MyProject+16
; end of ?ICS?lstr1_MyProject
;MyProject.c,0 :: ?ICS?lstr3_MyProject
0x206C	0x6C41 ;?ICS?lstr3_MyProject+0
0x206E	0x7261 ;?ICS?lstr3_MyProject+2
0x2070	0x206D ;?ICS?lstr3_MyProject+4
0x2072	0x3A31 ;?ICS?lstr3_MyProject+6
0x2074	0x5220 ;?ICS?lstr3_MyProject+8
0x2076	0x4E49 ;?ICS?lstr3_MyProject+10
0x2078	0x4947 ;?ICS?lstr3_MyProject+12
0x207A	0x474E ;?ICS?lstr3_MyProject+14
0x207C	0x00 ;?ICS?lstr3_MyProject+16
; end of ?ICS?lstr3_MyProject
;MyProject.c,0 :: ?ICS?lstr4_MyProject
0x207D	0x3030 ;?ICS?lstr4_MyProject+0
0x207F	0x00 ;?ICS?lstr4_MyProject+2
; end of ?ICS?lstr4_MyProject
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [248]    _interrupt
0x0100      [22]    _Delay_5500us
0x0116      [10]    _Delay_50us
0x0120       [6]    _Delay_1us
0x0126      [88]    _Div_16x16_S_L
0x017E     [126]    _Lcd_Cmd
0x01FC      [26]    _I2C1_Is_Idle
0x0216      [34]    _I2C1_Wr
0x0238      [66]    _I2C1_Start
0x027A       [4]    _I2C1_Stop
0x027E     [198]    _Div_16x16_S
0x0344      [14]    _Lcd_Chr_CP
0x0352      [26]    _BCD2UpperCh
0x036C      [14]    _BCD2LowerCh
0x037A      [80]    _Mul_16X16_U
0x03CA     [176]    _time2Str
0x047A      [96]    _BCD2Binary
0x04DA     [146]    _Binary2BCD
0x056C      [26]    _write_ds1307
0x0586     [126]    _Lcd_Out
0x0604      [46]    _abs
0x0632     [460]    _populateAlarm
0x07FE      [10]    _I2C1_Repeated_Start
0x0808      [44]    _I2C1_Rd
0x0834    [1270]    _inputTime
0x0D2A      [74]    _date2Str
0x0D74    [1302]    _inputDate
0x128A     [902]    _menuAlarm2
0x1610      [58]    _read_ds1307
0x164A     [198]    _Lcd_Init
0x1710      [22]    _I2C1_Init
0x1726      [16]    ___CC2DW
0x1736     [122]    _readTime
0x17B0     [982]    _playTone
0x1B86     [596]    _menuMain2
0x1DDA     [298]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    R3
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [2]    memmove_tt_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    R4
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [3]    _alarmMinute
0x0019       [6]    _alarmHr
0x001F       [7]    ?lstr8_MyProject
0x0026       [3]    ?lstr9_MyProject
0x0029       [3]    ?lstr10_MyProject
0x002C       [5]    ?lstr7_MyProject
0x0031       [3]    _alarmAP
0x0034      [12]    _time
0x0040       [3]    ?lstr6_MyProject
0x0043       [1]    _goBackAlarm
0x0044       [6]    _alText
0x004A       [4]    ?lstr23_MyProject
0x004E       [7]    ?lstr22_MyProject
0x0055       [3]    ?lstr19_MyProject
0x0058       [3]    ?lstr20_MyProject
0x005B       [5]    ?lstr21_MyProject
0x0060      [17]    ?lstr5_MyProject
0x0071       [5]    ?lstr24_MyProject
0x0076       [3]    ?lstr25_MyProject
0x0079       [2]    ?lstr26_MyProject
0x007B       [3]    ?lstr11_MyProject
0x007E       [2]    _ringAlarmText
0x0080       [8]    ?lstr38_MyProject
0x0088       [8]    ?lstr39_MyProject
0x0090       [2]    _stopCounter
0x0092       [3]    ?lstr41_MyProject
0x0095       [2]    _snoozeTime
0x0097      [17]    ?lstr40_MyProject
0x00A8       [2]    _snoozeMax
0x00AA       [2]    _snoozeCounter
0x00AC       [6]    ?lstr43_MyProject
0x00B2       [6]    ?lstr30_MyProject
0x00B8      [17]    ?lstr31_MyProject
0x00C9      [17]    ?lstr32_MyProject
0x00DA      [17]    ?lstr29_MyProject
0x00EB       [5]    ?lstr12_MyProject
0x00F0       [7]    ?lstr13_MyProject
0x00F7      [17]    ?lstr28_MyProject
0x0108       [5]    ?lstr37_MyProject
0x010D       [6]    ?lstr42_MyProject
0x0113       [5]    ?lstr36_MyProject
0x0118       [2]    ?lstr33_MyProject
0x011A       [2]    ?lstr34_MyProject
0x011C       [2]    ?lstr35_MyProject
0x011E       [3]    ?lstr18_MyProject
0x0121      [17]    ?lstr15_MyProject
0x0132       [9]    _date
0x013B       [1]    _set
0x013C       [1]    _set_count
0x013D       [3]    _alarmStatus
0x0140       [4]    _menuAlarmText
0x0144       [3]    _alarmTunes
0x0147       [6]    ?lstr14_MyProject
0x014D       [3]    _snoozeTimes
0x0150       [7]    ?lstr17_MyProject
0x0157       [5]    ?lstr16_MyProject
0x015C      [17]    ?lstr2_MyProject
0x016D      [17]    ?lstr1_MyProject
0x017E      [17]    ?lstr3_MyProject
0x018F       [3]    ?lstr4_MyProject
0x0192       [1]    _ap
0x0193       [1]    _ap2
0x0194       [2]    _hour
0x0196       [2]    _hr2
0x0198       [2]    _hr
0x019A       [2]    _hour2
0x019C       [1]    _second2
0x019D       [1]    _second
0x019E       [1]    _minute2
0x019F       [2]    _nowAP
0x01A1       [2]    _nowHrBin
0x01A3       [1]    _nowMinBin
0x01A4       [2]    _nowSecBin
0x01A6       [0]    __Lib_Lcd_cmd_status
0x01A7       [1]    _dday
0x01A8       [1]    _loopcount
0x01A9       [1]    _year
0x01AA       [1]    _month
0x01AB       [1]    _minute
0x01AC       [1]    _day
0x01AD       [4]    FARG_I2C1_Init_clock
0x01AD       [2]    FLOC__playTone
0x01B1       [2]    FARG_menuAlarm2_alarmNo
0x01B1       [1]    FARG_read_ds1307_address
0x01B2       [1]    read_ds1307_r_data_L0
0x01B3       [2]    FARG_populateAlarm_alarmNo
0x01B3       [1]    FARG_I2C1_Rd_ack
0x01B3       [2]    FARG_inputTime_mode
0x01B5       [2]    FLOC__populateAlarm
0x01B5       [2]    FARG_inputTime_setStr
0x01B7       [2]    FLOC__inputTime
0x01B9       [1]    FARG_write_ds1307_address
0x01B9       [2]    FARG_abs_a
0x01B9       [2]    FARG_Binary2BCD_a
0x01B9       [2]    FARG_BCD2Binary_a
0x01B9       [2]    FARG_time2Str_temp
0x01B9       [1]    FARG_Lcd_Out_row
0x01BA       [1]    FARG_Lcd_Out_column
0x01BA       [1]    FARG_write_ds1307_w_data
0x01BB       [2]    FLOC__Binary2BCD
0x01BB       [2]    FLOC__BCD2Binary
0x01BB       [2]    FARG_Lcd_Out_text
0x01BD       [1]    Lcd_Out_i_L0
0x01BE       [1]    FARG_BCD2UpperCh_bcd
0x01BE       [2]    I2C1_Start_j_L0
0x01BE       [1]    FARG_Lcd_Chr_CP_out_char
0x01BE       [1]    FARG_BCD2LowerCh_bcd
0x01BE       [1]    FARG_I2C1_Wr_data_
0x01C0       [1]    FARG_Lcd_Cmd_out_char
0x0F80       [1]    PORTA
0x0F81       [0]    LCD_D7
0x0F81       [0]    LCD_D5
0x0F81       [0]    LCD_D6
0x0F81       [0]    LCD_D4
0x0F81       [0]    RB2_bit
0x0F81       [0]    LCD_RS
0x0F81       [0]    LCD_EN
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB3_bit
0x0F83       [1]    PORTD
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC3_bit
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC3_bit
0x0F95       [1]    TRISD
0x0F9E       [1]    PIR1
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FC5       [1]    SSPCON2
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    GIE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0006       [2]    ?lstr_27_MyProject
0x1F04       [3]    ?ICS_alarmMinute
0x1F07       [6]    ?ICS_alarmHr
0x1F0D       [7]    ?ICS?lstr8_MyProject
0x1F14       [3]    ?ICS?lstr9_MyProject
0x1F17       [3]    ?ICS?lstr10_MyProject
0x1F1A       [5]    ?ICS?lstr7_MyProject
0x1F1F       [3]    ?ICS_alarmAP
0x1F22      [12]    ?ICS_time
0x1F2E       [3]    ?ICS?lstr6_MyProject
0x1F31       [1]    ?ICS_goBackAlarm
0x1F32       [6]    ?ICS_alText
0x1F38       [4]    ?ICS?lstr23_MyProject
0x1F3C       [7]    ?ICS?lstr22_MyProject
0x1F43       [3]    ?ICS?lstr19_MyProject
0x1F46       [3]    ?ICS?lstr20_MyProject
0x1F49       [5]    ?ICS?lstr21_MyProject
0x1F4E      [17]    ?ICS?lstr5_MyProject
0x1F5F       [5]    ?ICS?lstr24_MyProject
0x1F64       [3]    ?ICS?lstr25_MyProject
0x1F67       [2]    ?ICS?lstr26_MyProject
0x1F69       [3]    ?ICS?lstr11_MyProject
0x1F6C       [2]    ?ICS_ringAlarmText
0x1F6E       [8]    ?ICS?lstr38_MyProject
0x1F76       [8]    ?ICS?lstr39_MyProject
0x1F7E       [2]    ?ICS_stopCounter
0x1F80       [3]    ?ICS?lstr41_MyProject
0x1F83       [2]    ?ICS_snoozeTime
0x1F85      [17]    ?ICS?lstr40_MyProject
0x1F96       [2]    ?ICS_snoozeMax
0x1F98       [2]    ?ICS_snoozeCounter
0x1F9A       [6]    ?ICS?lstr43_MyProject
0x1FA0       [6]    ?ICS?lstr30_MyProject
0x1FA6      [17]    ?ICS?lstr31_MyProject
0x1FB7      [17]    ?ICS?lstr32_MyProject
0x1FC8      [17]    ?ICS?lstr29_MyProject
0x1FD9       [5]    ?ICS?lstr12_MyProject
0x1FDE       [7]    ?ICS?lstr13_MyProject
0x1FE5      [17]    ?ICS?lstr28_MyProject
0x1FF6       [5]    ?ICS?lstr37_MyProject
0x1FFB       [6]    ?ICS?lstr42_MyProject
0x2001       [5]    ?ICS?lstr36_MyProject
0x2006       [2]    ?ICS?lstr33_MyProject
0x2008       [2]    ?ICS?lstr34_MyProject
0x200A       [2]    ?ICS?lstr35_MyProject
0x200C       [3]    ?ICS?lstr18_MyProject
0x200F      [17]    ?ICS?lstr15_MyProject
0x2020       [9]    ?ICS_date
0x2029       [1]    ?ICS_set
0x202A       [1]    ?ICS_set_count
0x202B       [3]    ?ICS_alarmStatus
0x202E       [4]    ?ICS_menuAlarmText
0x2032       [3]    ?ICS_alarmTunes
0x2035       [6]    ?ICS?lstr14_MyProject
0x203B       [3]    ?ICS_snoozeTimes
0x203E       [7]    ?ICS?lstr17_MyProject
0x2045       [5]    ?ICS?lstr16_MyProject
0x204A      [17]    ?ICS?lstr2_MyProject
0x205B      [17]    ?ICS?lstr1_MyProject
0x206C      [17]    ?ICS?lstr3_MyProject
0x207D       [3]    ?ICS?lstr4_MyProject
